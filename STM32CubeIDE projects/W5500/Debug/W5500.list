
W5500.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000052e4  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000012c  080053f0  080053f0  000153f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800551c  0800551c  000204dc  2**0
                  CONTENTS
  4 .ARM          00000000  0800551c  0800551c  000204dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800551c  0800551c  000204dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800551c  0800551c  0001551c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08005524  08005524  00015524  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000004dc  20000000  0800552c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002108  200004e0  08005a08  000204e0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200025e8  08005a08  000225e8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000204dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00011484  00000000  00000000  00020505  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002aa1  00000000  00000000  00031989  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010c8  00000000  00000000  00034430  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fd0  00000000  00000000  000354f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a730  00000000  00000000  000364c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011992  00000000  00000000  00050bf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008f0eb  00000000  00000000  0006258a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f1675  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004690  00000000  00000000  000f16c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200004e0 	.word	0x200004e0
 8000128:	00000000 	.word	0x00000000
 800012c:	080053d8 	.word	0x080053d8

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200004e4 	.word	0x200004e4
 8000148:	080053d8 	.word	0x080053d8

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <_ZN5W5500C1EP19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_t>:
 800015c:	b580      	push	{r7, lr}
 800015e:	b084      	sub	sp, #16
 8000160:	af00      	add	r7, sp, #0
 8000162:	60f8      	str	r0, [r7, #12]
 8000164:	60b9      	str	r1, [r7, #8]
 8000166:	607a      	str	r2, [r7, #4]
 8000168:	807b      	strh	r3, [r7, #2]
 800016a:	68fb      	ldr	r3, [r7, #12]
 800016c:	3310      	adds	r3, #16
 800016e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000172:	2100      	movs	r1, #0
 8000174:	4618      	mov	r0, r3
 8000176:	f005 f8a1 	bl	80052bc <memset>
 800017a:	68fb      	ldr	r3, [r7, #12]
 800017c:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8000180:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000184:	2100      	movs	r1, #0
 8000186:	4618      	mov	r0, r3
 8000188:	f005 f898 	bl	80052bc <memset>
 800018c:	68fb      	ldr	r3, [r7, #12]
 800018e:	68ba      	ldr	r2, [r7, #8]
 8000190:	601a      	str	r2, [r3, #0]
 8000192:	68fb      	ldr	r3, [r7, #12]
 8000194:	687a      	ldr	r2, [r7, #4]
 8000196:	605a      	str	r2, [r3, #4]
 8000198:	68fb      	ldr	r3, [r7, #12]
 800019a:	887a      	ldrh	r2, [r7, #2]
 800019c:	819a      	strh	r2, [r3, #12]
 800019e:	68fb      	ldr	r3, [r7, #12]
 80001a0:	69ba      	ldr	r2, [r7, #24]
 80001a2:	609a      	str	r2, [r3, #8]
 80001a4:	68fb      	ldr	r3, [r7, #12]
 80001a6:	8bba      	ldrh	r2, [r7, #28]
 80001a8:	81da      	strh	r2, [r3, #14]
 80001aa:	68fb      	ldr	r3, [r7, #12]
 80001ac:	4618      	mov	r0, r3
 80001ae:	3710      	adds	r7, #16
 80001b0:	46bd      	mov	sp, r7
 80001b2:	bd80      	pop	{r7, pc}

080001b4 <_ZN5W5500D1Ev>:
 80001b4:	b480      	push	{r7}
 80001b6:	b083      	sub	sp, #12
 80001b8:	af00      	add	r7, sp, #0
 80001ba:	6078      	str	r0, [r7, #4]
 80001bc:	687b      	ldr	r3, [r7, #4]
 80001be:	4618      	mov	r0, r3
 80001c0:	370c      	adds	r7, #12
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bc80      	pop	{r7}
 80001c6:	4770      	bx	lr

080001c8 <_ZN5W55005resetEv>:
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b082      	sub	sp, #8
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	6898      	ldr	r0, [r3, #8]
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	89db      	ldrh	r3, [r3, #14]
 80001d8:	2200      	movs	r2, #0
 80001da:	4619      	mov	r1, r3
 80001dc:	f002 fe14 	bl	8002e08 <HAL_GPIO_WritePin>
 80001e0:	2001      	movs	r0, #1
 80001e2:	f002 f8ab 	bl	800233c <HAL_Delay>
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	6898      	ldr	r0, [r3, #8]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	89db      	ldrh	r3, [r3, #14]
 80001ee:	2201      	movs	r2, #1
 80001f0:	4619      	mov	r1, r3
 80001f2:	f002 fe09 	bl	8002e08 <HAL_GPIO_WritePin>
 80001f6:	2001      	movs	r0, #1
 80001f8:	f002 f8a0 	bl	800233c <HAL_Delay>
 80001fc:	bf00      	nop
 80001fe:	3708      	adds	r7, #8
 8000200:	46bd      	mov	sp, r7
 8000202:	bd80      	pop	{r7, pc}

08000204 <_ZN5W550015readByteFromCRBEh>:
 8000204:	b580      	push	{r7, lr}
 8000206:	b084      	sub	sp, #16
 8000208:	af02      	add	r7, sp, #8
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	2200      	movs	r2, #0
 8000214:	741a      	strb	r2, [r3, #16]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	78fa      	ldrb	r2, [r7, #3]
 800021a:	745a      	strb	r2, [r3, #17]
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	2200      	movs	r2, #0
 8000220:	749a      	strb	r2, [r3, #18]
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	6858      	ldr	r0, [r3, #4]
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	899b      	ldrh	r3, [r3, #12]
 800022a:	2200      	movs	r2, #0
 800022c:	4619      	mov	r1, r3
 800022e:	f002 fdeb 	bl	8002e08 <HAL_GPIO_WritePin>
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	6818      	ldr	r0, [r3, #0]
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	f103 0110 	add.w	r1, r3, #16
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	f503 7288 	add.w	r2, r3, #272	; 0x110
 8000242:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000246:	9300      	str	r3, [sp, #0]
 8000248:	2304      	movs	r3, #4
 800024a:	f003 fbe9 	bl	8003a20 <HAL_SPI_TransmitReceive>
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	6858      	ldr	r0, [r3, #4]
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	899b      	ldrh	r3, [r3, #12]
 8000256:	2201      	movs	r2, #1
 8000258:	4619      	mov	r1, r3
 800025a:	f002 fdd5 	bl	8002e08 <HAL_GPIO_WritePin>
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	f893 3113 	ldrb.w	r3, [r3, #275]	; 0x113
 8000264:	4618      	mov	r0, r3
 8000266:	3708      	adds	r7, #8
 8000268:	46bd      	mov	sp, r7
 800026a:	bd80      	pop	{r7, pc}

0800026c <_ZN5W550015writeArrayToCRBEPhhh>:
 800026c:	b580      	push	{r7, lr}
 800026e:	b086      	sub	sp, #24
 8000270:	af00      	add	r7, sp, #0
 8000272:	60f8      	str	r0, [r7, #12]
 8000274:	60b9      	str	r1, [r7, #8]
 8000276:	4611      	mov	r1, r2
 8000278:	461a      	mov	r2, r3
 800027a:	460b      	mov	r3, r1
 800027c:	71fb      	strb	r3, [r7, #7]
 800027e:	4613      	mov	r3, r2
 8000280:	71bb      	strb	r3, [r7, #6]
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	2200      	movs	r2, #0
 8000286:	741a      	strb	r2, [r3, #16]
 8000288:	68fb      	ldr	r3, [r7, #12]
 800028a:	79ba      	ldrb	r2, [r7, #6]
 800028c:	745a      	strb	r2, [r3, #17]
 800028e:	68fb      	ldr	r3, [r7, #12]
 8000290:	2204      	movs	r2, #4
 8000292:	749a      	strb	r2, [r3, #18]
 8000294:	2300      	movs	r3, #0
 8000296:	617b      	str	r3, [r7, #20]
 8000298:	79fb      	ldrb	r3, [r7, #7]
 800029a:	697a      	ldr	r2, [r7, #20]
 800029c:	429a      	cmp	r2, r3
 800029e:	da0d      	bge.n	80002bc <_ZN5W550015writeArrayToCRBEPhhh+0x50>
 80002a0:	697b      	ldr	r3, [r7, #20]
 80002a2:	68ba      	ldr	r2, [r7, #8]
 80002a4:	441a      	add	r2, r3
 80002a6:	697b      	ldr	r3, [r7, #20]
 80002a8:	3303      	adds	r3, #3
 80002aa:	7811      	ldrb	r1, [r2, #0]
 80002ac:	68fa      	ldr	r2, [r7, #12]
 80002ae:	4413      	add	r3, r2
 80002b0:	460a      	mov	r2, r1
 80002b2:	741a      	strb	r2, [r3, #16]
 80002b4:	697b      	ldr	r3, [r7, #20]
 80002b6:	3301      	adds	r3, #1
 80002b8:	617b      	str	r3, [r7, #20]
 80002ba:	e7ed      	b.n	8000298 <_ZN5W550015writeArrayToCRBEPhhh+0x2c>
 80002bc:	68fb      	ldr	r3, [r7, #12]
 80002be:	6858      	ldr	r0, [r3, #4]
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	899b      	ldrh	r3, [r3, #12]
 80002c4:	2200      	movs	r2, #0
 80002c6:	4619      	mov	r1, r3
 80002c8:	f002 fd9e 	bl	8002e08 <HAL_GPIO_WritePin>
 80002cc:	68fb      	ldr	r3, [r7, #12]
 80002ce:	6818      	ldr	r0, [r3, #0]
 80002d0:	68fb      	ldr	r3, [r7, #12]
 80002d2:	f103 0110 	add.w	r1, r3, #16
 80002d6:	79fb      	ldrb	r3, [r7, #7]
 80002d8:	b29b      	uxth	r3, r3
 80002da:	3303      	adds	r3, #3
 80002dc:	b29a      	uxth	r2, r3
 80002de:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80002e2:	f003 fa61 	bl	80037a8 <HAL_SPI_Transmit>
 80002e6:	68fb      	ldr	r3, [r7, #12]
 80002e8:	6858      	ldr	r0, [r3, #4]
 80002ea:	68fb      	ldr	r3, [r7, #12]
 80002ec:	899b      	ldrh	r3, [r3, #12]
 80002ee:	2201      	movs	r2, #1
 80002f0:	4619      	mov	r1, r3
 80002f2:	f002 fd89 	bl	8002e08 <HAL_GPIO_WritePin>
 80002f6:	bf00      	nop
 80002f8:	3718      	adds	r7, #24
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}

080002fe <_ZN5W550015readByteFromSRBEhh>:
 80002fe:	b580      	push	{r7, lr}
 8000300:	b084      	sub	sp, #16
 8000302:	af02      	add	r7, sp, #8
 8000304:	6078      	str	r0, [r7, #4]
 8000306:	460b      	mov	r3, r1
 8000308:	70fb      	strb	r3, [r7, #3]
 800030a:	4613      	mov	r3, r2
 800030c:	70bb      	strb	r3, [r7, #2]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	2200      	movs	r2, #0
 8000312:	741a      	strb	r2, [r3, #16]
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	78ba      	ldrb	r2, [r7, #2]
 8000318:	745a      	strb	r2, [r3, #17]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	78fa      	ldrb	r2, [r7, #3]
 800031e:	749a      	strb	r2, [r3, #18]
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	6858      	ldr	r0, [r3, #4]
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	899b      	ldrh	r3, [r3, #12]
 8000328:	2200      	movs	r2, #0
 800032a:	4619      	mov	r1, r3
 800032c:	f002 fd6c 	bl	8002e08 <HAL_GPIO_WritePin>
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	6818      	ldr	r0, [r3, #0]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	f103 0110 	add.w	r1, r3, #16
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	f503 7288 	add.w	r2, r3, #272	; 0x110
 8000340:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000344:	9300      	str	r3, [sp, #0]
 8000346:	2304      	movs	r3, #4
 8000348:	f003 fb6a 	bl	8003a20 <HAL_SPI_TransmitReceive>
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	6858      	ldr	r0, [r3, #4]
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	899b      	ldrh	r3, [r3, #12]
 8000354:	2201      	movs	r2, #1
 8000356:	4619      	mov	r1, r3
 8000358:	f002 fd56 	bl	8002e08 <HAL_GPIO_WritePin>
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	f893 3113 	ldrb.w	r3, [r3, #275]	; 0x113
 8000362:	4618      	mov	r0, r3
 8000364:	3708      	adds	r7, #8
 8000366:	46bd      	mov	sp, r7
 8000368:	bd80      	pop	{r7, pc}

0800036a <_ZN5W550015readWordFromSRBEhh>:
 800036a:	b580      	push	{r7, lr}
 800036c:	b086      	sub	sp, #24
 800036e:	af02      	add	r7, sp, #8
 8000370:	6078      	str	r0, [r7, #4]
 8000372:	460b      	mov	r3, r1
 8000374:	70fb      	strb	r3, [r7, #3]
 8000376:	4613      	mov	r3, r2
 8000378:	70bb      	strb	r3, [r7, #2]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	2200      	movs	r2, #0
 800037e:	741a      	strb	r2, [r3, #16]
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	78ba      	ldrb	r2, [r7, #2]
 8000384:	745a      	strb	r2, [r3, #17]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	78fa      	ldrb	r2, [r7, #3]
 800038a:	749a      	strb	r2, [r3, #18]
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	6858      	ldr	r0, [r3, #4]
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	899b      	ldrh	r3, [r3, #12]
 8000394:	2200      	movs	r2, #0
 8000396:	4619      	mov	r1, r3
 8000398:	f002 fd36 	bl	8002e08 <HAL_GPIO_WritePin>
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	6818      	ldr	r0, [r3, #0]
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	f103 0110 	add.w	r1, r3, #16
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	f503 7288 	add.w	r2, r3, #272	; 0x110
 80003ac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003b0:	9300      	str	r3, [sp, #0]
 80003b2:	2305      	movs	r3, #5
 80003b4:	f003 fb34 	bl	8003a20 <HAL_SPI_TransmitReceive>
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	6858      	ldr	r0, [r3, #4]
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	899b      	ldrh	r3, [r3, #12]
 80003c0:	2201      	movs	r2, #1
 80003c2:	4619      	mov	r1, r3
 80003c4:	f002 fd20 	bl	8002e08 <HAL_GPIO_WritePin>
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	f893 3114 	ldrb.w	r3, [r3, #276]	; 0x114
 80003ce:	733b      	strb	r3, [r7, #12]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	f893 3113 	ldrb.w	r3, [r3, #275]	; 0x113
 80003d6:	737b      	strb	r3, [r7, #13]
 80003d8:	89bb      	ldrh	r3, [r7, #12]
 80003da:	4618      	mov	r0, r3
 80003dc:	3710      	adds	r7, #16
 80003de:	46bd      	mov	sp, r7
 80003e0:	bd80      	pop	{r7, pc}

080003e2 <_ZN5W550014writeByteToSRBEhhh>:
 80003e2:	b580      	push	{r7, lr}
 80003e4:	b082      	sub	sp, #8
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	6078      	str	r0, [r7, #4]
 80003ea:	4608      	mov	r0, r1
 80003ec:	4611      	mov	r1, r2
 80003ee:	461a      	mov	r2, r3
 80003f0:	4603      	mov	r3, r0
 80003f2:	70fb      	strb	r3, [r7, #3]
 80003f4:	460b      	mov	r3, r1
 80003f6:	70bb      	strb	r3, [r7, #2]
 80003f8:	4613      	mov	r3, r2
 80003fa:	707b      	strb	r3, [r7, #1]
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	2200      	movs	r2, #0
 8000400:	741a      	strb	r2, [r3, #16]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	787a      	ldrb	r2, [r7, #1]
 8000406:	745a      	strb	r2, [r3, #17]
 8000408:	78fb      	ldrb	r3, [r7, #3]
 800040a:	f043 0304 	orr.w	r3, r3, #4
 800040e:	b2da      	uxtb	r2, r3
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	749a      	strb	r2, [r3, #18]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	78ba      	ldrb	r2, [r7, #2]
 8000418:	74da      	strb	r2, [r3, #19]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	6858      	ldr	r0, [r3, #4]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	899b      	ldrh	r3, [r3, #12]
 8000422:	2200      	movs	r2, #0
 8000424:	4619      	mov	r1, r3
 8000426:	f002 fcef 	bl	8002e08 <HAL_GPIO_WritePin>
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	6818      	ldr	r0, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	f103 0110 	add.w	r1, r3, #16
 8000434:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000438:	2204      	movs	r2, #4
 800043a:	f003 f9b5 	bl	80037a8 <HAL_SPI_Transmit>
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	6858      	ldr	r0, [r3, #4]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	899b      	ldrh	r3, [r3, #12]
 8000446:	2201      	movs	r2, #1
 8000448:	4619      	mov	r1, r3
 800044a:	f002 fcdd 	bl	8002e08 <HAL_GPIO_WritePin>
 800044e:	bf00      	nop
 8000450:	3708      	adds	r7, #8
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <_ZN5W550014writeWordToSRBEhth>:
 8000456:	b580      	push	{r7, lr}
 8000458:	b084      	sub	sp, #16
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
 800045e:	4608      	mov	r0, r1
 8000460:	4611      	mov	r1, r2
 8000462:	461a      	mov	r2, r3
 8000464:	4603      	mov	r3, r0
 8000466:	70fb      	strb	r3, [r7, #3]
 8000468:	460b      	mov	r3, r1
 800046a:	803b      	strh	r3, [r7, #0]
 800046c:	4613      	mov	r3, r2
 800046e:	70bb      	strb	r3, [r7, #2]
 8000470:	883b      	ldrh	r3, [r7, #0]
 8000472:	81bb      	strh	r3, [r7, #12]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	2200      	movs	r2, #0
 8000478:	741a      	strb	r2, [r3, #16]
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	78ba      	ldrb	r2, [r7, #2]
 800047e:	745a      	strb	r2, [r3, #17]
 8000480:	78fb      	ldrb	r3, [r7, #3]
 8000482:	f043 0304 	orr.w	r3, r3, #4
 8000486:	b2da      	uxtb	r2, r3
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	749a      	strb	r2, [r3, #18]
 800048c:	7b7a      	ldrb	r2, [r7, #13]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	74da      	strb	r2, [r3, #19]
 8000492:	7b3a      	ldrb	r2, [r7, #12]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	751a      	strb	r2, [r3, #20]
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	6858      	ldr	r0, [r3, #4]
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	899b      	ldrh	r3, [r3, #12]
 80004a0:	2200      	movs	r2, #0
 80004a2:	4619      	mov	r1, r3
 80004a4:	f002 fcb0 	bl	8002e08 <HAL_GPIO_WritePin>
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	6818      	ldr	r0, [r3, #0]
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	f103 0110 	add.w	r1, r3, #16
 80004b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80004b6:	2205      	movs	r2, #5
 80004b8:	f003 f976 	bl	80037a8 <HAL_SPI_Transmit>
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	6858      	ldr	r0, [r3, #4]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	899b      	ldrh	r3, [r3, #12]
 80004c4:	2201      	movs	r2, #1
 80004c6:	4619      	mov	r1, r3
 80004c8:	f002 fc9e 	bl	8002e08 <HAL_GPIO_WritePin>
 80004cc:	bf00      	nop
 80004ce:	3710      	adds	r7, #16
 80004d0:	46bd      	mov	sp, r7
 80004d2:	bd80      	pop	{r7, pc}

080004d4 <_ZN5W550015writeArrayToSRBEhPhhh>:
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b086      	sub	sp, #24
 80004d8:	af00      	add	r7, sp, #0
 80004da:	60f8      	str	r0, [r7, #12]
 80004dc:	607a      	str	r2, [r7, #4]
 80004de:	461a      	mov	r2, r3
 80004e0:	460b      	mov	r3, r1
 80004e2:	72fb      	strb	r3, [r7, #11]
 80004e4:	4613      	mov	r3, r2
 80004e6:	72bb      	strb	r3, [r7, #10]
 80004e8:	68fb      	ldr	r3, [r7, #12]
 80004ea:	2200      	movs	r2, #0
 80004ec:	741a      	strb	r2, [r3, #16]
 80004ee:	68fb      	ldr	r3, [r7, #12]
 80004f0:	f897 2020 	ldrb.w	r2, [r7, #32]
 80004f4:	745a      	strb	r2, [r3, #17]
 80004f6:	7afb      	ldrb	r3, [r7, #11]
 80004f8:	f043 0304 	orr.w	r3, r3, #4
 80004fc:	b2da      	uxtb	r2, r3
 80004fe:	68fb      	ldr	r3, [r7, #12]
 8000500:	749a      	strb	r2, [r3, #18]
 8000502:	2300      	movs	r3, #0
 8000504:	617b      	str	r3, [r7, #20]
 8000506:	7abb      	ldrb	r3, [r7, #10]
 8000508:	697a      	ldr	r2, [r7, #20]
 800050a:	429a      	cmp	r2, r3
 800050c:	da0d      	bge.n	800052a <_ZN5W550015writeArrayToSRBEhPhhh+0x56>
 800050e:	697b      	ldr	r3, [r7, #20]
 8000510:	687a      	ldr	r2, [r7, #4]
 8000512:	441a      	add	r2, r3
 8000514:	697b      	ldr	r3, [r7, #20]
 8000516:	3303      	adds	r3, #3
 8000518:	7811      	ldrb	r1, [r2, #0]
 800051a:	68fa      	ldr	r2, [r7, #12]
 800051c:	4413      	add	r3, r2
 800051e:	460a      	mov	r2, r1
 8000520:	741a      	strb	r2, [r3, #16]
 8000522:	697b      	ldr	r3, [r7, #20]
 8000524:	3301      	adds	r3, #1
 8000526:	617b      	str	r3, [r7, #20]
 8000528:	e7ed      	b.n	8000506 <_ZN5W550015writeArrayToSRBEhPhhh+0x32>
 800052a:	68fb      	ldr	r3, [r7, #12]
 800052c:	6858      	ldr	r0, [r3, #4]
 800052e:	68fb      	ldr	r3, [r7, #12]
 8000530:	899b      	ldrh	r3, [r3, #12]
 8000532:	2200      	movs	r2, #0
 8000534:	4619      	mov	r1, r3
 8000536:	f002 fc67 	bl	8002e08 <HAL_GPIO_WritePin>
 800053a:	68fb      	ldr	r3, [r7, #12]
 800053c:	6818      	ldr	r0, [r3, #0]
 800053e:	68fb      	ldr	r3, [r7, #12]
 8000540:	f103 0110 	add.w	r1, r3, #16
 8000544:	7abb      	ldrb	r3, [r7, #10]
 8000546:	b29b      	uxth	r3, r3
 8000548:	3303      	adds	r3, #3
 800054a:	b29a      	uxth	r2, r3
 800054c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000550:	f003 f92a 	bl	80037a8 <HAL_SPI_Transmit>
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	6858      	ldr	r0, [r3, #4]
 8000558:	68fb      	ldr	r3, [r7, #12]
 800055a:	899b      	ldrh	r3, [r3, #12]
 800055c:	2201      	movs	r2, #1
 800055e:	4619      	mov	r1, r3
 8000560:	f002 fc52 	bl	8002e08 <HAL_GPIO_WritePin>
 8000564:	bf00      	nop
 8000566:	3718      	adds	r7, #24
 8000568:	46bd      	mov	sp, r7
 800056a:	bd80      	pop	{r7, pc}

0800056c <_ZN5W550021readArrayFromRXbufferEhPht6word_y>:
 800056c:	b590      	push	{r4, r7, lr}
 800056e:	b089      	sub	sp, #36	; 0x24
 8000570:	af02      	add	r7, sp, #8
 8000572:	60f8      	str	r0, [r7, #12]
 8000574:	607a      	str	r2, [r7, #4]
 8000576:	461a      	mov	r2, r3
 8000578:	460b      	mov	r3, r1
 800057a:	72fb      	strb	r3, [r7, #11]
 800057c:	4613      	mov	r3, r2
 800057e:	813b      	strh	r3, [r7, #8]
 8000580:	f897 2029 	ldrb.w	r2, [r7, #41]	; 0x29
 8000584:	68fb      	ldr	r3, [r7, #12]
 8000586:	741a      	strb	r2, [r3, #16]
 8000588:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 800058c:	68fb      	ldr	r3, [r7, #12]
 800058e:	745a      	strb	r2, [r3, #17]
 8000590:	7afb      	ldrb	r3, [r7, #11]
 8000592:	3310      	adds	r3, #16
 8000594:	b2da      	uxtb	r2, r3
 8000596:	68fb      	ldr	r3, [r7, #12]
 8000598:	749a      	strb	r2, [r3, #18]
 800059a:	68fb      	ldr	r3, [r7, #12]
 800059c:	6858      	ldr	r0, [r3, #4]
 800059e:	68fb      	ldr	r3, [r7, #12]
 80005a0:	899b      	ldrh	r3, [r3, #12]
 80005a2:	2200      	movs	r2, #0
 80005a4:	4619      	mov	r1, r3
 80005a6:	f002 fc2f 	bl	8002e08 <HAL_GPIO_WritePin>
 80005aa:	68fb      	ldr	r3, [r7, #12]
 80005ac:	6818      	ldr	r0, [r3, #0]
 80005ae:	68fb      	ldr	r3, [r7, #12]
 80005b0:	f103 0110 	add.w	r1, r3, #16
 80005b4:	68fb      	ldr	r3, [r7, #12]
 80005b6:	f503 7288 	add.w	r2, r3, #272	; 0x110
 80005ba:	893b      	ldrh	r3, [r7, #8]
 80005bc:	3303      	adds	r3, #3
 80005be:	b29b      	uxth	r3, r3
 80005c0:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80005c4:	9400      	str	r4, [sp, #0]
 80005c6:	f003 fa2b 	bl	8003a20 <HAL_SPI_TransmitReceive>
 80005ca:	68fb      	ldr	r3, [r7, #12]
 80005cc:	6858      	ldr	r0, [r3, #4]
 80005ce:	68fb      	ldr	r3, [r7, #12]
 80005d0:	899b      	ldrh	r3, [r3, #12]
 80005d2:	2201      	movs	r2, #1
 80005d4:	4619      	mov	r1, r3
 80005d6:	f002 fc17 	bl	8002e08 <HAL_GPIO_WritePin>
 80005da:	2300      	movs	r3, #0
 80005dc:	617b      	str	r3, [r7, #20]
 80005de:	893b      	ldrh	r3, [r7, #8]
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	429a      	cmp	r2, r3
 80005e4:	da0d      	bge.n	8000602 <_ZN5W550021readArrayFromRXbufferEhPht6word_y+0x96>
 80005e6:	697b      	ldr	r3, [r7, #20]
 80005e8:	1cda      	adds	r2, r3, #3
 80005ea:	697b      	ldr	r3, [r7, #20]
 80005ec:	6879      	ldr	r1, [r7, #4]
 80005ee:	440b      	add	r3, r1
 80005f0:	68f9      	ldr	r1, [r7, #12]
 80005f2:	440a      	add	r2, r1
 80005f4:	f892 2110 	ldrb.w	r2, [r2, #272]	; 0x110
 80005f8:	701a      	strb	r2, [r3, #0]
 80005fa:	697b      	ldr	r3, [r7, #20]
 80005fc:	3301      	adds	r3, #1
 80005fe:	617b      	str	r3, [r7, #20]
 8000600:	e7ed      	b.n	80005de <_ZN5W550021readArrayFromRXbufferEhPht6word_y+0x72>
 8000602:	bf00      	nop
 8000604:	371c      	adds	r7, #28
 8000606:	46bd      	mov	sp, r7
 8000608:	bd90      	pop	{r4, r7, pc}

0800060a <_ZN5W550020writeArrayToTXbufferEhPht6word_y>:
 800060a:	b580      	push	{r7, lr}
 800060c:	b086      	sub	sp, #24
 800060e:	af00      	add	r7, sp, #0
 8000610:	60f8      	str	r0, [r7, #12]
 8000612:	607a      	str	r2, [r7, #4]
 8000614:	461a      	mov	r2, r3
 8000616:	460b      	mov	r3, r1
 8000618:	72fb      	strb	r3, [r7, #11]
 800061a:	4613      	mov	r3, r2
 800061c:	813b      	strh	r3, [r7, #8]
 800061e:	f897 2021 	ldrb.w	r2, [r7, #33]	; 0x21
 8000622:	68fb      	ldr	r3, [r7, #12]
 8000624:	741a      	strb	r2, [r3, #16]
 8000626:	f897 2020 	ldrb.w	r2, [r7, #32]
 800062a:	68fb      	ldr	r3, [r7, #12]
 800062c:	745a      	strb	r2, [r3, #17]
 800062e:	7afb      	ldrb	r3, [r7, #11]
 8000630:	3308      	adds	r3, #8
 8000632:	b2db      	uxtb	r3, r3
 8000634:	b25b      	sxtb	r3, r3
 8000636:	f043 0304 	orr.w	r3, r3, #4
 800063a:	b25b      	sxtb	r3, r3
 800063c:	b2da      	uxtb	r2, r3
 800063e:	68fb      	ldr	r3, [r7, #12]
 8000640:	749a      	strb	r2, [r3, #18]
 8000642:	2300      	movs	r3, #0
 8000644:	617b      	str	r3, [r7, #20]
 8000646:	893b      	ldrh	r3, [r7, #8]
 8000648:	697a      	ldr	r2, [r7, #20]
 800064a:	429a      	cmp	r2, r3
 800064c:	da0d      	bge.n	800066a <_ZN5W550020writeArrayToTXbufferEhPht6word_y+0x60>
 800064e:	697b      	ldr	r3, [r7, #20]
 8000650:	687a      	ldr	r2, [r7, #4]
 8000652:	441a      	add	r2, r3
 8000654:	697b      	ldr	r3, [r7, #20]
 8000656:	3303      	adds	r3, #3
 8000658:	7811      	ldrb	r1, [r2, #0]
 800065a:	68fa      	ldr	r2, [r7, #12]
 800065c:	4413      	add	r3, r2
 800065e:	460a      	mov	r2, r1
 8000660:	741a      	strb	r2, [r3, #16]
 8000662:	697b      	ldr	r3, [r7, #20]
 8000664:	3301      	adds	r3, #1
 8000666:	617b      	str	r3, [r7, #20]
 8000668:	e7ed      	b.n	8000646 <_ZN5W550020writeArrayToTXbufferEhPht6word_y+0x3c>
 800066a:	68fb      	ldr	r3, [r7, #12]
 800066c:	6858      	ldr	r0, [r3, #4]
 800066e:	68fb      	ldr	r3, [r7, #12]
 8000670:	899b      	ldrh	r3, [r3, #12]
 8000672:	2200      	movs	r2, #0
 8000674:	4619      	mov	r1, r3
 8000676:	f002 fbc7 	bl	8002e08 <HAL_GPIO_WritePin>
 800067a:	68fb      	ldr	r3, [r7, #12]
 800067c:	6818      	ldr	r0, [r3, #0]
 800067e:	68fb      	ldr	r3, [r7, #12]
 8000680:	f103 0110 	add.w	r1, r3, #16
 8000684:	893b      	ldrh	r3, [r7, #8]
 8000686:	3303      	adds	r3, #3
 8000688:	b29a      	uxth	r2, r3
 800068a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800068e:	f003 f88b 	bl	80037a8 <HAL_SPI_Transmit>
 8000692:	68fb      	ldr	r3, [r7, #12]
 8000694:	6858      	ldr	r0, [r3, #4]
 8000696:	68fb      	ldr	r3, [r7, #12]
 8000698:	899b      	ldrh	r3, [r3, #12]
 800069a:	2201      	movs	r2, #1
 800069c:	4619      	mov	r1, r3
 800069e:	f002 fbb3 	bl	8002e08 <HAL_GPIO_WritePin>
 80006a2:	bf00      	nop
 80006a4:	3718      	adds	r7, #24
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bd80      	pop	{r7, pc}

080006aa <_ZN5W550013receivePacketEhPhPt>:
 80006aa:	b580      	push	{r7, lr}
 80006ac:	b08a      	sub	sp, #40	; 0x28
 80006ae:	af02      	add	r7, sp, #8
 80006b0:	60f8      	str	r0, [r7, #12]
 80006b2:	607a      	str	r2, [r7, #4]
 80006b4:	603b      	str	r3, [r7, #0]
 80006b6:	460b      	mov	r3, r1
 80006b8:	72fb      	strb	r3, [r7, #11]
 80006ba:	7afb      	ldrb	r3, [r7, #11]
 80006bc:	2226      	movs	r2, #38	; 0x26
 80006be:	4619      	mov	r1, r3
 80006c0:	68f8      	ldr	r0, [r7, #12]
 80006c2:	f7ff fe52 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 80006c6:	4603      	mov	r3, r0
 80006c8:	83bb      	strh	r3, [r7, #28]
 80006ca:	7afb      	ldrb	r3, [r7, #11]
 80006cc:	2226      	movs	r2, #38	; 0x26
 80006ce:	4619      	mov	r1, r3
 80006d0:	68f8      	ldr	r0, [r7, #12]
 80006d2:	f7ff fe4a 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 80006d6:	4603      	mov	r3, r0
 80006d8:	833b      	strh	r3, [r7, #24]
 80006da:	8bba      	ldrh	r2, [r7, #28]
 80006dc:	8b3b      	ldrh	r3, [r7, #24]
 80006de:	429a      	cmp	r2, r3
 80006e0:	d00a      	beq.n	80006f8 <_ZN5W550013receivePacketEhPhPt+0x4e>
 80006e2:	8b3b      	ldrh	r3, [r7, #24]
 80006e4:	83bb      	strh	r3, [r7, #28]
 80006e6:	7afb      	ldrb	r3, [r7, #11]
 80006e8:	2226      	movs	r2, #38	; 0x26
 80006ea:	4619      	mov	r1, r3
 80006ec:	68f8      	ldr	r0, [r7, #12]
 80006ee:	f7ff fe3c 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 80006f2:	4603      	mov	r3, r0
 80006f4:	833b      	strh	r3, [r7, #24]
 80006f6:	e7f0      	b.n	80006da <_ZN5W550013receivePacketEhPhPt+0x30>
 80006f8:	7afb      	ldrb	r3, [r7, #11]
 80006fa:	2228      	movs	r2, #40	; 0x28
 80006fc:	4619      	mov	r1, r3
 80006fe:	68f8      	ldr	r0, [r7, #12]
 8000700:	f7ff fe33 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 8000704:	4603      	mov	r3, r0
 8000706:	82bb      	strh	r3, [r7, #20]
 8000708:	8bba      	ldrh	r2, [r7, #28]
 800070a:	7af9      	ldrb	r1, [r7, #11]
 800070c:	8abb      	ldrh	r3, [r7, #20]
 800070e:	f8ad 3000 	strh.w	r3, [sp]
 8000712:	4613      	mov	r3, r2
 8000714:	687a      	ldr	r2, [r7, #4]
 8000716:	68f8      	ldr	r0, [r7, #12]
 8000718:	f7ff ff28 	bl	800056c <_ZN5W550021readArrayFromRXbufferEhPht6word_y>
 800071c:	8aba      	ldrh	r2, [r7, #20]
 800071e:	8bbb      	ldrh	r3, [r7, #28]
 8000720:	4413      	add	r3, r2
 8000722:	b29b      	uxth	r3, r3
 8000724:	82bb      	strh	r3, [r7, #20]
 8000726:	8aba      	ldrh	r2, [r7, #20]
 8000728:	7af9      	ldrb	r1, [r7, #11]
 800072a:	2328      	movs	r3, #40	; 0x28
 800072c:	68f8      	ldr	r0, [r7, #12]
 800072e:	f7ff fe92 	bl	8000456 <_ZN5W550014writeWordToSRBEhth>
 8000732:	7af9      	ldrb	r1, [r7, #11]
 8000734:	2301      	movs	r3, #1
 8000736:	2240      	movs	r2, #64	; 0x40
 8000738:	68f8      	ldr	r0, [r7, #12]
 800073a:	f7ff fe52 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
 800073e:	8bba      	ldrh	r2, [r7, #28]
 8000740:	683b      	ldr	r3, [r7, #0]
 8000742:	801a      	strh	r2, [r3, #0]
 8000744:	bf00      	nop
 8000746:	3720      	adds	r7, #32
 8000748:	46bd      	mov	sp, r7
 800074a:	bd80      	pop	{r7, pc}

0800074c <_ZN5W550010sendPacketEhPht>:
 800074c:	b580      	push	{r7, lr}
 800074e:	b088      	sub	sp, #32
 8000750:	af02      	add	r7, sp, #8
 8000752:	60f8      	str	r0, [r7, #12]
 8000754:	607a      	str	r2, [r7, #4]
 8000756:	461a      	mov	r2, r3
 8000758:	460b      	mov	r3, r1
 800075a:	72fb      	strb	r3, [r7, #11]
 800075c:	4613      	mov	r3, r2
 800075e:	813b      	strh	r3, [r7, #8]
 8000760:	7afb      	ldrb	r3, [r7, #11]
 8000762:	2220      	movs	r2, #32
 8000764:	4619      	mov	r1, r3
 8000766:	68f8      	ldr	r0, [r7, #12]
 8000768:	f7ff fdff 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 800076c:	4603      	mov	r3, r0
 800076e:	82bb      	strh	r3, [r7, #20]
 8000770:	8abb      	ldrh	r3, [r7, #20]
 8000772:	893a      	ldrh	r2, [r7, #8]
 8000774:	429a      	cmp	r2, r3
 8000776:	d823      	bhi.n	80007c0 <_ZN5W550010sendPacketEhPht+0x74>
 8000778:	7afb      	ldrb	r3, [r7, #11]
 800077a:	2224      	movs	r2, #36	; 0x24
 800077c:	4619      	mov	r1, r3
 800077e:	68f8      	ldr	r0, [r7, #12]
 8000780:	f7ff fdf3 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 8000784:	4603      	mov	r3, r0
 8000786:	823b      	strh	r3, [r7, #16]
 8000788:	893a      	ldrh	r2, [r7, #8]
 800078a:	7af9      	ldrb	r1, [r7, #11]
 800078c:	8a3b      	ldrh	r3, [r7, #16]
 800078e:	f8ad 3000 	strh.w	r3, [sp]
 8000792:	4613      	mov	r3, r2
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	68f8      	ldr	r0, [r7, #12]
 8000798:	f7ff ff37 	bl	800060a <_ZN5W550020writeArrayToTXbufferEhPht6word_y>
 800079c:	8a3a      	ldrh	r2, [r7, #16]
 800079e:	893b      	ldrh	r3, [r7, #8]
 80007a0:	4413      	add	r3, r2
 80007a2:	b29b      	uxth	r3, r3
 80007a4:	823b      	strh	r3, [r7, #16]
 80007a6:	8a3a      	ldrh	r2, [r7, #16]
 80007a8:	7af9      	ldrb	r1, [r7, #11]
 80007aa:	2324      	movs	r3, #36	; 0x24
 80007ac:	68f8      	ldr	r0, [r7, #12]
 80007ae:	f7ff fe52 	bl	8000456 <_ZN5W550014writeWordToSRBEhth>
 80007b2:	7af9      	ldrb	r1, [r7, #11]
 80007b4:	2301      	movs	r3, #1
 80007b6:	2220      	movs	r2, #32
 80007b8:	68f8      	ldr	r0, [r7, #12]
 80007ba:	f7ff fe12 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
 80007be:	e000      	b.n	80007c2 <_ZN5W550010sendPacketEhPht+0x76>
 80007c0:	bf00      	nop
 80007c2:	3718      	adds	r7, #24
 80007c4:	46bd      	mov	sp, r7
 80007c6:	bd80      	pop	{r7, pc}

080007c8 <_ZN5W550010sendStringEhPc>:
 80007c8:	b580      	push	{r7, lr}
 80007ca:	b088      	sub	sp, #32
 80007cc:	af02      	add	r7, sp, #8
 80007ce:	60f8      	str	r0, [r7, #12]
 80007d0:	460b      	mov	r3, r1
 80007d2:	607a      	str	r2, [r7, #4]
 80007d4:	72fb      	strb	r3, [r7, #11]
 80007d6:	6878      	ldr	r0, [r7, #4]
 80007d8:	f7ff fcb8 	bl	800014c <strlen>
 80007dc:	4603      	mov	r3, r0
 80007de:	82fb      	strh	r3, [r7, #22]
 80007e0:	7afb      	ldrb	r3, [r7, #11]
 80007e2:	2220      	movs	r2, #32
 80007e4:	4619      	mov	r1, r3
 80007e6:	68f8      	ldr	r0, [r7, #12]
 80007e8:	f7ff fdbf 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 80007ec:	4603      	mov	r3, r0
 80007ee:	82bb      	strh	r3, [r7, #20]
 80007f0:	8abb      	ldrh	r3, [r7, #20]
 80007f2:	8afa      	ldrh	r2, [r7, #22]
 80007f4:	429a      	cmp	r2, r3
 80007f6:	d823      	bhi.n	8000840 <_ZN5W550010sendStringEhPc+0x78>
 80007f8:	7afb      	ldrb	r3, [r7, #11]
 80007fa:	2224      	movs	r2, #36	; 0x24
 80007fc:	4619      	mov	r1, r3
 80007fe:	68f8      	ldr	r0, [r7, #12]
 8000800:	f7ff fdb3 	bl	800036a <_ZN5W550015readWordFromSRBEhh>
 8000804:	4603      	mov	r3, r0
 8000806:	823b      	strh	r3, [r7, #16]
 8000808:	8afa      	ldrh	r2, [r7, #22]
 800080a:	7af9      	ldrb	r1, [r7, #11]
 800080c:	8a3b      	ldrh	r3, [r7, #16]
 800080e:	f8ad 3000 	strh.w	r3, [sp]
 8000812:	4613      	mov	r3, r2
 8000814:	687a      	ldr	r2, [r7, #4]
 8000816:	68f8      	ldr	r0, [r7, #12]
 8000818:	f7ff fef7 	bl	800060a <_ZN5W550020writeArrayToTXbufferEhPht6word_y>
 800081c:	8a3a      	ldrh	r2, [r7, #16]
 800081e:	8afb      	ldrh	r3, [r7, #22]
 8000820:	4413      	add	r3, r2
 8000822:	b29b      	uxth	r3, r3
 8000824:	823b      	strh	r3, [r7, #16]
 8000826:	8a3a      	ldrh	r2, [r7, #16]
 8000828:	7af9      	ldrb	r1, [r7, #11]
 800082a:	2324      	movs	r3, #36	; 0x24
 800082c:	68f8      	ldr	r0, [r7, #12]
 800082e:	f7ff fe12 	bl	8000456 <_ZN5W550014writeWordToSRBEhth>
 8000832:	7af9      	ldrb	r1, [r7, #11]
 8000834:	2301      	movs	r3, #1
 8000836:	2220      	movs	r2, #32
 8000838:	68f8      	ldr	r0, [r7, #12]
 800083a:	f7ff fdd2 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
 800083e:	e000      	b.n	8000842 <_ZN5W550010sendStringEhPc+0x7a>
 8000840:	bf00      	nop
 8000842:	3718      	adds	r7, #24
 8000844:	46bd      	mov	sp, r7
 8000846:	bd80      	pop	{r7, pc}

08000848 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000848:	b480      	push	{r7}
 800084a:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800084c:	f3bf 8f4f 	dsb	sy
}
 8000850:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000852:	4b06      	ldr	r3, [pc, #24]	; (800086c <__NVIC_SystemReset+0x24>)
 8000854:	68db      	ldr	r3, [r3, #12]
 8000856:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 800085a:	4904      	ldr	r1, [pc, #16]	; (800086c <__NVIC_SystemReset+0x24>)
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 800085c:	4b04      	ldr	r3, [pc, #16]	; (8000870 <__NVIC_SystemReset+0x28>)
 800085e:	4313      	orrs	r3, r2
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000860:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000862:	f3bf 8f4f 	dsb	sy
}
 8000866:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000868:	bf00      	nop
 800086a:	e7fd      	b.n	8000868 <__NVIC_SystemReset+0x20>
 800086c:	e000ed00 	.word	0xe000ed00
 8000870:	05fa0004 	.word	0x05fa0004

08000874 <_Z8hex2charRc>:
char textError[] {"ERROR"};
char textApply[] {"Your setting will be saved and device will be reboot"};
char textNotApply[] {"Your setting is NOT saved"};

void hex2char(char& digit)
{
 8000874:	b480      	push	{r7}
 8000876:	b083      	sub	sp, #12
 8000878:	af00      	add	r7, sp, #0
 800087a:	6078      	str	r0, [r7, #4]
	if (digit <= 9) digit += 48;
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	781b      	ldrb	r3, [r3, #0]
 8000880:	2b09      	cmp	r3, #9
 8000882:	d806      	bhi.n	8000892 <_Z8hex2charRc+0x1e>
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	781b      	ldrb	r3, [r3, #0]
 8000888:	3330      	adds	r3, #48	; 0x30
 800088a:	b2da      	uxtb	r2, r3
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	701a      	strb	r2, [r3, #0]
	else digit += 55;
	return;
 8000890:	e006      	b.n	80008a0 <_Z8hex2charRc+0x2c>
	else digit += 55;
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	781b      	ldrb	r3, [r3, #0]
 8000896:	3337      	adds	r3, #55	; 0x37
 8000898:	b2da      	uxtb	r2, r3
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	701a      	strb	r2, [r3, #0]
	return;
 800089e:	bf00      	nop
}
 80008a0:	370c      	adds	r7, #12
 80008a2:	46bd      	mov	sp, r7
 80008a4:	bc80      	pop	{r7}
 80008a6:	4770      	bx	lr

080008a8 <_Z10hex2letterRc>:

void hex2letter(char& digit)
{
 80008a8:	b480      	push	{r7}
 80008aa:	b083      	sub	sp, #12
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	6078      	str	r0, [r7, #4]
	  if (digit <= 9) digit += 48;
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	781b      	ldrb	r3, [r3, #0]
 80008b4:	2b09      	cmp	r3, #9
 80008b6:	d806      	bhi.n	80008c6 <_Z10hex2letterRc+0x1e>
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	781b      	ldrb	r3, [r3, #0]
 80008bc:	3330      	adds	r3, #48	; 0x30
 80008be:	b2da      	uxtb	r2, r3
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	701a      	strb	r2, [r3, #0]
	  else digit += 55;
	  return;
 80008c4:	e006      	b.n	80008d4 <_Z10hex2letterRc+0x2c>
	  else digit += 55;
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	781b      	ldrb	r3, [r3, #0]
 80008ca:	3337      	adds	r3, #55	; 0x37
 80008cc:	b2da      	uxtb	r2, r3
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	701a      	strb	r2, [r3, #0]
	  return;
 80008d2:	bf00      	nop
}
 80008d4:	370c      	adds	r7, #12
 80008d6:	46bd      	mov	sp, r7
 80008d8:	bc80      	pop	{r7}
 80008da:	4770      	bx	lr

080008dc <_Z14adr_int2stringPKhPc>:

// четыре байта в строку
void adr_int2string(const uint8_t* adr, char* text)
{
 80008dc:	b480      	push	{r7}
 80008de:	b087      	sub	sp, #28
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	6078      	str	r0, [r7, #4]
 80008e4:	6039      	str	r1, [r7, #0]
	int index{ 0 };
 80008e6:	2300      	movs	r3, #0
 80008e8:	617b      	str	r3, [r7, #20]
	char num, num2;
	for (int i = 0; i < 4; ++i)
 80008ea:	2300      	movs	r3, #0
 80008ec:	613b      	str	r3, [r7, #16]
 80008ee:	693b      	ldr	r3, [r7, #16]
 80008f0:	2b03      	cmp	r3, #3
 80008f2:	dc64      	bgt.n	80009be <_Z14adr_int2stringPKhPc+0xe2>
	{
		num = adr[i] / 100;
 80008f4:	693b      	ldr	r3, [r7, #16]
 80008f6:	687a      	ldr	r2, [r7, #4]
 80008f8:	4413      	add	r3, r2
 80008fa:	781b      	ldrb	r3, [r3, #0]
 80008fc:	4a32      	ldr	r2, [pc, #200]	; (80009c8 <_Z14adr_int2stringPKhPc+0xec>)
 80008fe:	fba2 2303 	umull	r2, r3, r2, r3
 8000902:	095b      	lsrs	r3, r3, #5
 8000904:	73fb      	strb	r3, [r7, #15]
		if (num)
 8000906:	7bfb      	ldrb	r3, [r7, #15]
 8000908:	2b00      	cmp	r3, #0
 800090a:	d009      	beq.n	8000920 <_Z14adr_int2stringPKhPc+0x44>
		{
			text[index] = num + 48;
 800090c:	697b      	ldr	r3, [r7, #20]
 800090e:	683a      	ldr	r2, [r7, #0]
 8000910:	4413      	add	r3, r2
 8000912:	7bfa      	ldrb	r2, [r7, #15]
 8000914:	3230      	adds	r2, #48	; 0x30
 8000916:	b2d2      	uxtb	r2, r2
 8000918:	701a      	strb	r2, [r3, #0]
			++index;
 800091a:	697b      	ldr	r3, [r7, #20]
 800091c:	3301      	adds	r3, #1
 800091e:	617b      	str	r3, [r7, #20]
		}
		num2 = (adr[i] / 10) % 10;
 8000920:	693b      	ldr	r3, [r7, #16]
 8000922:	687a      	ldr	r2, [r7, #4]
 8000924:	4413      	add	r3, r2
 8000926:	781b      	ldrb	r3, [r3, #0]
 8000928:	4a28      	ldr	r2, [pc, #160]	; (80009cc <_Z14adr_int2stringPKhPc+0xf0>)
 800092a:	fba2 2303 	umull	r2, r3, r2, r3
 800092e:	08db      	lsrs	r3, r3, #3
 8000930:	b2da      	uxtb	r2, r3
 8000932:	4b26      	ldr	r3, [pc, #152]	; (80009cc <_Z14adr_int2stringPKhPc+0xf0>)
 8000934:	fba3 1302 	umull	r1, r3, r3, r2
 8000938:	08d9      	lsrs	r1, r3, #3
 800093a:	460b      	mov	r3, r1
 800093c:	009b      	lsls	r3, r3, #2
 800093e:	440b      	add	r3, r1
 8000940:	005b      	lsls	r3, r3, #1
 8000942:	1ad3      	subs	r3, r2, r3
 8000944:	73bb      	strb	r3, [r7, #14]
		if (num2 || num)
 8000946:	7bbb      	ldrb	r3, [r7, #14]
 8000948:	2b00      	cmp	r3, #0
 800094a:	d102      	bne.n	8000952 <_Z14adr_int2stringPKhPc+0x76>
 800094c:	7bfb      	ldrb	r3, [r7, #15]
 800094e:	2b00      	cmp	r3, #0
 8000950:	d009      	beq.n	8000966 <_Z14adr_int2stringPKhPc+0x8a>
		{
			text[index] = num2 + 48;
 8000952:	697b      	ldr	r3, [r7, #20]
 8000954:	683a      	ldr	r2, [r7, #0]
 8000956:	4413      	add	r3, r2
 8000958:	7bba      	ldrb	r2, [r7, #14]
 800095a:	3230      	adds	r2, #48	; 0x30
 800095c:	b2d2      	uxtb	r2, r2
 800095e:	701a      	strb	r2, [r3, #0]
			++index;
 8000960:	697b      	ldr	r3, [r7, #20]
 8000962:	3301      	adds	r3, #1
 8000964:	617b      	str	r3, [r7, #20]
		}
		text[index] = adr[i] % 10 + 48;
 8000966:	693b      	ldr	r3, [r7, #16]
 8000968:	687a      	ldr	r2, [r7, #4]
 800096a:	4413      	add	r3, r2
 800096c:	781a      	ldrb	r2, [r3, #0]
 800096e:	4b17      	ldr	r3, [pc, #92]	; (80009cc <_Z14adr_int2stringPKhPc+0xf0>)
 8000970:	fba3 1302 	umull	r1, r3, r3, r2
 8000974:	08d9      	lsrs	r1, r3, #3
 8000976:	460b      	mov	r3, r1
 8000978:	009b      	lsls	r3, r3, #2
 800097a:	440b      	add	r3, r1
 800097c:	005b      	lsls	r3, r3, #1
 800097e:	1ad3      	subs	r3, r2, r3
 8000980:	b2da      	uxtb	r2, r3
 8000982:	697b      	ldr	r3, [r7, #20]
 8000984:	6839      	ldr	r1, [r7, #0]
 8000986:	440b      	add	r3, r1
 8000988:	3230      	adds	r2, #48	; 0x30
 800098a:	b2d2      	uxtb	r2, r2
 800098c:	701a      	strb	r2, [r3, #0]
		++index;
 800098e:	697b      	ldr	r3, [r7, #20]
 8000990:	3301      	adds	r3, #1
 8000992:	617b      	str	r3, [r7, #20]
		if (i < 3)
 8000994:	693b      	ldr	r3, [r7, #16]
 8000996:	2b02      	cmp	r3, #2
 8000998:	dc08      	bgt.n	80009ac <_Z14adr_int2stringPKhPc+0xd0>
		{
			text[index] = '.';
 800099a:	697b      	ldr	r3, [r7, #20]
 800099c:	683a      	ldr	r2, [r7, #0]
 800099e:	4413      	add	r3, r2
 80009a0:	222e      	movs	r2, #46	; 0x2e
 80009a2:	701a      	strb	r2, [r3, #0]
			++index;
 80009a4:	697b      	ldr	r3, [r7, #20]
 80009a6:	3301      	adds	r3, #1
 80009a8:	617b      	str	r3, [r7, #20]
 80009aa:	e004      	b.n	80009b6 <_Z14adr_int2stringPKhPc+0xda>
		}
		else
		{
			text[index] = '\0';
 80009ac:	697b      	ldr	r3, [r7, #20]
 80009ae:	683a      	ldr	r2, [r7, #0]
 80009b0:	4413      	add	r3, r2
 80009b2:	2200      	movs	r2, #0
 80009b4:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 4; ++i)
 80009b6:	693b      	ldr	r3, [r7, #16]
 80009b8:	3301      	adds	r3, #1
 80009ba:	613b      	str	r3, [r7, #16]
 80009bc:	e797      	b.n	80008ee <_Z14adr_int2stringPKhPc+0x12>
		}
	}
	return;
 80009be:	bf00      	nop
}
 80009c0:	371c      	adds	r7, #28
 80009c2:	46bd      	mov	sp, r7
 80009c4:	bc80      	pop	{r7}
 80009c6:	4770      	bx	lr
 80009c8:	51eb851f 	.word	0x51eb851f
 80009cc:	cccccccd 	.word	0xcccccccd

080009d0 <_Z14mac_int2stringPKhPc>:

// шесть октетов MAC-адреса в строку
void mac_int2string(const uint8_t* adr, char* text)
{
 80009d0:	b580      	push	{r7, lr}
 80009d2:	b084      	sub	sp, #16
 80009d4:	af00      	add	r7, sp, #0
 80009d6:	6078      	str	r0, [r7, #4]
 80009d8:	6039      	str	r1, [r7, #0]
	int index{ 0 };
 80009da:	2300      	movs	r3, #0
 80009dc:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < 6; ++i)
 80009de:	2300      	movs	r3, #0
 80009e0:	60bb      	str	r3, [r7, #8]
 80009e2:	68bb      	ldr	r3, [r7, #8]
 80009e4:	2b05      	cmp	r3, #5
 80009e6:	dc3b      	bgt.n	8000a60 <_Z14mac_int2stringPKhPc+0x90>
	{
		text[index] = adr[i] / 16;
 80009e8:	68bb      	ldr	r3, [r7, #8]
 80009ea:	687a      	ldr	r2, [r7, #4]
 80009ec:	4413      	add	r3, r2
 80009ee:	781a      	ldrb	r2, [r3, #0]
 80009f0:	68fb      	ldr	r3, [r7, #12]
 80009f2:	6839      	ldr	r1, [r7, #0]
 80009f4:	440b      	add	r3, r1
 80009f6:	0912      	lsrs	r2, r2, #4
 80009f8:	b2d2      	uxtb	r2, r2
 80009fa:	701a      	strb	r2, [r3, #0]
		hex2char(text[index]);
 80009fc:	68fb      	ldr	r3, [r7, #12]
 80009fe:	683a      	ldr	r2, [r7, #0]
 8000a00:	4413      	add	r3, r2
 8000a02:	4618      	mov	r0, r3
 8000a04:	f7ff ff36 	bl	8000874 <_Z8hex2charRc>
		++index;
 8000a08:	68fb      	ldr	r3, [r7, #12]
 8000a0a:	3301      	adds	r3, #1
 8000a0c:	60fb      	str	r3, [r7, #12]
		text[index] = adr[i] % 16;
 8000a0e:	68bb      	ldr	r3, [r7, #8]
 8000a10:	687a      	ldr	r2, [r7, #4]
 8000a12:	4413      	add	r3, r2
 8000a14:	781a      	ldrb	r2, [r3, #0]
 8000a16:	68fb      	ldr	r3, [r7, #12]
 8000a18:	6839      	ldr	r1, [r7, #0]
 8000a1a:	440b      	add	r3, r1
 8000a1c:	f002 020f 	and.w	r2, r2, #15
 8000a20:	b2d2      	uxtb	r2, r2
 8000a22:	701a      	strb	r2, [r3, #0]
		hex2char(text[index]);
 8000a24:	68fb      	ldr	r3, [r7, #12]
 8000a26:	683a      	ldr	r2, [r7, #0]
 8000a28:	4413      	add	r3, r2
 8000a2a:	4618      	mov	r0, r3
 8000a2c:	f7ff ff22 	bl	8000874 <_Z8hex2charRc>
		++index;
 8000a30:	68fb      	ldr	r3, [r7, #12]
 8000a32:	3301      	adds	r3, #1
 8000a34:	60fb      	str	r3, [r7, #12]
		if (i < 5)
 8000a36:	68bb      	ldr	r3, [r7, #8]
 8000a38:	2b04      	cmp	r3, #4
 8000a3a:	dc08      	bgt.n	8000a4e <_Z14mac_int2stringPKhPc+0x7e>
		{
			text[index] = ':';
 8000a3c:	68fb      	ldr	r3, [r7, #12]
 8000a3e:	683a      	ldr	r2, [r7, #0]
 8000a40:	4413      	add	r3, r2
 8000a42:	223a      	movs	r2, #58	; 0x3a
 8000a44:	701a      	strb	r2, [r3, #0]
			++index;
 8000a46:	68fb      	ldr	r3, [r7, #12]
 8000a48:	3301      	adds	r3, #1
 8000a4a:	60fb      	str	r3, [r7, #12]
 8000a4c:	e004      	b.n	8000a58 <_Z14mac_int2stringPKhPc+0x88>
		}
		else
		{
			text[index] = '\0';
 8000a4e:	68fb      	ldr	r3, [r7, #12]
 8000a50:	683a      	ldr	r2, [r7, #0]
 8000a52:	4413      	add	r3, r2
 8000a54:	2200      	movs	r2, #0
 8000a56:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 6; ++i)
 8000a58:	68bb      	ldr	r3, [r7, #8]
 8000a5a:	3301      	adds	r3, #1
 8000a5c:	60bb      	str	r3, [r7, #8]
 8000a5e:	e7c0      	b.n	80009e2 <_Z14mac_int2stringPKhPc+0x12>
		}
	}
	return;
 8000a60:	bf00      	nop
}
 8000a62:	3710      	adds	r7, #16
 8000a64:	46bd      	mov	sp, r7
 8000a66:	bd80      	pop	{r7, pc}

08000a68 <_Z15byte_int2stringRKhPc>:

// байт адреса в строку
void byte_int2string(const uint8_t& byte, char* text)
{
 8000a68:	b480      	push	{r7}
 8000a6a:	b085      	sub	sp, #20
 8000a6c:	af00      	add	r7, sp, #0
 8000a6e:	6078      	str	r0, [r7, #4]
 8000a70:	6039      	str	r1, [r7, #0]
	int index{ 0 };
 8000a72:	2300      	movs	r3, #0
 8000a74:	60fb      	str	r3, [r7, #12]
	char num, num2;

	num = byte / 100;
 8000a76:	687b      	ldr	r3, [r7, #4]
 8000a78:	781b      	ldrb	r3, [r3, #0]
 8000a7a:	4a29      	ldr	r2, [pc, #164]	; (8000b20 <_Z15byte_int2stringRKhPc+0xb8>)
 8000a7c:	fba2 2303 	umull	r2, r3, r2, r3
 8000a80:	095b      	lsrs	r3, r3, #5
 8000a82:	72fb      	strb	r3, [r7, #11]
	if (num)
 8000a84:	7afb      	ldrb	r3, [r7, #11]
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	d009      	beq.n	8000a9e <_Z15byte_int2stringRKhPc+0x36>
	{
		text[index] = num + 48;
 8000a8a:	68fb      	ldr	r3, [r7, #12]
 8000a8c:	683a      	ldr	r2, [r7, #0]
 8000a8e:	4413      	add	r3, r2
 8000a90:	7afa      	ldrb	r2, [r7, #11]
 8000a92:	3230      	adds	r2, #48	; 0x30
 8000a94:	b2d2      	uxtb	r2, r2
 8000a96:	701a      	strb	r2, [r3, #0]
		++index;
 8000a98:	68fb      	ldr	r3, [r7, #12]
 8000a9a:	3301      	adds	r3, #1
 8000a9c:	60fb      	str	r3, [r7, #12]
	}
	num2 = (byte / 10) % 10;
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	781b      	ldrb	r3, [r3, #0]
 8000aa2:	4a20      	ldr	r2, [pc, #128]	; (8000b24 <_Z15byte_int2stringRKhPc+0xbc>)
 8000aa4:	fba2 2303 	umull	r2, r3, r2, r3
 8000aa8:	08db      	lsrs	r3, r3, #3
 8000aaa:	b2da      	uxtb	r2, r3
 8000aac:	4b1d      	ldr	r3, [pc, #116]	; (8000b24 <_Z15byte_int2stringRKhPc+0xbc>)
 8000aae:	fba3 1302 	umull	r1, r3, r3, r2
 8000ab2:	08d9      	lsrs	r1, r3, #3
 8000ab4:	460b      	mov	r3, r1
 8000ab6:	009b      	lsls	r3, r3, #2
 8000ab8:	440b      	add	r3, r1
 8000aba:	005b      	lsls	r3, r3, #1
 8000abc:	1ad3      	subs	r3, r2, r3
 8000abe:	72bb      	strb	r3, [r7, #10]
	if (num2 || num)
 8000ac0:	7abb      	ldrb	r3, [r7, #10]
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	d102      	bne.n	8000acc <_Z15byte_int2stringRKhPc+0x64>
 8000ac6:	7afb      	ldrb	r3, [r7, #11]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	d009      	beq.n	8000ae0 <_Z15byte_int2stringRKhPc+0x78>
	{
		text[index] = num2 + 48;
 8000acc:	68fb      	ldr	r3, [r7, #12]
 8000ace:	683a      	ldr	r2, [r7, #0]
 8000ad0:	4413      	add	r3, r2
 8000ad2:	7aba      	ldrb	r2, [r7, #10]
 8000ad4:	3230      	adds	r2, #48	; 0x30
 8000ad6:	b2d2      	uxtb	r2, r2
 8000ad8:	701a      	strb	r2, [r3, #0]
		++index;
 8000ada:	68fb      	ldr	r3, [r7, #12]
 8000adc:	3301      	adds	r3, #1
 8000ade:	60fb      	str	r3, [r7, #12]
	}
	text[index] = byte % 10 + 48;
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	781a      	ldrb	r2, [r3, #0]
 8000ae4:	4b0f      	ldr	r3, [pc, #60]	; (8000b24 <_Z15byte_int2stringRKhPc+0xbc>)
 8000ae6:	fba3 1302 	umull	r1, r3, r3, r2
 8000aea:	08d9      	lsrs	r1, r3, #3
 8000aec:	460b      	mov	r3, r1
 8000aee:	009b      	lsls	r3, r3, #2
 8000af0:	440b      	add	r3, r1
 8000af2:	005b      	lsls	r3, r3, #1
 8000af4:	1ad3      	subs	r3, r2, r3
 8000af6:	b2da      	uxtb	r2, r3
 8000af8:	68fb      	ldr	r3, [r7, #12]
 8000afa:	6839      	ldr	r1, [r7, #0]
 8000afc:	440b      	add	r3, r1
 8000afe:	3230      	adds	r2, #48	; 0x30
 8000b00:	b2d2      	uxtb	r2, r2
 8000b02:	701a      	strb	r2, [r3, #0]
	++index;
 8000b04:	68fb      	ldr	r3, [r7, #12]
 8000b06:	3301      	adds	r3, #1
 8000b08:	60fb      	str	r3, [r7, #12]

	text[index] = '\0';
 8000b0a:	68fb      	ldr	r3, [r7, #12]
 8000b0c:	683a      	ldr	r2, [r7, #0]
 8000b0e:	4413      	add	r3, r2
 8000b10:	2200      	movs	r2, #0
 8000b12:	701a      	strb	r2, [r3, #0]

	return;
 8000b14:	bf00      	nop
}
 8000b16:	3714      	adds	r7, #20
 8000b18:	46bd      	mov	sp, r7
 8000b1a:	bc80      	pop	{r7}
 8000b1c:	4770      	bx	lr
 8000b1e:	bf00      	nop
 8000b20:	51eb851f 	.word	0x51eb851f
 8000b24:	cccccccd 	.word	0xcccccccd

08000b28 <_Z15macOctet2stringRKhPc>:

// октет MAC-адреса в строку
void macOctet2string(const uint8_t& byte, char* text)
{
 8000b28:	b580      	push	{r7, lr}
 8000b2a:	b082      	sub	sp, #8
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	6078      	str	r0, [r7, #4]
 8000b30:	6039      	str	r1, [r7, #0]
	text[0] = crb.shar0 / 16;
 8000b32:	4b0f      	ldr	r3, [pc, #60]	; (8000b70 <_Z15macOctet2stringRKhPc+0x48>)
 8000b34:	7a5b      	ldrb	r3, [r3, #9]
 8000b36:	091b      	lsrs	r3, r3, #4
 8000b38:	b2da      	uxtb	r2, r3
 8000b3a:	683b      	ldr	r3, [r7, #0]
 8000b3c:	701a      	strb	r2, [r3, #0]
	hex2letter(text[0]);
 8000b3e:	6838      	ldr	r0, [r7, #0]
 8000b40:	f7ff feb2 	bl	80008a8 <_Z10hex2letterRc>
	text[1] = crb.shar0 % 16;
 8000b44:	4b0a      	ldr	r3, [pc, #40]	; (8000b70 <_Z15macOctet2stringRKhPc+0x48>)
 8000b46:	7a5a      	ldrb	r2, [r3, #9]
 8000b48:	683b      	ldr	r3, [r7, #0]
 8000b4a:	3301      	adds	r3, #1
 8000b4c:	f002 020f 	and.w	r2, r2, #15
 8000b50:	b2d2      	uxtb	r2, r2
 8000b52:	701a      	strb	r2, [r3, #0]
	hex2letter(text[1]);
 8000b54:	683b      	ldr	r3, [r7, #0]
 8000b56:	3301      	adds	r3, #1
 8000b58:	4618      	mov	r0, r3
 8000b5a:	f7ff fea5 	bl	80008a8 <_Z10hex2letterRc>
	text[2] = '\0';
 8000b5e:	683b      	ldr	r3, [r7, #0]
 8000b60:	3302      	adds	r3, #2
 8000b62:	2200      	movs	r2, #0
 8000b64:	701a      	strb	r2, [r3, #0]
}
 8000b66:	bf00      	nop
 8000b68:	3708      	adds	r7, #8
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	bd80      	pop	{r7, pc}
 8000b6e:	bf00      	nop
 8000b70:	20000370 	.word	0x20000370

08000b74 <_Z19concatenate3stringsPcPKcS1_>:

// склеивание трех строк
void concatenate3strings(char* moderated, const char* second, const char* third)
{
 8000b74:	b480      	push	{r7}
 8000b76:	b087      	sub	sp, #28
 8000b78:	af00      	add	r7, sp, #0
 8000b7a:	60f8      	str	r0, [r7, #12]
 8000b7c:	60b9      	str	r1, [r7, #8]
 8000b7e:	607a      	str	r2, [r7, #4]
	int index {0};
 8000b80:	2300      	movs	r3, #0
 8000b82:	617b      	str	r3, [r7, #20]
	int index2 {0};
 8000b84:	2300      	movs	r3, #0
 8000b86:	613b      	str	r3, [r7, #16]
	while (moderated[index] != '\0')
 8000b88:	697b      	ldr	r3, [r7, #20]
 8000b8a:	68fa      	ldr	r2, [r7, #12]
 8000b8c:	4413      	add	r3, r2
 8000b8e:	781b      	ldrb	r3, [r3, #0]
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d003      	beq.n	8000b9c <_Z19concatenate3stringsPcPKcS1_+0x28>
	{
		++index;
 8000b94:	697b      	ldr	r3, [r7, #20]
 8000b96:	3301      	adds	r3, #1
 8000b98:	617b      	str	r3, [r7, #20]
	while (moderated[index] != '\0')
 8000b9a:	e7f5      	b.n	8000b88 <_Z19concatenate3stringsPcPKcS1_+0x14>
	}
	while (second[index2] != '\0')
 8000b9c:	693b      	ldr	r3, [r7, #16]
 8000b9e:	68ba      	ldr	r2, [r7, #8]
 8000ba0:	4413      	add	r3, r2
 8000ba2:	781b      	ldrb	r3, [r3, #0]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d00e      	beq.n	8000bc6 <_Z19concatenate3stringsPcPKcS1_+0x52>
	{
		moderated[index] = second[index2];
 8000ba8:	693b      	ldr	r3, [r7, #16]
 8000baa:	68ba      	ldr	r2, [r7, #8]
 8000bac:	441a      	add	r2, r3
 8000bae:	697b      	ldr	r3, [r7, #20]
 8000bb0:	68f9      	ldr	r1, [r7, #12]
 8000bb2:	440b      	add	r3, r1
 8000bb4:	7812      	ldrb	r2, [r2, #0]
 8000bb6:	701a      	strb	r2, [r3, #0]
		++index;
 8000bb8:	697b      	ldr	r3, [r7, #20]
 8000bba:	3301      	adds	r3, #1
 8000bbc:	617b      	str	r3, [r7, #20]
		++index2;
 8000bbe:	693b      	ldr	r3, [r7, #16]
 8000bc0:	3301      	adds	r3, #1
 8000bc2:	613b      	str	r3, [r7, #16]
	while (second[index2] != '\0')
 8000bc4:	e7ea      	b.n	8000b9c <_Z19concatenate3stringsPcPKcS1_+0x28>
	}
	index2 = 0;
 8000bc6:	2300      	movs	r3, #0
 8000bc8:	613b      	str	r3, [r7, #16]
	while (third[index2] != '\0')
 8000bca:	693b      	ldr	r3, [r7, #16]
 8000bcc:	687a      	ldr	r2, [r7, #4]
 8000bce:	4413      	add	r3, r2
 8000bd0:	781b      	ldrb	r3, [r3, #0]
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d00e      	beq.n	8000bf4 <_Z19concatenate3stringsPcPKcS1_+0x80>
	{
		moderated[index] = third[index2];
 8000bd6:	693b      	ldr	r3, [r7, #16]
 8000bd8:	687a      	ldr	r2, [r7, #4]
 8000bda:	441a      	add	r2, r3
 8000bdc:	697b      	ldr	r3, [r7, #20]
 8000bde:	68f9      	ldr	r1, [r7, #12]
 8000be0:	440b      	add	r3, r1
 8000be2:	7812      	ldrb	r2, [r2, #0]
 8000be4:	701a      	strb	r2, [r3, #0]
		++index;
 8000be6:	697b      	ldr	r3, [r7, #20]
 8000be8:	3301      	adds	r3, #1
 8000bea:	617b      	str	r3, [r7, #20]
		++index2;
 8000bec:	693b      	ldr	r3, [r7, #16]
 8000bee:	3301      	adds	r3, #1
 8000bf0:	613b      	str	r3, [r7, #16]
	while (third[index2] != '\0')
 8000bf2:	e7ea      	b.n	8000bca <_Z19concatenate3stringsPcPKcS1_+0x56>
	}
	moderated[index] = '\0';
 8000bf4:	697b      	ldr	r3, [r7, #20]
 8000bf6:	68fa      	ldr	r2, [r7, #12]
 8000bf8:	4413      	add	r3, r2
 8000bfa:	2200      	movs	r2, #0
 8000bfc:	701a      	strb	r2, [r3, #0]
	return;
 8000bfe:	bf00      	nop
}
 8000c00:	371c      	adds	r7, #28
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bc80      	pop	{r7}
 8000c06:	4770      	bx	lr

08000c08 <_Z19concatenate7stringsPcPS_>:

void concatenate7strings(char* newString, char** array)
{
 8000c08:	b480      	push	{r7}
 8000c0a:	b087      	sub	sp, #28
 8000c0c:	af00      	add	r7, sp, #0
 8000c0e:	6078      	str	r0, [r7, #4]
 8000c10:	6039      	str	r1, [r7, #0]
	int index {0};
 8000c12:	2300      	movs	r3, #0
 8000c14:	617b      	str	r3, [r7, #20]
	for (int i = 0; i < 7; ++i)
 8000c16:	2300      	movs	r3, #0
 8000c18:	613b      	str	r3, [r7, #16]
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	2b06      	cmp	r3, #6
 8000c1e:	dc22      	bgt.n	8000c66 <_Z19concatenate7stringsPcPS_+0x5e>
	{
		int index2 {0};
 8000c20:	2300      	movs	r3, #0
 8000c22:	60fb      	str	r3, [r7, #12]
		while (array[i][index2] != '\0')
 8000c24:	693b      	ldr	r3, [r7, #16]
 8000c26:	009b      	lsls	r3, r3, #2
 8000c28:	683a      	ldr	r2, [r7, #0]
 8000c2a:	4413      	add	r3, r2
 8000c2c:	681a      	ldr	r2, [r3, #0]
 8000c2e:	68fb      	ldr	r3, [r7, #12]
 8000c30:	4413      	add	r3, r2
 8000c32:	781b      	ldrb	r3, [r3, #0]
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d012      	beq.n	8000c5e <_Z19concatenate7stringsPcPS_+0x56>
		{
			newString[index] = array[i][index2];
 8000c38:	693b      	ldr	r3, [r7, #16]
 8000c3a:	009b      	lsls	r3, r3, #2
 8000c3c:	683a      	ldr	r2, [r7, #0]
 8000c3e:	4413      	add	r3, r2
 8000c40:	681a      	ldr	r2, [r3, #0]
 8000c42:	68fb      	ldr	r3, [r7, #12]
 8000c44:	441a      	add	r2, r3
 8000c46:	697b      	ldr	r3, [r7, #20]
 8000c48:	6879      	ldr	r1, [r7, #4]
 8000c4a:	440b      	add	r3, r1
 8000c4c:	7812      	ldrb	r2, [r2, #0]
 8000c4e:	701a      	strb	r2, [r3, #0]
			++index;
 8000c50:	697b      	ldr	r3, [r7, #20]
 8000c52:	3301      	adds	r3, #1
 8000c54:	617b      	str	r3, [r7, #20]
			++index2;
 8000c56:	68fb      	ldr	r3, [r7, #12]
 8000c58:	3301      	adds	r3, #1
 8000c5a:	60fb      	str	r3, [r7, #12]
		while (array[i][index2] != '\0')
 8000c5c:	e7e2      	b.n	8000c24 <_Z19concatenate7stringsPcPS_+0x1c>
	for (int i = 0; i < 7; ++i)
 8000c5e:	693b      	ldr	r3, [r7, #16]
 8000c60:	3301      	adds	r3, #1
 8000c62:	613b      	str	r3, [r7, #16]
 8000c64:	e7d9      	b.n	8000c1a <_Z19concatenate7stringsPcPS_+0x12>
		}
	}
	newString[index] = '\0';
 8000c66:	697b      	ldr	r3, [r7, #20]
 8000c68:	687a      	ldr	r2, [r7, #4]
 8000c6a:	4413      	add	r3, r2
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	701a      	strb	r2, [r3, #0]
	return;
 8000c70:	bf00      	nop
}
 8000c72:	371c      	adds	r7, #28
 8000c74:	46bd      	mov	sp, r7
 8000c76:	bc80      	pop	{r7}
 8000c78:	4770      	bx	lr
	...

08000c7c <_Z8fillTextv>:
	}
	else return 0;
}

void fillText()
{
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	af00      	add	r7, sp, #0
	byte_int2string(crb.sipr0, textValue);
 8000c80:	493f      	ldr	r1, [pc, #252]	; (8000d80 <_Z8fillTextv+0x104>)
 8000c82:	4840      	ldr	r0, [pc, #256]	; (8000d84 <_Z8fillTextv+0x108>)
 8000c84:	f7ff fef0 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text0, textValue, textEnd);
 8000c88:	4a3f      	ldr	r2, [pc, #252]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000c8a:	493d      	ldr	r1, [pc, #244]	; (8000d80 <_Z8fillTextv+0x104>)
 8000c8c:	483f      	ldr	r0, [pc, #252]	; (8000d8c <_Z8fillTextv+0x110>)
 8000c8e:	f7ff ff71 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.sipr1, textValue);
 8000c92:	493b      	ldr	r1, [pc, #236]	; (8000d80 <_Z8fillTextv+0x104>)
 8000c94:	483e      	ldr	r0, [pc, #248]	; (8000d90 <_Z8fillTextv+0x114>)
 8000c96:	f7ff fee7 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text1, textValue, textEnd);
 8000c9a:	4a3b      	ldr	r2, [pc, #236]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000c9c:	4938      	ldr	r1, [pc, #224]	; (8000d80 <_Z8fillTextv+0x104>)
 8000c9e:	483d      	ldr	r0, [pc, #244]	; (8000d94 <_Z8fillTextv+0x118>)
 8000ca0:	f7ff ff68 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.sipr2, textValue);
 8000ca4:	4936      	ldr	r1, [pc, #216]	; (8000d80 <_Z8fillTextv+0x104>)
 8000ca6:	483c      	ldr	r0, [pc, #240]	; (8000d98 <_Z8fillTextv+0x11c>)
 8000ca8:	f7ff fede 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text2, textValue, textEnd);
 8000cac:	4a36      	ldr	r2, [pc, #216]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000cae:	4934      	ldr	r1, [pc, #208]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cb0:	483a      	ldr	r0, [pc, #232]	; (8000d9c <_Z8fillTextv+0x120>)
 8000cb2:	f7ff ff5f 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.sipr3, textValue);
 8000cb6:	4932      	ldr	r1, [pc, #200]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cb8:	4839      	ldr	r0, [pc, #228]	; (8000da0 <_Z8fillTextv+0x124>)
 8000cba:	f7ff fed5 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text3, textValue, textEnd);
 8000cbe:	4a32      	ldr	r2, [pc, #200]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000cc0:	492f      	ldr	r1, [pc, #188]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cc2:	4838      	ldr	r0, [pc, #224]	; (8000da4 <_Z8fillTextv+0x128>)
 8000cc4:	f7ff ff56 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>

	byte_int2string(crb.subr0, textValue);
 8000cc8:	492d      	ldr	r1, [pc, #180]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cca:	4837      	ldr	r0, [pc, #220]	; (8000da8 <_Z8fillTextv+0x12c>)
 8000ccc:	f7ff fecc 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text4, textValue, textEnd);
 8000cd0:	4a2d      	ldr	r2, [pc, #180]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000cd2:	492b      	ldr	r1, [pc, #172]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cd4:	4835      	ldr	r0, [pc, #212]	; (8000dac <_Z8fillTextv+0x130>)
 8000cd6:	f7ff ff4d 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.subr1, textValue);
 8000cda:	4929      	ldr	r1, [pc, #164]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cdc:	4834      	ldr	r0, [pc, #208]	; (8000db0 <_Z8fillTextv+0x134>)
 8000cde:	f7ff fec3 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text5, textValue, textEnd);
 8000ce2:	4a29      	ldr	r2, [pc, #164]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000ce4:	4926      	ldr	r1, [pc, #152]	; (8000d80 <_Z8fillTextv+0x104>)
 8000ce6:	4833      	ldr	r0, [pc, #204]	; (8000db4 <_Z8fillTextv+0x138>)
 8000ce8:	f7ff ff44 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.subr2, textValue);
 8000cec:	4924      	ldr	r1, [pc, #144]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cee:	4832      	ldr	r0, [pc, #200]	; (8000db8 <_Z8fillTextv+0x13c>)
 8000cf0:	f7ff feba 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text6, textValue, textEnd);
 8000cf4:	4a24      	ldr	r2, [pc, #144]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000cf6:	4922      	ldr	r1, [pc, #136]	; (8000d80 <_Z8fillTextv+0x104>)
 8000cf8:	4830      	ldr	r0, [pc, #192]	; (8000dbc <_Z8fillTextv+0x140>)
 8000cfa:	f7ff ff3b 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	byte_int2string(crb.subr3, textValue);
 8000cfe:	4920      	ldr	r1, [pc, #128]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d00:	482f      	ldr	r0, [pc, #188]	; (8000dc0 <_Z8fillTextv+0x144>)
 8000d02:	f7ff feb1 	bl	8000a68 <_Z15byte_int2stringRKhPc>
	concatenate3strings(text7, textValue, textEnd);
 8000d06:	4a20      	ldr	r2, [pc, #128]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d08:	491d      	ldr	r1, [pc, #116]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d0a:	482e      	ldr	r0, [pc, #184]	; (8000dc4 <_Z8fillTextv+0x148>)
 8000d0c:	f7ff ff32 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>

	macOctet2string(crb.shar0, textValue);
 8000d10:	491b      	ldr	r1, [pc, #108]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d12:	482d      	ldr	r0, [pc, #180]	; (8000dc8 <_Z8fillTextv+0x14c>)
 8000d14:	f7ff ff08 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text8, textValue, textEnd);
 8000d18:	4a1b      	ldr	r2, [pc, #108]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d1a:	4919      	ldr	r1, [pc, #100]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d1c:	482b      	ldr	r0, [pc, #172]	; (8000dcc <_Z8fillTextv+0x150>)
 8000d1e:	f7ff ff29 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	macOctet2string(crb.shar1, textValue);
 8000d22:	4917      	ldr	r1, [pc, #92]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d24:	482a      	ldr	r0, [pc, #168]	; (8000dd0 <_Z8fillTextv+0x154>)
 8000d26:	f7ff feff 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text9, textValue, textEnd);
 8000d2a:	4a17      	ldr	r2, [pc, #92]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d2c:	4914      	ldr	r1, [pc, #80]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d2e:	4829      	ldr	r0, [pc, #164]	; (8000dd4 <_Z8fillTextv+0x158>)
 8000d30:	f7ff ff20 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	macOctet2string(crb.shar2, textValue);
 8000d34:	4912      	ldr	r1, [pc, #72]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d36:	4828      	ldr	r0, [pc, #160]	; (8000dd8 <_Z8fillTextv+0x15c>)
 8000d38:	f7ff fef6 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text10, textValue, textEnd);
 8000d3c:	4a12      	ldr	r2, [pc, #72]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d3e:	4910      	ldr	r1, [pc, #64]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d40:	4826      	ldr	r0, [pc, #152]	; (8000ddc <_Z8fillTextv+0x160>)
 8000d42:	f7ff ff17 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	macOctet2string(crb.shar3, textValue);
 8000d46:	490e      	ldr	r1, [pc, #56]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d48:	4825      	ldr	r0, [pc, #148]	; (8000de0 <_Z8fillTextv+0x164>)
 8000d4a:	f7ff feed 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text11, textValue, textEnd);
 8000d4e:	4a0e      	ldr	r2, [pc, #56]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d50:	490b      	ldr	r1, [pc, #44]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d52:	4824      	ldr	r0, [pc, #144]	; (8000de4 <_Z8fillTextv+0x168>)
 8000d54:	f7ff ff0e 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	macOctet2string(crb.shar4, textValue);
 8000d58:	4909      	ldr	r1, [pc, #36]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d5a:	4823      	ldr	r0, [pc, #140]	; (8000de8 <_Z8fillTextv+0x16c>)
 8000d5c:	f7ff fee4 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text12, textValue, textEnd);
 8000d60:	4a09      	ldr	r2, [pc, #36]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d62:	4907      	ldr	r1, [pc, #28]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d64:	4821      	ldr	r0, [pc, #132]	; (8000dec <_Z8fillTextv+0x170>)
 8000d66:	f7ff ff05 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>
	macOctet2string(crb.shar5, textValue);
 8000d6a:	4905      	ldr	r1, [pc, #20]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d6c:	4820      	ldr	r0, [pc, #128]	; (8000df0 <_Z8fillTextv+0x174>)
 8000d6e:	f7ff fedb 	bl	8000b28 <_Z15macOctet2stringRKhPc>
	concatenate3strings(text13, textValue, textEnd);
 8000d72:	4a05      	ldr	r2, [pc, #20]	; (8000d88 <_Z8fillTextv+0x10c>)
 8000d74:	4902      	ldr	r1, [pc, #8]	; (8000d80 <_Z8fillTextv+0x104>)
 8000d76:	481f      	ldr	r0, [pc, #124]	; (8000df4 <_Z8fillTextv+0x178>)
 8000d78:	f7ff fefc 	bl	8000b74 <_Z19concatenate3stringsPcPKcS1_>

	return;
 8000d7c:	bf00      	nop
}
 8000d7e:	bd80      	pop	{r7, pc}
 8000d80:	200004fc 	.word	0x200004fc
 8000d84:	2000037f 	.word	0x2000037f
 8000d88:	20000040 	.word	0x20000040
 8000d8c:	20000000 	.word	0x20000000
 8000d90:	20000380 	.word	0x20000380
 8000d94:	20000044 	.word	0x20000044
 8000d98:	20000381 	.word	0x20000381
 8000d9c:	20000068 	.word	0x20000068
 8000da0:	20000382 	.word	0x20000382
 8000da4:	2000008c 	.word	0x2000008c
 8000da8:	20000375 	.word	0x20000375
 8000dac:	200000b0 	.word	0x200000b0
 8000db0:	20000376 	.word	0x20000376
 8000db4:	200000dc 	.word	0x200000dc
 8000db8:	20000377 	.word	0x20000377
 8000dbc:	20000108 	.word	0x20000108
 8000dc0:	20000378 	.word	0x20000378
 8000dc4:	20000134 	.word	0x20000134
 8000dc8:	20000379 	.word	0x20000379
 8000dcc:	20000160 	.word	0x20000160
 8000dd0:	2000037a 	.word	0x2000037a
 8000dd4:	20000188 	.word	0x20000188
 8000dd8:	2000037b 	.word	0x2000037b
 8000ddc:	200001b0 	.word	0x200001b0
 8000de0:	2000037c 	.word	0x2000037c
 8000de4:	200001d8 	.word	0x200001d8
 8000de8:	2000037d 	.word	0x2000037d
 8000dec:	20000200 	.word	0x20000200
 8000df0:	2000037e 	.word	0x2000037e
 8000df4:	20000228 	.word	0x20000228

08000df8 <_Z13fillFinalTextv>:

void fillFinalText()
{
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	af00      	add	r7, sp, #0
	adr_int2string(receivedIPAddress, text16);
 8000dfc:	4908      	ldr	r1, [pc, #32]	; (8000e20 <_Z13fillFinalTextv+0x28>)
 8000dfe:	4809      	ldr	r0, [pc, #36]	; (8000e24 <_Z13fillFinalTextv+0x2c>)
 8000e00:	f7ff fd6c 	bl	80008dc <_Z14adr_int2stringPKhPc>
	adr_int2string(receivedSubnetMask, text18);
 8000e04:	4908      	ldr	r1, [pc, #32]	; (8000e28 <_Z13fillFinalTextv+0x30>)
 8000e06:	4809      	ldr	r0, [pc, #36]	; (8000e2c <_Z13fillFinalTextv+0x34>)
 8000e08:	f7ff fd68 	bl	80008dc <_Z14adr_int2stringPKhPc>
	mac_int2string(receivedMACAddress, text20);
 8000e0c:	4908      	ldr	r1, [pc, #32]	; (8000e30 <_Z13fillFinalTextv+0x38>)
 8000e0e:	4809      	ldr	r0, [pc, #36]	; (8000e34 <_Z13fillFinalTextv+0x3c>)
 8000e10:	f7ff fdde 	bl	80009d0 <_Z14mac_int2stringPKhPc>
	concatenate7strings(textFinal, arrFinalText);
 8000e14:	4908      	ldr	r1, [pc, #32]	; (8000e38 <_Z13fillFinalTextv+0x40>)
 8000e16:	4809      	ldr	r0, [pc, #36]	; (8000e3c <_Z13fillFinalTextv+0x44>)
 8000e18:	f7ff fef6 	bl	8000c08 <_Z19concatenate7stringsPcPS_>
	return;
 8000e1c:	bf00      	nop
}
 8000e1e:	bd80      	pop	{r7, pc}
 8000e20:	20000278 	.word	0x20000278
 8000e24:	200023a0 	.word	0x200023a0
 8000e28:	20000290 	.word	0x20000290
 8000e2c:	200023a4 	.word	0x200023a4
 8000e30:	200002a0 	.word	0x200002a0
 8000e34:	200023a8 	.word	0x200023a8
 8000e38:	20000300 	.word	0x20000300
 8000e3c:	20000534 	.word	0x20000534

08000e40 <_Z12saveSettingsv>:

void saveSettings()
{
 8000e40:	b580      	push	{r7, lr}
 8000e42:	af00      	add	r7, sp, #0
	crb.sipr0 = receivedIPAddress[0];
 8000e44:	4b1d      	ldr	r3, [pc, #116]	; (8000ebc <_Z12saveSettingsv+0x7c>)
 8000e46:	781a      	ldrb	r2, [r3, #0]
 8000e48:	4b1d      	ldr	r3, [pc, #116]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e4a:	73da      	strb	r2, [r3, #15]
	crb.sipr1 = receivedIPAddress[1];
 8000e4c:	4b1b      	ldr	r3, [pc, #108]	; (8000ebc <_Z12saveSettingsv+0x7c>)
 8000e4e:	785a      	ldrb	r2, [r3, #1]
 8000e50:	4b1b      	ldr	r3, [pc, #108]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e52:	741a      	strb	r2, [r3, #16]
	crb.sipr2 = receivedIPAddress[2];
 8000e54:	4b19      	ldr	r3, [pc, #100]	; (8000ebc <_Z12saveSettingsv+0x7c>)
 8000e56:	789a      	ldrb	r2, [r3, #2]
 8000e58:	4b19      	ldr	r3, [pc, #100]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e5a:	745a      	strb	r2, [r3, #17]
	crb.sipr3 = receivedIPAddress[3];
 8000e5c:	4b17      	ldr	r3, [pc, #92]	; (8000ebc <_Z12saveSettingsv+0x7c>)
 8000e5e:	78da      	ldrb	r2, [r3, #3]
 8000e60:	4b17      	ldr	r3, [pc, #92]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e62:	749a      	strb	r2, [r3, #18]
	crb.subr0 = receivedSubnetMask[0];
 8000e64:	4b17      	ldr	r3, [pc, #92]	; (8000ec4 <_Z12saveSettingsv+0x84>)
 8000e66:	781a      	ldrb	r2, [r3, #0]
 8000e68:	4b15      	ldr	r3, [pc, #84]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e6a:	715a      	strb	r2, [r3, #5]
	crb.subr1 = receivedSubnetMask[1];
 8000e6c:	4b15      	ldr	r3, [pc, #84]	; (8000ec4 <_Z12saveSettingsv+0x84>)
 8000e6e:	785a      	ldrb	r2, [r3, #1]
 8000e70:	4b13      	ldr	r3, [pc, #76]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e72:	719a      	strb	r2, [r3, #6]
	crb.subr2 = receivedSubnetMask[2];
 8000e74:	4b13      	ldr	r3, [pc, #76]	; (8000ec4 <_Z12saveSettingsv+0x84>)
 8000e76:	789a      	ldrb	r2, [r3, #2]
 8000e78:	4b11      	ldr	r3, [pc, #68]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e7a:	71da      	strb	r2, [r3, #7]
	crb.subr3 = receivedSubnetMask[3];
 8000e7c:	4b11      	ldr	r3, [pc, #68]	; (8000ec4 <_Z12saveSettingsv+0x84>)
 8000e7e:	78da      	ldrb	r2, [r3, #3]
 8000e80:	4b0f      	ldr	r3, [pc, #60]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e82:	721a      	strb	r2, [r3, #8]
	crb.shar0 = receivedMACAddress[0];
 8000e84:	4b10      	ldr	r3, [pc, #64]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000e86:	781a      	ldrb	r2, [r3, #0]
 8000e88:	4b0d      	ldr	r3, [pc, #52]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e8a:	725a      	strb	r2, [r3, #9]
	crb.shar1 = receivedMACAddress[1];
 8000e8c:	4b0e      	ldr	r3, [pc, #56]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000e8e:	785a      	ldrb	r2, [r3, #1]
 8000e90:	4b0b      	ldr	r3, [pc, #44]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e92:	729a      	strb	r2, [r3, #10]
	crb.shar2 = receivedMACAddress[2];
 8000e94:	4b0c      	ldr	r3, [pc, #48]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000e96:	789a      	ldrb	r2, [r3, #2]
 8000e98:	4b09      	ldr	r3, [pc, #36]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000e9a:	72da      	strb	r2, [r3, #11]
	crb.shar3 = receivedMACAddress[3];
 8000e9c:	4b0a      	ldr	r3, [pc, #40]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000e9e:	78da      	ldrb	r2, [r3, #3]
 8000ea0:	4b07      	ldr	r3, [pc, #28]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000ea2:	731a      	strb	r2, [r3, #12]
	crb.shar4 = receivedMACAddress[4];
 8000ea4:	4b08      	ldr	r3, [pc, #32]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000ea6:	791a      	ldrb	r2, [r3, #4]
 8000ea8:	4b05      	ldr	r3, [pc, #20]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000eaa:	735a      	strb	r2, [r3, #13]
	crb.shar5 = receivedMACAddress[5];
 8000eac:	4b06      	ldr	r3, [pc, #24]	; (8000ec8 <_Z12saveSettingsv+0x88>)
 8000eae:	795a      	ldrb	r2, [r3, #5]
 8000eb0:	4b03      	ldr	r3, [pc, #12]	; (8000ec0 <_Z12saveSettingsv+0x80>)
 8000eb2:	739a      	strb	r2, [r3, #14]

	writeFLASH();
 8000eb4:	f000 f80a 	bl	8000ecc <_Z10writeFLASHv>

	NVIC_SystemReset();
 8000eb8:	f7ff fcc6 	bl	8000848 <__NVIC_SystemReset>
 8000ebc:	200023a0 	.word	0x200023a0
 8000ec0:	20000370 	.word	0x20000370
 8000ec4:	200023a4 	.word	0x200023a4
 8000ec8:	200023a8 	.word	0x200023a8

08000ecc <_Z10writeFLASHv>:
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b086      	sub	sp, #24
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	f001 fc85 	bl	80027e0 <HAL_FLASH_Unlock>
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	60bb      	str	r3, [r7, #8]
 8000eda:	4b20      	ldr	r3, [pc, #128]	; (8000f5c <_Z10writeFLASHv+0x90>)
 8000edc:	613b      	str	r3, [r7, #16]
 8000ede:	2301      	movs	r3, #1
 8000ee0:	617b      	str	r3, [r7, #20]
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	607b      	str	r3, [r7, #4]
 8000ee6:	1d3a      	adds	r2, r7, #4
 8000ee8:	f107 0308 	add.w	r3, r7, #8
 8000eec:	4611      	mov	r1, r2
 8000eee:	4618      	mov	r0, r3
 8000ef0:	f001 fd5e 	bl	80029b0 <HAL_FLASHEx_Erase>
 8000ef4:	2206      	movs	r2, #6
 8000ef6:	491a      	ldr	r1, [pc, #104]	; (8000f60 <_Z10writeFLASHv+0x94>)
 8000ef8:	4818      	ldr	r0, [pc, #96]	; (8000f5c <_Z10writeFLASHv+0x90>)
 8000efa:	f000 f853 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000efe:	2206      	movs	r2, #6
 8000f00:	4918      	ldr	r1, [pc, #96]	; (8000f64 <_Z10writeFLASHv+0x98>)
 8000f02:	4819      	ldr	r0, [pc, #100]	; (8000f68 <_Z10writeFLASHv+0x9c>)
 8000f04:	f000 f84e 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f08:	2206      	movs	r2, #6
 8000f0a:	4918      	ldr	r1, [pc, #96]	; (8000f6c <_Z10writeFLASHv+0xa0>)
 8000f0c:	4818      	ldr	r0, [pc, #96]	; (8000f70 <_Z10writeFLASHv+0xa4>)
 8000f0e:	f000 f849 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f12:	2206      	movs	r2, #6
 8000f14:	4917      	ldr	r1, [pc, #92]	; (8000f74 <_Z10writeFLASHv+0xa8>)
 8000f16:	4818      	ldr	r0, [pc, #96]	; (8000f78 <_Z10writeFLASHv+0xac>)
 8000f18:	f000 f844 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f1c:	2206      	movs	r2, #6
 8000f1e:	4917      	ldr	r1, [pc, #92]	; (8000f7c <_Z10writeFLASHv+0xb0>)
 8000f20:	4817      	ldr	r0, [pc, #92]	; (8000f80 <_Z10writeFLASHv+0xb4>)
 8000f22:	f000 f83f 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f26:	2206      	movs	r2, #6
 8000f28:	4916      	ldr	r1, [pc, #88]	; (8000f84 <_Z10writeFLASHv+0xb8>)
 8000f2a:	4817      	ldr	r0, [pc, #92]	; (8000f88 <_Z10writeFLASHv+0xbc>)
 8000f2c:	f000 f83a 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f30:	2206      	movs	r2, #6
 8000f32:	4916      	ldr	r1, [pc, #88]	; (8000f8c <_Z10writeFLASHv+0xc0>)
 8000f34:	4816      	ldr	r0, [pc, #88]	; (8000f90 <_Z10writeFLASHv+0xc4>)
 8000f36:	f000 f835 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f3a:	2206      	movs	r2, #6
 8000f3c:	4915      	ldr	r1, [pc, #84]	; (8000f94 <_Z10writeFLASHv+0xc8>)
 8000f3e:	4816      	ldr	r0, [pc, #88]	; (8000f98 <_Z10writeFLASHv+0xcc>)
 8000f40:	f000 f830 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f44:	2206      	movs	r2, #6
 8000f46:	4915      	ldr	r1, [pc, #84]	; (8000f9c <_Z10writeFLASHv+0xd0>)
 8000f48:	4815      	ldr	r0, [pc, #84]	; (8000fa0 <_Z10writeFLASHv+0xd4>)
 8000f4a:	f000 f82b 	bl	8000fa4 <_Z15writeBlockFLASHmPyj>
 8000f4e:	f001 fc6d 	bl	800282c <HAL_FLASH_Lock>
 8000f52:	bf00      	nop
 8000f54:	3718      	adds	r7, #24
 8000f56:	46bd      	mov	sp, r7
 8000f58:	bd80      	pop	{r7, pc}
 8000f5a:	bf00      	nop
 8000f5c:	0801fc00 	.word	0x0801fc00
 8000f60:	20000370 	.word	0x20000370
 8000f64:	200003a0 	.word	0x200003a0
 8000f68:	0801fc40 	.word	0x0801fc40
 8000f6c:	200003d0 	.word	0x200003d0
 8000f70:	0801fc78 	.word	0x0801fc78
 8000f74:	20000400 	.word	0x20000400
 8000f78:	0801fcb0 	.word	0x0801fcb0
 8000f7c:	200007a8 	.word	0x200007a8
 8000f80:	0801fce8 	.word	0x0801fce8
 8000f84:	200007d8 	.word	0x200007d8
 8000f88:	0801fd20 	.word	0x0801fd20
 8000f8c:	20000808 	.word	0x20000808
 8000f90:	0801fd58 	.word	0x0801fd58
 8000f94:	20000838 	.word	0x20000838
 8000f98:	0801fd90 	.word	0x0801fd90
 8000f9c:	20000430 	.word	0x20000430
 8000fa0:	0801fdc8 	.word	0x0801fdc8

08000fa4 <_Z15writeBlockFLASHmPyj>:
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b086      	sub	sp, #24
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	60f8      	str	r0, [r7, #12]
 8000fac:	60b9      	str	r1, [r7, #8]
 8000fae:	607a      	str	r2, [r7, #4]
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	617b      	str	r3, [r7, #20]
 8000fb4:	697a      	ldr	r2, [r7, #20]
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	429a      	cmp	r2, r3
 8000fba:	d217      	bcs.n	8000fec <_Z15writeBlockFLASHmPyj+0x48>
 8000fbc:	697b      	ldr	r3, [r7, #20]
 8000fbe:	00da      	lsls	r2, r3, #3
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	18d1      	adds	r1, r2, r3
 8000fc4:	68bb      	ldr	r3, [r7, #8]
 8000fc6:	f103 0208 	add.w	r2, r3, #8
 8000fca:	60ba      	str	r2, [r7, #8]
 8000fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fd0:	2003      	movs	r0, #3
 8000fd2:	f001 fb95 	bl	8002700 <HAL_FLASH_Program>
 8000fd6:	4603      	mov	r3, r0
 8000fd8:	74fb      	strb	r3, [r7, #19]
 8000fda:	7cfb      	ldrb	r3, [r7, #19]
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	d103      	bne.n	8000fe8 <_Z15writeBlockFLASHmPyj+0x44>
 8000fe0:	697b      	ldr	r3, [r7, #20]
 8000fe2:	3301      	adds	r3, #1
 8000fe4:	617b      	str	r3, [r7, #20]
 8000fe6:	e7e5      	b.n	8000fb4 <_Z15writeBlockFLASHmPyj+0x10>
 8000fe8:	bf00      	nop
 8000fea:	bf00      	nop
 8000fec:	bf00      	nop
 8000fee:	3718      	adds	r7, #24
 8000ff0:	46bd      	mov	sp, r7
 8000ff2:	bd80      	pop	{r7, pc}

08000ff4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b084      	sub	sp, #16
 8000ff8:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ffa:	f001 f93d 	bl	8002278 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ffe:	f000 fb4b 	bl	8001698 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001002:	f000 fd17 	bl	8001a34 <_ZL12MX_GPIO_Initv>
  MX_SPI1_Init();
 8001006:	f000 fb97 	bl	8001738 <_ZL12MX_SPI1_Initv>
  MX_USART1_UART_Init();
 800100a:	f000 fce5 	bl	80019d8 <_ZL19MX_USART1_UART_Initv>
  MX_TIM4_Init();
 800100e:	f000 fc87 	bl	8001920 <_ZL12MX_TIM4_Initv>
  MX_TIM3_Init();
 8001012:	f000 fc29 	bl	8001868 <_ZL12MX_TIM3_Initv>
  MX_TIM2_Init();
 8001016:	f000 fbcb 	bl	80017b0 <_ZL12MX_TIM2_Initv>

  //char temp[4];
  //utoa(crb.sipr0, temp, 4);
  //text0[23] = temp[0];

  fillText();
 800101a:	f7ff fe2f 	bl	8000c7c <_Z8fillTextv>

  // Включаем чип W5500 через �?бро�?
  ethernetA1.reset();
 800101e:	48a1      	ldr	r0, [pc, #644]	; (80012a4 <main+0x2b0>)
 8001020:	f7ff f8d2 	bl	80001c8 <_ZN5W55005resetEv>

  // Запи�?ываем "на�?тройки" в блок реги�?тров CRB
  ethernetA1.writeArrayToCRB(&crb.mr, 47, W5500_MR);
 8001024:	2300      	movs	r3, #0
 8001026:	222f      	movs	r2, #47	; 0x2f
 8001028:	499f      	ldr	r1, [pc, #636]	; (80012a8 <main+0x2b4>)
 800102a:	489e      	ldr	r0, [pc, #632]	; (80012a4 <main+0x2b0>)
 800102c:	f7ff f91e 	bl	800026c <_ZN5W550015writeArrayToCRBEPhhh>

  HAL_Delay(10);
 8001030:	200a      	movs	r0, #10
 8001032:	f001 f983 	bl	800233c <HAL_Delay>

  // У�?танавливаем режим UDP дл�? �?окета 0
  //ethernetA1.writeByteToSRB(SOCKET0, W5500_Sn_MR_UDP | W5500_Sn_MR_MULTI_MFEN, W5500_Sn_MR);
  ethernetA1.writeByteToSRB(SOCKET0, W5500_Sn_MR_UDP, W5500_Sn_MR);
 8001036:	2300      	movs	r3, #0
 8001038:	2202      	movs	r2, #2
 800103a:	2108      	movs	r1, #8
 800103c:	4899      	ldr	r0, [pc, #612]	; (80012a4 <main+0x2b0>)
 800103e:	f7ff f9d0 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // У�?танавливаем режим TCP дл�? �?окета 1
  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_MR_TCP | W5500_Sn_MR_MULTI_MFEN, W5500_Sn_MR);
 8001042:	2300      	movs	r3, #0
 8001044:	2281      	movs	r2, #129	; 0x81
 8001046:	2128      	movs	r1, #40	; 0x28
 8001048:	4896      	ldr	r0, [pc, #600]	; (80012a4 <main+0x2b0>)
 800104a:	f7ff f9ca 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // У�?танавливаем режим TCP дл�? �?окета 2
  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_MR_TCP | W5500_Sn_MR_MULTI_MFEN, W5500_Sn_MR);
 800104e:	2300      	movs	r3, #0
 8001050:	2281      	movs	r2, #129	; 0x81
 8001052:	2148      	movs	r1, #72	; 0x48
 8001054:	4893      	ldr	r0, [pc, #588]	; (80012a4 <main+0x2b0>)
 8001056:	f7ff f9c4 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // Отключаем прерывани�? при отправке дл�? �?окета 0
  ethernetA1.writeByteToSRB(SOCKET0, W5500_Sn_IMR_SEND_OK_OFF, W5500_Sn_IMR);
 800105a:	232c      	movs	r3, #44	; 0x2c
 800105c:	22ef      	movs	r2, #239	; 0xef
 800105e:	2108      	movs	r1, #8
 8001060:	4890      	ldr	r0, [pc, #576]	; (80012a4 <main+0x2b0>)
 8001062:	f7ff f9be 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // Отключаем прерывани�? при отправке, �?оединении дл�? �?окета 1
  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_IMR_SEND_OK_OFF & W5500_Sn_IMR_CON_OFF, W5500_Sn_IMR);
 8001066:	232c      	movs	r3, #44	; 0x2c
 8001068:	22ee      	movs	r2, #238	; 0xee
 800106a:	2128      	movs	r1, #40	; 0x28
 800106c:	488d      	ldr	r0, [pc, #564]	; (80012a4 <main+0x2b0>)
 800106e:	f7ff f9b8 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // Отключаем прерывани�? при отправке дл�? �?окета 2
  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_IMR_SEND_OK_OFF, W5500_Sn_IMR);
 8001072:	232c      	movs	r3, #44	; 0x2c
 8001074:	22ef      	movs	r2, #239	; 0xef
 8001076:	2148      	movs	r1, #72	; 0x48
 8001078:	488a      	ldr	r0, [pc, #552]	; (80012a4 <main+0x2b0>)
 800107a:	f7ff f9b2 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  HAL_Delay(10);
 800107e:	200a      	movs	r0, #10
 8001080:	f001 f95c 	bl	800233c <HAL_Delay>

  // Запи�?ываем порты, MAC, IP в блок реги�?тров SRB �?окета 0
  ethernetA1.writeArrayToSRB(SOCKET0, &srb0.sNport0, 14, W5500_Sn_PORT);
 8001084:	2304      	movs	r3, #4
 8001086:	9300      	str	r3, [sp, #0]
 8001088:	230e      	movs	r3, #14
 800108a:	4a88      	ldr	r2, [pc, #544]	; (80012ac <main+0x2b8>)
 800108c:	2108      	movs	r1, #8
 800108e:	4885      	ldr	r0, [pc, #532]	; (80012a4 <main+0x2b0>)
 8001090:	f7ff fa20 	bl	80004d4 <_ZN5W550015writeArrayToSRBEhPhhh>

  // Запи�?ываем порты, MAC, IP в блок реги�?тров SRB �?окета 1
  ethernetA1.writeArrayToSRB(SOCKET1, &srb1.sNport0, 14, W5500_Sn_PORT);
 8001094:	2304      	movs	r3, #4
 8001096:	9300      	str	r3, [sp, #0]
 8001098:	230e      	movs	r3, #14
 800109a:	4a85      	ldr	r2, [pc, #532]	; (80012b0 <main+0x2bc>)
 800109c:	2128      	movs	r1, #40	; 0x28
 800109e:	4881      	ldr	r0, [pc, #516]	; (80012a4 <main+0x2b0>)
 80010a0:	f7ff fa18 	bl	80004d4 <_ZN5W550015writeArrayToSRBEhPhhh>

  // Запи�?ываем порты, MAC, IP в блок реги�?тров SRB �?окета 2
  ethernetA1.writeArrayToSRB(SOCKET2, &srb2.sNport0, 14, W5500_Sn_PORT);
 80010a4:	2304      	movs	r3, #4
 80010a6:	9300      	str	r3, [sp, #0]
 80010a8:	230e      	movs	r3, #14
 80010aa:	4a82      	ldr	r2, [pc, #520]	; (80012b4 <main+0x2c0>)
 80010ac:	2148      	movs	r1, #72	; 0x48
 80010ae:	487d      	ldr	r0, [pc, #500]	; (80012a4 <main+0x2b0>)
 80010b0:	f7ff fa10 	bl	80004d4 <_ZN5W550015writeArrayToSRBEhPhhh>

  HAL_Delay(10);
 80010b4:	200a      	movs	r0, #10
 80010b6:	f001 f941 	bl	800233c <HAL_Delay>

  // Открываем �?окет 0
  ethernetA1.writeByteToSRB(SOCKET0, W5500_Sn_CR_OPEN, W5500_Sn_CR);
 80010ba:	2301      	movs	r3, #1
 80010bc:	2201      	movs	r2, #1
 80010be:	2108      	movs	r1, #8
 80010c0:	4878      	ldr	r0, [pc, #480]	; (80012a4 <main+0x2b0>)
 80010c2:	f7ff f98e 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // Открываем �?окет 1
  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_CR_OPEN, W5500_Sn_CR);
 80010c6:	2301      	movs	r3, #1
 80010c8:	2201      	movs	r2, #1
 80010ca:	2128      	movs	r1, #40	; 0x28
 80010cc:	4875      	ldr	r0, [pc, #468]	; (80012a4 <main+0x2b0>)
 80010ce:	f7ff f988 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  // Открываем �?окет 2
  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_CR_OPEN, W5500_Sn_CR);
 80010d2:	2301      	movs	r3, #1
 80010d4:	2201      	movs	r2, #1
 80010d6:	2148      	movs	r1, #72	; 0x48
 80010d8:	4872      	ldr	r0, [pc, #456]	; (80012a4 <main+0x2b0>)
 80010da:	f7ff f982 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

  HAL_Delay(1);
 80010de:	2001      	movs	r0, #1
 80010e0:	f001 f92c 	bl	800233c <HAL_Delay>

  // провер�?ем что �?окет 1 проиницилизирован и запу�?каем режим �?ервера
  if (ethernetA1.readByteFromSRB(SOCKET1, W5500_Sn_SR) == W5500_Sn_SR_SOCK_INIT)
 80010e4:	2203      	movs	r2, #3
 80010e6:	2128      	movs	r1, #40	; 0x28
 80010e8:	486e      	ldr	r0, [pc, #440]	; (80012a4 <main+0x2b0>)
 80010ea:	f7ff f908 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 80010ee:	4603      	mov	r3, r0
 80010f0:	2b13      	cmp	r3, #19
 80010f2:	bf0c      	ite	eq
 80010f4:	2301      	moveq	r3, #1
 80010f6:	2300      	movne	r3, #0
 80010f8:	b2db      	uxtb	r3, r3
 80010fa:	2b00      	cmp	r3, #0
 80010fc:	d005      	beq.n	800110a <main+0x116>
  {
	  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_CR_LISTEN, W5500_Sn_CR);
 80010fe:	2301      	movs	r3, #1
 8001100:	2202      	movs	r2, #2
 8001102:	2128      	movs	r1, #40	; 0x28
 8001104:	4867      	ldr	r0, [pc, #412]	; (80012a4 <main+0x2b0>)
 8001106:	f7ff f96c 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
  }

  // провер�?ем что �?окет 2 проиницилизирован и запу�?каем режим �?ервера
  if (ethernetA1.readByteFromSRB(SOCKET2, W5500_Sn_SR) == W5500_Sn_SR_SOCK_INIT)
 800110a:	2203      	movs	r2, #3
 800110c:	2148      	movs	r1, #72	; 0x48
 800110e:	4865      	ldr	r0, [pc, #404]	; (80012a4 <main+0x2b0>)
 8001110:	f7ff f8f5 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 8001114:	4603      	mov	r3, r0
 8001116:	2b13      	cmp	r3, #19
 8001118:	bf0c      	ite	eq
 800111a:	2301      	moveq	r3, #1
 800111c:	2300      	movne	r3, #0
 800111e:	b2db      	uxtb	r3, r3
 8001120:	2b00      	cmp	r3, #0
 8001122:	d005      	beq.n	8001130 <main+0x13c>
  {
	  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_CR_LISTEN, W5500_Sn_CR);
 8001124:	2301      	movs	r3, #1
 8001126:	2202      	movs	r2, #2
 8001128:	2148      	movs	r1, #72	; 0x48
 800112a:	485e      	ldr	r0, [pc, #376]	; (80012a4 <main+0x2b0>)
 800112c:	f7ff f959 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
  }

  HAL_Delay(1);
 8001130:	2001      	movs	r0, #1
 8001132:	f001 f903 	bl	800233c <HAL_Delay>

  // Разрешаем прием по UART
  HAL_UART_Receive_IT(&huart1, &receivedByteUART, 1);
 8001136:	2201      	movs	r2, #1
 8001138:	495f      	ldr	r1, [pc, #380]	; (80012b8 <main+0x2c4>)
 800113a:	4860      	ldr	r0, [pc, #384]	; (80012bc <main+0x2c8>)
 800113c:	f003 fc6d 	bl	8004a1a <HAL_UART_Receive_IT>

  // очищаем флаги прерываний
  CLEAR_BIT(TIM3->SR, TIM_SR_UIF);
 8001140:	4b5f      	ldr	r3, [pc, #380]	; (80012c0 <main+0x2cc>)
 8001142:	691b      	ldr	r3, [r3, #16]
 8001144:	4a5e      	ldr	r2, [pc, #376]	; (80012c0 <main+0x2cc>)
 8001146:	f023 0301 	bic.w	r3, r3, #1
 800114a:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(TIM4->SR, TIM_SR_UIF);
 800114c:	4b5d      	ldr	r3, [pc, #372]	; (80012c4 <main+0x2d0>)
 800114e:	691b      	ldr	r3, [r3, #16]
 8001150:	4a5c      	ldr	r2, [pc, #368]	; (80012c4 <main+0x2d0>)
 8001152:	f023 0301 	bic.w	r3, r3, #1
 8001156:	6113      	str	r3, [r2, #16]
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  // провер�?ем е�?ть ли данные по UDP
	  if (socket0dataReady)
 8001158:	4b5b      	ldr	r3, [pc, #364]	; (80012c8 <main+0x2d4>)
 800115a:	781b      	ldrb	r3, [r3, #0]
 800115c:	2b00      	cmp	r3, #0
 800115e:	d022      	beq.n	80011a6 <main+0x1b2>
	  {
		  if((HAL_UART_GetState(&huart1) == HAL_UART_STATE_READY) || (HAL_UART_GetState(&huart1) == HAL_UART_STATE_BUSY_RX))
 8001160:	4856      	ldr	r0, [pc, #344]	; (80012bc <main+0x2c8>)
 8001162:	f003 fe49 	bl	8004df8 <HAL_UART_GetState>
 8001166:	4603      	mov	r3, r0
 8001168:	2b20      	cmp	r3, #32
 800116a:	d005      	beq.n	8001178 <main+0x184>
 800116c:	4853      	ldr	r0, [pc, #332]	; (80012bc <main+0x2c8>)
 800116e:	f003 fe43 	bl	8004df8 <HAL_UART_GetState>
 8001172:	4603      	mov	r3, r0
 8001174:	2b22      	cmp	r3, #34	; 0x22
 8001176:	d101      	bne.n	800117c <main+0x188>
 8001178:	2301      	movs	r3, #1
 800117a:	e000      	b.n	800117e <main+0x18a>
 800117c:	2300      	movs	r3, #0
 800117e:	2b00      	cmp	r3, #0
 8001180:	d011      	beq.n	80011a6 <main+0x1b2>
		  {
			  //// изначально было TX
			  HAL_GPIO_WritePin(LED_RX_GPIO_Port, LED_RX_Pin, GPIO_PIN_RESET);
 8001182:	2200      	movs	r2, #0
 8001184:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001188:	4850      	ldr	r0, [pc, #320]	; (80012cc <main+0x2d8>)
 800118a:	f001 fe3d 	bl	8002e08 <HAL_GPIO_WritePin>
			  HAL_UART_Transmit_IT(&huart1, &receiveSocket0data[8], (sizeOfReceiveSocket0data-8));
 800118e:	4b50      	ldr	r3, [pc, #320]	; (80012d0 <main+0x2dc>)
 8001190:	881b      	ldrh	r3, [r3, #0]
 8001192:	3b08      	subs	r3, #8
 8001194:	b29b      	uxth	r3, r3
 8001196:	461a      	mov	r2, r3
 8001198:	494e      	ldr	r1, [pc, #312]	; (80012d4 <main+0x2e0>)
 800119a:	4848      	ldr	r0, [pc, #288]	; (80012bc <main+0x2c8>)
 800119c:	f003 fbf9 	bl	8004992 <HAL_UART_Transmit_IT>

			  socket0dataReady = false;
 80011a0:	4b49      	ldr	r3, [pc, #292]	; (80012c8 <main+0x2d4>)
 80011a2:	2200      	movs	r2, #0
 80011a4:	701a      	strb	r2, [r3, #0]
		  }
	  }

	  // провер�?ем е�?ть ли данные по TCP
	  if (socket1dataReady)
 80011a6:	4b4c      	ldr	r3, [pc, #304]	; (80012d8 <main+0x2e4>)
 80011a8:	781b      	ldrb	r3, [r3, #0]
 80011aa:	2b00      	cmp	r3, #0
 80011ac:	d020      	beq.n	80011f0 <main+0x1fc>
	  {
		  if((HAL_UART_GetState(&huart1) == HAL_UART_STATE_READY) || (HAL_UART_GetState(&huart1) == HAL_UART_STATE_BUSY_RX))
 80011ae:	4843      	ldr	r0, [pc, #268]	; (80012bc <main+0x2c8>)
 80011b0:	f003 fe22 	bl	8004df8 <HAL_UART_GetState>
 80011b4:	4603      	mov	r3, r0
 80011b6:	2b20      	cmp	r3, #32
 80011b8:	d005      	beq.n	80011c6 <main+0x1d2>
 80011ba:	4840      	ldr	r0, [pc, #256]	; (80012bc <main+0x2c8>)
 80011bc:	f003 fe1c 	bl	8004df8 <HAL_UART_GetState>
 80011c0:	4603      	mov	r3, r0
 80011c2:	2b22      	cmp	r3, #34	; 0x22
 80011c4:	d101      	bne.n	80011ca <main+0x1d6>
 80011c6:	2301      	movs	r3, #1
 80011c8:	e000      	b.n	80011cc <main+0x1d8>
 80011ca:	2300      	movs	r3, #0
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	d00f      	beq.n	80011f0 <main+0x1fc>
		  {
			  //// изначально было TX
			  HAL_GPIO_WritePin(LED_RX_GPIO_Port, LED_RX_Pin, GPIO_PIN_RESET);
 80011d0:	2200      	movs	r2, #0
 80011d2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80011d6:	483d      	ldr	r0, [pc, #244]	; (80012cc <main+0x2d8>)
 80011d8:	f001 fe16 	bl	8002e08 <HAL_GPIO_WritePin>
			  HAL_UART_Transmit_IT(&huart1, receiveSocket1data, sizeOfReceiveSocket1data);
 80011dc:	4b3f      	ldr	r3, [pc, #252]	; (80012dc <main+0x2e8>)
 80011de:	881b      	ldrh	r3, [r3, #0]
 80011e0:	461a      	mov	r2, r3
 80011e2:	493f      	ldr	r1, [pc, #252]	; (80012e0 <main+0x2ec>)
 80011e4:	4835      	ldr	r0, [pc, #212]	; (80012bc <main+0x2c8>)
 80011e6:	f003 fbd4 	bl	8004992 <HAL_UART_Transmit_IT>

			  socket1dataReady = false;
 80011ea:	4b3b      	ldr	r3, [pc, #236]	; (80012d8 <main+0x2e4>)
 80011ec:	2200      	movs	r2, #0
 80011ee:	701a      	strb	r2, [r3, #0]
		  }
	  }

	  // провер�?ем е�?ть ли данные по Telnet
	  if (socket2dataReady)
 80011f0:	4b3c      	ldr	r3, [pc, #240]	; (80012e4 <main+0x2f0>)
 80011f2:	781b      	ldrb	r3, [r3, #0]
 80011f4:	2b00      	cmp	r3, #0
 80011f6:	f000 81c6 	beq.w	8001586 <main+0x592>
	  {
		  for(int i = 0; i < sizeOfReceiveSocket2data; ++i)
 80011fa:	2300      	movs	r3, #0
 80011fc:	607b      	str	r3, [r7, #4]
 80011fe:	4b3a      	ldr	r3, [pc, #232]	; (80012e8 <main+0x2f4>)
 8001200:	881b      	ldrh	r3, [r3, #0]
 8001202:	461a      	mov	r2, r3
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	4293      	cmp	r3, r2
 8001208:	da15      	bge.n	8001236 <main+0x242>
		  {
			  if (ptrWriteBufferTelnet <= ptrEndBufferTelnet)
 800120a:	4b38      	ldr	r3, [pc, #224]	; (80012ec <main+0x2f8>)
 800120c:	681a      	ldr	r2, [r3, #0]
 800120e:	4b38      	ldr	r3, [pc, #224]	; (80012f0 <main+0x2fc>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	429a      	cmp	r2, r3
 8001214:	d80b      	bhi.n	800122e <main+0x23a>
			  {
				  *ptrWriteBufferTelnet = receiveSocket2data[i];
 8001216:	4b35      	ldr	r3, [pc, #212]	; (80012ec <main+0x2f8>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	4936      	ldr	r1, [pc, #216]	; (80012f4 <main+0x300>)
 800121c:	687a      	ldr	r2, [r7, #4]
 800121e:	440a      	add	r2, r1
 8001220:	7812      	ldrb	r2, [r2, #0]
 8001222:	701a      	strb	r2, [r3, #0]
				  ++ptrWriteBufferTelnet;
 8001224:	4b31      	ldr	r3, [pc, #196]	; (80012ec <main+0x2f8>)
 8001226:	681b      	ldr	r3, [r3, #0]
 8001228:	3301      	adds	r3, #1
 800122a:	4a30      	ldr	r2, [pc, #192]	; (80012ec <main+0x2f8>)
 800122c:	6013      	str	r3, [r2, #0]
		  for(int i = 0; i < sizeOfReceiveSocket2data; ++i)
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	3301      	adds	r3, #1
 8001232:	607b      	str	r3, [r7, #4]
 8001234:	e7e3      	b.n	80011fe <main+0x20a>
			  }
		  }

		  if( *(ptrWriteBufferTelnet - 1) == '\n')
 8001236:	4b2d      	ldr	r3, [pc, #180]	; (80012ec <main+0x2f8>)
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	3b01      	subs	r3, #1
 800123c:	781b      	ldrb	r3, [r3, #0]
 800123e:	2b0a      	cmp	r3, #10
 8001240:	f040 819e 	bne.w	8001580 <main+0x58c>
		  {
			  if (counterMessages < 4)
 8001244:	4b2c      	ldr	r3, [pc, #176]	; (80012f8 <main+0x304>)
 8001246:	781b      	ldrb	r3, [r3, #0]
 8001248:	2b03      	cmp	r3, #3
 800124a:	d85d      	bhi.n	8001308 <main+0x314>
			  {
				  temp32 = atoi(ptrReadBufferTelnet);
 800124c:	4b2b      	ldr	r3, [pc, #172]	; (80012fc <main+0x308>)
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	4618      	mov	r0, r3
 8001252:	f004 f805 	bl	8005260 <atoi>
 8001256:	4603      	mov	r3, r0
 8001258:	461a      	mov	r2, r3
 800125a:	4b29      	ldr	r3, [pc, #164]	; (8001300 <main+0x30c>)
 800125c:	601a      	str	r2, [r3, #0]
				  if (temp32 > 0 && temp32 < 256) receivedIPAddress[counterMessages] = (uint8_t)temp32;
 800125e:	4b28      	ldr	r3, [pc, #160]	; (8001300 <main+0x30c>)
 8001260:	681b      	ldr	r3, [r3, #0]
 8001262:	2b00      	cmp	r3, #0
 8001264:	d00c      	beq.n	8001280 <main+0x28c>
 8001266:	4b26      	ldr	r3, [pc, #152]	; (8001300 <main+0x30c>)
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	2bff      	cmp	r3, #255	; 0xff
 800126c:	d808      	bhi.n	8001280 <main+0x28c>
 800126e:	4b24      	ldr	r3, [pc, #144]	; (8001300 <main+0x30c>)
 8001270:	6819      	ldr	r1, [r3, #0]
 8001272:	4b21      	ldr	r3, [pc, #132]	; (80012f8 <main+0x304>)
 8001274:	781b      	ldrb	r3, [r3, #0]
 8001276:	461a      	mov	r2, r3
 8001278:	b2c9      	uxtb	r1, r1
 800127a:	4b22      	ldr	r3, [pc, #136]	; (8001304 <main+0x310>)
 800127c:	5499      	strb	r1, [r3, r2]
 800127e:	e005      	b.n	800128c <main+0x298>
				  else receivedIPAddress[counterMessages] = 0;
 8001280:	4b1d      	ldr	r3, [pc, #116]	; (80012f8 <main+0x304>)
 8001282:	781b      	ldrb	r3, [r3, #0]
 8001284:	461a      	mov	r2, r3
 8001286:	4b1f      	ldr	r3, [pc, #124]	; (8001304 <main+0x310>)
 8001288:	2100      	movs	r1, #0
 800128a:	5499      	strb	r1, [r3, r2]
				  ++counterMessages;
 800128c:	4b1a      	ldr	r3, [pc, #104]	; (80012f8 <main+0x304>)
 800128e:	781b      	ldrb	r3, [r3, #0]
 8001290:	3301      	adds	r3, #1
 8001292:	b2da      	uxtb	r2, r3
 8001294:	4b18      	ldr	r3, [pc, #96]	; (80012f8 <main+0x304>)
 8001296:	701a      	strb	r2, [r3, #0]
				  ptrReadBufferTelnet = ptrWriteBufferTelnet;
 8001298:	4b14      	ldr	r3, [pc, #80]	; (80012ec <main+0x2f8>)
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	4a17      	ldr	r2, [pc, #92]	; (80012fc <main+0x308>)
 800129e:	6013      	str	r3, [r2, #0]
 80012a0:	e157      	b.n	8001552 <main+0x55e>
 80012a2:	bf00      	nop
 80012a4:	200023b0 	.word	0x200023b0
 80012a8:	20000370 	.word	0x20000370
 80012ac:	200003a4 	.word	0x200003a4
 80012b0:	200003d4 	.word	0x200003d4
 80012b4:	20000404 	.word	0x20000404
 80012b8:	20000868 	.word	0x20000868
 80012bc:	20000764 	.word	0x20000764
 80012c0:	40000400 	.word	0x40000400
 80012c4:	40000800 	.word	0x40000800
 80012c8:	20000a75 	.word	0x20000a75
 80012cc:	40010c00 	.word	0x40010c00
 80012d0:	2000127e 	.word	0x2000127e
 80012d4:	20000a80 	.word	0x20000a80
 80012d8:	20001280 	.word	0x20001280
 80012dc:	20001a8a 	.word	0x20001a8a
 80012e0:	20001284 	.word	0x20001284
 80012e4:	20001a8c 	.word	0x20001a8c
 80012e8:	20002296 	.word	0x20002296
 80012ec:	20000464 	.word	0x20000464
 80012f0:	20000468 	.word	0x20000468
 80012f4:	20001a90 	.word	0x20001a90
 80012f8:	200023ae 	.word	0x200023ae
 80012fc:	20000460 	.word	0x20000460
 8001300:	2000239c 	.word	0x2000239c
 8001304:	200023a0 	.word	0x200023a0
			  }
			  else if (counterMessages < 8)
 8001308:	4b87      	ldr	r3, [pc, #540]	; (8001528 <main+0x534>)
 800130a:	781b      	ldrb	r3, [r3, #0]
 800130c:	2b07      	cmp	r3, #7
 800130e:	d82a      	bhi.n	8001366 <main+0x372>
			  {
				  temp32 = atoi(ptrReadBufferTelnet);
 8001310:	4b86      	ldr	r3, [pc, #536]	; (800152c <main+0x538>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4618      	mov	r0, r3
 8001316:	f003 ffa3 	bl	8005260 <atoi>
 800131a:	4603      	mov	r3, r0
 800131c:	461a      	mov	r2, r3
 800131e:	4b84      	ldr	r3, [pc, #528]	; (8001530 <main+0x53c>)
 8001320:	601a      	str	r2, [r3, #0]
				  if (temp32 > 0 && temp32 < 256) receivedSubnetMask[counterMessages] = (uint8_t)temp32;
 8001322:	4b83      	ldr	r3, [pc, #524]	; (8001530 <main+0x53c>)
 8001324:	681b      	ldr	r3, [r3, #0]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d00c      	beq.n	8001344 <main+0x350>
 800132a:	4b81      	ldr	r3, [pc, #516]	; (8001530 <main+0x53c>)
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	2bff      	cmp	r3, #255	; 0xff
 8001330:	d808      	bhi.n	8001344 <main+0x350>
 8001332:	4b7f      	ldr	r3, [pc, #508]	; (8001530 <main+0x53c>)
 8001334:	6819      	ldr	r1, [r3, #0]
 8001336:	4b7c      	ldr	r3, [pc, #496]	; (8001528 <main+0x534>)
 8001338:	781b      	ldrb	r3, [r3, #0]
 800133a:	461a      	mov	r2, r3
 800133c:	b2c9      	uxtb	r1, r1
 800133e:	4b7d      	ldr	r3, [pc, #500]	; (8001534 <main+0x540>)
 8001340:	5499      	strb	r1, [r3, r2]
 8001342:	e005      	b.n	8001350 <main+0x35c>
				  else receivedSubnetMask[counterMessages] = 0;
 8001344:	4b78      	ldr	r3, [pc, #480]	; (8001528 <main+0x534>)
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	461a      	mov	r2, r3
 800134a:	4b7a      	ldr	r3, [pc, #488]	; (8001534 <main+0x540>)
 800134c:	2100      	movs	r1, #0
 800134e:	5499      	strb	r1, [r3, r2]
				  ++counterMessages;
 8001350:	4b75      	ldr	r3, [pc, #468]	; (8001528 <main+0x534>)
 8001352:	781b      	ldrb	r3, [r3, #0]
 8001354:	3301      	adds	r3, #1
 8001356:	b2da      	uxtb	r2, r3
 8001358:	4b73      	ldr	r3, [pc, #460]	; (8001528 <main+0x534>)
 800135a:	701a      	strb	r2, [r3, #0]
				  ptrReadBufferTelnet = ptrWriteBufferTelnet;
 800135c:	4b76      	ldr	r3, [pc, #472]	; (8001538 <main+0x544>)
 800135e:	681b      	ldr	r3, [r3, #0]
 8001360:	4a72      	ldr	r2, [pc, #456]	; (800152c <main+0x538>)
 8001362:	6013      	str	r3, [r2, #0]
 8001364:	e0f5      	b.n	8001552 <main+0x55e>
			  }
			  else if (counterMessages < 14)
 8001366:	4b70      	ldr	r3, [pc, #448]	; (8001528 <main+0x534>)
 8001368:	781b      	ldrb	r3, [r3, #0]
 800136a:	2b0d      	cmp	r3, #13
 800136c:	f200 80c6 	bhi.w	80014fc <main+0x508>
			  {
				  uint8_t tempCounter { 0 };
 8001370:	2300      	movs	r3, #0
 8001372:	70fb      	strb	r3, [r7, #3]
				  while (ptrReadBufferTelnet != ptrWriteBufferTelnet)
 8001374:	4b6d      	ldr	r3, [pc, #436]	; (800152c <main+0x538>)
 8001376:	681a      	ldr	r2, [r3, #0]
 8001378:	4b6f      	ldr	r3, [pc, #444]	; (8001538 <main+0x544>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	429a      	cmp	r2, r3
 800137e:	f000 80b6 	beq.w	80014ee <main+0x4fa>
				  {
					  if (tempCounter == 0)
 8001382:	78fb      	ldrb	r3, [r7, #3]
 8001384:	2b00      	cmp	r3, #0
 8001386:	d14d      	bne.n	8001424 <main+0x430>
					  {
						  if (*ptrReadBufferTelnet >= '0' && *ptrReadBufferTelnet <= '9')
 8001388:	4b68      	ldr	r3, [pc, #416]	; (800152c <main+0x538>)
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	781b      	ldrb	r3, [r3, #0]
 800138e:	2b2f      	cmp	r3, #47	; 0x2f
 8001390:	d914      	bls.n	80013bc <main+0x3c8>
 8001392:	4b66      	ldr	r3, [pc, #408]	; (800152c <main+0x538>)
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	2b39      	cmp	r3, #57	; 0x39
 800139a:	d80f      	bhi.n	80013bc <main+0x3c8>
						  {
							  receivedMACAddress[counterMessages - 8] = (*ptrReadBufferTelnet - 48)*16;
 800139c:	4b63      	ldr	r3, [pc, #396]	; (800152c <main+0x538>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	781b      	ldrb	r3, [r3, #0]
 80013a2:	3b30      	subs	r3, #48	; 0x30
 80013a4:	b2da      	uxtb	r2, r3
 80013a6:	4b60      	ldr	r3, [pc, #384]	; (8001528 <main+0x534>)
 80013a8:	781b      	ldrb	r3, [r3, #0]
 80013aa:	3b08      	subs	r3, #8
 80013ac:	0112      	lsls	r2, r2, #4
 80013ae:	b2d1      	uxtb	r1, r2
 80013b0:	4a62      	ldr	r2, [pc, #392]	; (800153c <main+0x548>)
 80013b2:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 80013b4:	78fb      	ldrb	r3, [r7, #3]
 80013b6:	3301      	adds	r3, #1
 80013b8:	70fb      	strb	r3, [r7, #3]
 80013ba:	e092      	b.n	80014e2 <main+0x4ee>
						  }
						  else if (*ptrReadBufferTelnet >= 'A' && *ptrReadBufferTelnet <= 'F')
 80013bc:	4b5b      	ldr	r3, [pc, #364]	; (800152c <main+0x538>)
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	781b      	ldrb	r3, [r3, #0]
 80013c2:	2b40      	cmp	r3, #64	; 0x40
 80013c4:	d914      	bls.n	80013f0 <main+0x3fc>
 80013c6:	4b59      	ldr	r3, [pc, #356]	; (800152c <main+0x538>)
 80013c8:	681b      	ldr	r3, [r3, #0]
 80013ca:	781b      	ldrb	r3, [r3, #0]
 80013cc:	2b46      	cmp	r3, #70	; 0x46
 80013ce:	d80f      	bhi.n	80013f0 <main+0x3fc>
						  {
							  receivedMACAddress[counterMessages - 8] = (*ptrReadBufferTelnet - 55)*16;
 80013d0:	4b56      	ldr	r3, [pc, #344]	; (800152c <main+0x538>)
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	781b      	ldrb	r3, [r3, #0]
 80013d6:	3b37      	subs	r3, #55	; 0x37
 80013d8:	b2da      	uxtb	r2, r3
 80013da:	4b53      	ldr	r3, [pc, #332]	; (8001528 <main+0x534>)
 80013dc:	781b      	ldrb	r3, [r3, #0]
 80013de:	3b08      	subs	r3, #8
 80013e0:	0112      	lsls	r2, r2, #4
 80013e2:	b2d1      	uxtb	r1, r2
 80013e4:	4a55      	ldr	r2, [pc, #340]	; (800153c <main+0x548>)
 80013e6:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 80013e8:	78fb      	ldrb	r3, [r7, #3]
 80013ea:	3301      	adds	r3, #1
 80013ec:	70fb      	strb	r3, [r7, #3]
 80013ee:	e078      	b.n	80014e2 <main+0x4ee>
						  }
						  else if (*ptrReadBufferTelnet >= 'a' && *ptrReadBufferTelnet <= 'f')
 80013f0:	4b4e      	ldr	r3, [pc, #312]	; (800152c <main+0x538>)
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	781b      	ldrb	r3, [r3, #0]
 80013f6:	2b60      	cmp	r3, #96	; 0x60
 80013f8:	d973      	bls.n	80014e2 <main+0x4ee>
 80013fa:	4b4c      	ldr	r3, [pc, #304]	; (800152c <main+0x538>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	781b      	ldrb	r3, [r3, #0]
 8001400:	2b66      	cmp	r3, #102	; 0x66
 8001402:	d86e      	bhi.n	80014e2 <main+0x4ee>
						  {
							  receivedMACAddress[counterMessages - 8] = (*ptrReadBufferTelnet - 87)*16;
 8001404:	4b49      	ldr	r3, [pc, #292]	; (800152c <main+0x538>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	781b      	ldrb	r3, [r3, #0]
 800140a:	3b57      	subs	r3, #87	; 0x57
 800140c:	b2da      	uxtb	r2, r3
 800140e:	4b46      	ldr	r3, [pc, #280]	; (8001528 <main+0x534>)
 8001410:	781b      	ldrb	r3, [r3, #0]
 8001412:	3b08      	subs	r3, #8
 8001414:	0112      	lsls	r2, r2, #4
 8001416:	b2d1      	uxtb	r1, r2
 8001418:	4a48      	ldr	r2, [pc, #288]	; (800153c <main+0x548>)
 800141a:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 800141c:	78fb      	ldrb	r3, [r7, #3]
 800141e:	3301      	adds	r3, #1
 8001420:	70fb      	strb	r3, [r7, #3]
 8001422:	e05e      	b.n	80014e2 <main+0x4ee>
						  }
					  }
					  else if (tempCounter == 1)
 8001424:	78fb      	ldrb	r3, [r7, #3]
 8001426:	2b01      	cmp	r3, #1
 8001428:	d15b      	bne.n	80014e2 <main+0x4ee>
					  {
						  if (*ptrReadBufferTelnet >= '0' && *ptrReadBufferTelnet <= '9')
 800142a:	4b40      	ldr	r3, [pc, #256]	; (800152c <main+0x538>)
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	781b      	ldrb	r3, [r3, #0]
 8001430:	2b2f      	cmp	r3, #47	; 0x2f
 8001432:	d919      	bls.n	8001468 <main+0x474>
 8001434:	4b3d      	ldr	r3, [pc, #244]	; (800152c <main+0x538>)
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	781b      	ldrb	r3, [r3, #0]
 800143a:	2b39      	cmp	r3, #57	; 0x39
 800143c:	d814      	bhi.n	8001468 <main+0x474>
						  {
							  receivedMACAddress[counterMessages - 8] += (*ptrReadBufferTelnet - 48);
 800143e:	4b3a      	ldr	r3, [pc, #232]	; (8001528 <main+0x534>)
 8001440:	781b      	ldrb	r3, [r3, #0]
 8001442:	3b08      	subs	r3, #8
 8001444:	4a3d      	ldr	r2, [pc, #244]	; (800153c <main+0x548>)
 8001446:	5cd2      	ldrb	r2, [r2, r3]
 8001448:	4b38      	ldr	r3, [pc, #224]	; (800152c <main+0x538>)
 800144a:	681b      	ldr	r3, [r3, #0]
 800144c:	781b      	ldrb	r3, [r3, #0]
 800144e:	4413      	add	r3, r2
 8001450:	b2da      	uxtb	r2, r3
 8001452:	4b35      	ldr	r3, [pc, #212]	; (8001528 <main+0x534>)
 8001454:	781b      	ldrb	r3, [r3, #0]
 8001456:	3b08      	subs	r3, #8
 8001458:	3a30      	subs	r2, #48	; 0x30
 800145a:	b2d1      	uxtb	r1, r2
 800145c:	4a37      	ldr	r2, [pc, #220]	; (800153c <main+0x548>)
 800145e:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 8001460:	78fb      	ldrb	r3, [r7, #3]
 8001462:	3301      	adds	r3, #1
 8001464:	70fb      	strb	r3, [r7, #3]
 8001466:	e03c      	b.n	80014e2 <main+0x4ee>
						  }
						  else if (*ptrReadBufferTelnet >= 'A' && *ptrReadBufferTelnet <= 'F')
 8001468:	4b30      	ldr	r3, [pc, #192]	; (800152c <main+0x538>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	781b      	ldrb	r3, [r3, #0]
 800146e:	2b40      	cmp	r3, #64	; 0x40
 8001470:	d919      	bls.n	80014a6 <main+0x4b2>
 8001472:	4b2e      	ldr	r3, [pc, #184]	; (800152c <main+0x538>)
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	781b      	ldrb	r3, [r3, #0]
 8001478:	2b46      	cmp	r3, #70	; 0x46
 800147a:	d814      	bhi.n	80014a6 <main+0x4b2>
						  {
							  receivedMACAddress[counterMessages - 8] += (*ptrReadBufferTelnet - 55);
 800147c:	4b2a      	ldr	r3, [pc, #168]	; (8001528 <main+0x534>)
 800147e:	781b      	ldrb	r3, [r3, #0]
 8001480:	3b08      	subs	r3, #8
 8001482:	4a2e      	ldr	r2, [pc, #184]	; (800153c <main+0x548>)
 8001484:	5cd2      	ldrb	r2, [r2, r3]
 8001486:	4b29      	ldr	r3, [pc, #164]	; (800152c <main+0x538>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	781b      	ldrb	r3, [r3, #0]
 800148c:	4413      	add	r3, r2
 800148e:	b2da      	uxtb	r2, r3
 8001490:	4b25      	ldr	r3, [pc, #148]	; (8001528 <main+0x534>)
 8001492:	781b      	ldrb	r3, [r3, #0]
 8001494:	3b08      	subs	r3, #8
 8001496:	3a37      	subs	r2, #55	; 0x37
 8001498:	b2d1      	uxtb	r1, r2
 800149a:	4a28      	ldr	r2, [pc, #160]	; (800153c <main+0x548>)
 800149c:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 800149e:	78fb      	ldrb	r3, [r7, #3]
 80014a0:	3301      	adds	r3, #1
 80014a2:	70fb      	strb	r3, [r7, #3]
 80014a4:	e01d      	b.n	80014e2 <main+0x4ee>
						  }
						  else if (*ptrReadBufferTelnet >= 'a' && *ptrReadBufferTelnet <= 'f')
 80014a6:	4b21      	ldr	r3, [pc, #132]	; (800152c <main+0x538>)
 80014a8:	681b      	ldr	r3, [r3, #0]
 80014aa:	781b      	ldrb	r3, [r3, #0]
 80014ac:	2b60      	cmp	r3, #96	; 0x60
 80014ae:	d918      	bls.n	80014e2 <main+0x4ee>
 80014b0:	4b1e      	ldr	r3, [pc, #120]	; (800152c <main+0x538>)
 80014b2:	681b      	ldr	r3, [r3, #0]
 80014b4:	781b      	ldrb	r3, [r3, #0]
 80014b6:	2b66      	cmp	r3, #102	; 0x66
 80014b8:	d813      	bhi.n	80014e2 <main+0x4ee>
						  {
							  receivedMACAddress[counterMessages - 8] += (*ptrReadBufferTelnet - 87);
 80014ba:	4b1b      	ldr	r3, [pc, #108]	; (8001528 <main+0x534>)
 80014bc:	781b      	ldrb	r3, [r3, #0]
 80014be:	3b08      	subs	r3, #8
 80014c0:	4a1e      	ldr	r2, [pc, #120]	; (800153c <main+0x548>)
 80014c2:	5cd2      	ldrb	r2, [r2, r3]
 80014c4:	4b19      	ldr	r3, [pc, #100]	; (800152c <main+0x538>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	781b      	ldrb	r3, [r3, #0]
 80014ca:	4413      	add	r3, r2
 80014cc:	b2da      	uxtb	r2, r3
 80014ce:	4b16      	ldr	r3, [pc, #88]	; (8001528 <main+0x534>)
 80014d0:	781b      	ldrb	r3, [r3, #0]
 80014d2:	3b08      	subs	r3, #8
 80014d4:	3a57      	subs	r2, #87	; 0x57
 80014d6:	b2d1      	uxtb	r1, r2
 80014d8:	4a18      	ldr	r2, [pc, #96]	; (800153c <main+0x548>)
 80014da:	54d1      	strb	r1, [r2, r3]
							  ++tempCounter;
 80014dc:	78fb      	ldrb	r3, [r7, #3]
 80014de:	3301      	adds	r3, #1
 80014e0:	70fb      	strb	r3, [r7, #3]
						  }
					  }
					  ++ptrReadBufferTelnet;
 80014e2:	4b12      	ldr	r3, [pc, #72]	; (800152c <main+0x538>)
 80014e4:	681b      	ldr	r3, [r3, #0]
 80014e6:	3301      	adds	r3, #1
 80014e8:	4a10      	ldr	r2, [pc, #64]	; (800152c <main+0x538>)
 80014ea:	6013      	str	r3, [r2, #0]
				  while (ptrReadBufferTelnet != ptrWriteBufferTelnet)
 80014ec:	e742      	b.n	8001374 <main+0x380>
				  }
				  ++counterMessages;
 80014ee:	4b0e      	ldr	r3, [pc, #56]	; (8001528 <main+0x534>)
 80014f0:	781b      	ldrb	r3, [r3, #0]
 80014f2:	3301      	adds	r3, #1
 80014f4:	b2da      	uxtb	r2, r3
 80014f6:	4b0c      	ldr	r3, [pc, #48]	; (8001528 <main+0x534>)
 80014f8:	701a      	strb	r2, [r3, #0]
 80014fa:	e02a      	b.n	8001552 <main+0x55e>
			  }
			  else if (counterMessages == 14)
 80014fc:	4b0a      	ldr	r3, [pc, #40]	; (8001528 <main+0x534>)
 80014fe:	781b      	ldrb	r3, [r3, #0]
 8001500:	2b0e      	cmp	r3, #14
 8001502:	d126      	bne.n	8001552 <main+0x55e>
			  {
				  if (*ptrReadBufferTelnet == 'Y' || *ptrReadBufferTelnet == 'y')
 8001504:	4b09      	ldr	r3, [pc, #36]	; (800152c <main+0x538>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	781b      	ldrb	r3, [r3, #0]
 800150a:	2b59      	cmp	r3, #89	; 0x59
 800150c:	d004      	beq.n	8001518 <main+0x524>
 800150e:	4b07      	ldr	r3, [pc, #28]	; (800152c <main+0x538>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	781b      	ldrb	r3, [r3, #0]
 8001514:	2b79      	cmp	r3, #121	; 0x79
 8001516:	d117      	bne.n	8001548 <main+0x554>
				  {
					  ethernetA1.sendString(SOCKET2, textApply);
 8001518:	4a09      	ldr	r2, [pc, #36]	; (8001540 <main+0x54c>)
 800151a:	2148      	movs	r1, #72	; 0x48
 800151c:	4809      	ldr	r0, [pc, #36]	; (8001544 <main+0x550>)
 800151e:	f7ff f953 	bl	80007c8 <_ZN5W550010sendStringEhPc>
					  saveSettings();
 8001522:	f7ff fc8d 	bl	8000e40 <_Z12saveSettingsv>
 8001526:	e014      	b.n	8001552 <main+0x55e>
 8001528:	200023ae 	.word	0x200023ae
 800152c:	20000460 	.word	0x20000460
 8001530:	2000239c 	.word	0x2000239c
 8001534:	200023a4 	.word	0x200023a4
 8001538:	20000464 	.word	0x20000464
 800153c:	200023a8 	.word	0x200023a8
 8001540:	2000031c 	.word	0x2000031c
 8001544:	200023b0 	.word	0x200023b0
				  }
				  else
				  {
					  ethernetA1.sendString(SOCKET2, textNotApply);
 8001548:	4a47      	ldr	r2, [pc, #284]	; (8001668 <main+0x674>)
 800154a:	2148      	movs	r1, #72	; 0x48
 800154c:	4847      	ldr	r0, [pc, #284]	; (800166c <main+0x678>)
 800154e:	f7ff f93b 	bl	80007c8 <_ZN5W550010sendStringEhPc>
				  }
			  }

			  if(typedValueCounter == 13)
 8001552:	4b47      	ldr	r3, [pc, #284]	; (8001670 <main+0x67c>)
 8001554:	781b      	ldrb	r3, [r3, #0]
 8001556:	2b0d      	cmp	r3, #13
 8001558:	d101      	bne.n	800155e <main+0x56a>
			  {
				  fillFinalText();
 800155a:	f7ff fc4d 	bl	8000df8 <_Z13fillFinalTextv>
			  }

			  ethernetA1.sendString(SOCKET2, arrText[typedValueCounter]);
 800155e:	4b44      	ldr	r3, [pc, #272]	; (8001670 <main+0x67c>)
 8001560:	781b      	ldrb	r3, [r3, #0]
 8001562:	461a      	mov	r2, r3
 8001564:	4b43      	ldr	r3, [pc, #268]	; (8001674 <main+0x680>)
 8001566:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800156a:	461a      	mov	r2, r3
 800156c:	2148      	movs	r1, #72	; 0x48
 800156e:	483f      	ldr	r0, [pc, #252]	; (800166c <main+0x678>)
 8001570:	f7ff f92a 	bl	80007c8 <_ZN5W550010sendStringEhPc>
			  ++typedValueCounter;
 8001574:	4b3e      	ldr	r3, [pc, #248]	; (8001670 <main+0x67c>)
 8001576:	781b      	ldrb	r3, [r3, #0]
 8001578:	3301      	adds	r3, #1
 800157a:	b2da      	uxtb	r2, r3
 800157c:	4b3c      	ldr	r3, [pc, #240]	; (8001670 <main+0x67c>)
 800157e:	701a      	strb	r2, [r3, #0]
		  }
		  socket2dataReady = false;
 8001580:	4b3d      	ldr	r3, [pc, #244]	; (8001678 <main+0x684>)
 8001582:	2200      	movs	r2, #0
 8001584:	701a      	strb	r2, [r3, #0]
	  }


	  // провер�?ем е�?ть ли данные по UART
	  if (receivedPacketUARTisReady)
 8001586:	4b3d      	ldr	r3, [pc, #244]	; (800167c <main+0x688>)
 8001588:	781b      	ldrb	r3, [r3, #0]
 800158a:	2b00      	cmp	r3, #0
 800158c:	d023      	beq.n	80015d6 <main+0x5e2>
	  {
		  if (needsTransmitUDP)
 800158e:	4b3c      	ldr	r3, [pc, #240]	; (8001680 <main+0x68c>)
 8001590:	781b      	ldrb	r3, [r3, #0]
 8001592:	2b00      	cmp	r3, #0
 8001594:	d00d      	beq.n	80015b2 <main+0x5be>
		  {
			  // отправл�?ем данные, прин�?тые по UART, по UDP
			  ethernetA1.sendPacket(SOCKET0, copiedReceivedPacketUART, copiedReceivedBytesUARTCounter);
 8001596:	4b3b      	ldr	r3, [pc, #236]	; (8001684 <main+0x690>)
 8001598:	781b      	ldrb	r3, [r3, #0]
 800159a:	b29b      	uxth	r3, r3
 800159c:	4a3a      	ldr	r2, [pc, #232]	; (8001688 <main+0x694>)
 800159e:	2108      	movs	r1, #8
 80015a0:	4832      	ldr	r0, [pc, #200]	; (800166c <main+0x678>)
 80015a2:	f7ff f8d3 	bl	800074c <_ZN5W550010sendPacketEhPht>

			  // �?бра�?ываем флаги
			  receivedPacketUARTisReady = false;
 80015a6:	4b35      	ldr	r3, [pc, #212]	; (800167c <main+0x688>)
 80015a8:	2200      	movs	r2, #0
 80015aa:	701a      	strb	r2, [r3, #0]
			  needsTransmitUDP = false;
 80015ac:	4b34      	ldr	r3, [pc, #208]	; (8001680 <main+0x68c>)
 80015ae:	2200      	movs	r2, #0
 80015b0:	701a      	strb	r2, [r3, #0]
		  }

		  if (needsTransmitTCP)
 80015b2:	4b36      	ldr	r3, [pc, #216]	; (800168c <main+0x698>)
 80015b4:	781b      	ldrb	r3, [r3, #0]
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d00d      	beq.n	80015d6 <main+0x5e2>
		  {
			  // отправл�?ем данные, прин�?тые по UART, по UDP
			  ethernetA1.sendPacket(SOCKET1, copiedReceivedPacketUART, copiedReceivedBytesUARTCounter);
 80015ba:	4b32      	ldr	r3, [pc, #200]	; (8001684 <main+0x690>)
 80015bc:	781b      	ldrb	r3, [r3, #0]
 80015be:	b29b      	uxth	r3, r3
 80015c0:	4a31      	ldr	r2, [pc, #196]	; (8001688 <main+0x694>)
 80015c2:	2128      	movs	r1, #40	; 0x28
 80015c4:	4829      	ldr	r0, [pc, #164]	; (800166c <main+0x678>)
 80015c6:	f7ff f8c1 	bl	800074c <_ZN5W550010sendPacketEhPht>

			  // �?бра�?ываем флаги
			  receivedPacketUARTisReady = false;
 80015ca:	4b2c      	ldr	r3, [pc, #176]	; (800167c <main+0x688>)
 80015cc:	2200      	movs	r2, #0
 80015ce:	701a      	strb	r2, [r3, #0]
			  needsTransmitTCP = false;
 80015d0:	4b2e      	ldr	r3, [pc, #184]	; (800168c <main+0x698>)
 80015d2:	2200      	movs	r2, #0
 80015d4:	701a      	strb	r2, [r3, #0]
		  }
	  }

	  // е�?ли �?оединение по TCP было закрыто, нужно �?нова проинициализировать �?окет и перейти в режим про�?лушки (�?ервера)
	  if (needsOpenTCP)
 80015d6:	4b2e      	ldr	r3, [pc, #184]	; (8001690 <main+0x69c>)
 80015d8:	781b      	ldrb	r3, [r3, #0]
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d01e      	beq.n	800161c <main+0x628>
	  {
		  // Открываем �?окет 1
		  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_CR_OPEN, W5500_Sn_CR);
 80015de:	2301      	movs	r3, #1
 80015e0:	2201      	movs	r2, #1
 80015e2:	2128      	movs	r1, #40	; 0x28
 80015e4:	4821      	ldr	r0, [pc, #132]	; (800166c <main+0x678>)
 80015e6:	f7fe fefc 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

		  HAL_Delay(1);
 80015ea:	2001      	movs	r0, #1
 80015ec:	f000 fea6 	bl	800233c <HAL_Delay>

		  // провер�?ем что �?окет 1 проиницилизирован и запу�?каем режим �?ервера
		  if (ethernetA1.readByteFromSRB(SOCKET1, W5500_Sn_SR) == W5500_Sn_SR_SOCK_INIT)
 80015f0:	2203      	movs	r2, #3
 80015f2:	2128      	movs	r1, #40	; 0x28
 80015f4:	481d      	ldr	r0, [pc, #116]	; (800166c <main+0x678>)
 80015f6:	f7fe fe82 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b13      	cmp	r3, #19
 80015fe:	bf0c      	ite	eq
 8001600:	2301      	moveq	r3, #1
 8001602:	2300      	movne	r3, #0
 8001604:	b2db      	uxtb	r3, r3
 8001606:	2b00      	cmp	r3, #0
 8001608:	d005      	beq.n	8001616 <main+0x622>
		  {
			  ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_CR_LISTEN, W5500_Sn_CR);
 800160a:	2301      	movs	r3, #1
 800160c:	2202      	movs	r2, #2
 800160e:	2128      	movs	r1, #40	; 0x28
 8001610:	4816      	ldr	r0, [pc, #88]	; (800166c <main+0x678>)
 8001612:	f7fe fee6 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
		  }

		  needsOpenTCP = false;
 8001616:	4b1e      	ldr	r3, [pc, #120]	; (8001690 <main+0x69c>)
 8001618:	2200      	movs	r2, #0
 800161a:	701a      	strb	r2, [r3, #0]
	  }


	  // е�?ли �?оединение по Telnet было закрыто, нужно �?нова проинициализировать �?окет и перейти в режим про�?лушки (�?ервера)
	  if (needsOpenTelnet)
 800161c:	4b1d      	ldr	r3, [pc, #116]	; (8001694 <main+0x6a0>)
 800161e:	781b      	ldrb	r3, [r3, #0]
 8001620:	2b00      	cmp	r3, #0
 8001622:	f43f ad99 	beq.w	8001158 <main+0x164>
	  {
		  // Открываем �?окет 2
		  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_CR_OPEN, W5500_Sn_CR);
 8001626:	2301      	movs	r3, #1
 8001628:	2201      	movs	r2, #1
 800162a:	2148      	movs	r1, #72	; 0x48
 800162c:	480f      	ldr	r0, [pc, #60]	; (800166c <main+0x678>)
 800162e:	f7fe fed8 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>

		  HAL_Delay(1);
 8001632:	2001      	movs	r0, #1
 8001634:	f000 fe82 	bl	800233c <HAL_Delay>

		  // провер�?ем что �?окет 2 проиницилизирован и запу�?каем режим �?ервера
		  if (ethernetA1.readByteFromSRB(SOCKET2, W5500_Sn_SR) == W5500_Sn_SR_SOCK_INIT)
 8001638:	2203      	movs	r2, #3
 800163a:	2148      	movs	r1, #72	; 0x48
 800163c:	480b      	ldr	r0, [pc, #44]	; (800166c <main+0x678>)
 800163e:	f7fe fe5e 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 8001642:	4603      	mov	r3, r0
 8001644:	2b13      	cmp	r3, #19
 8001646:	bf0c      	ite	eq
 8001648:	2301      	moveq	r3, #1
 800164a:	2300      	movne	r3, #0
 800164c:	b2db      	uxtb	r3, r3
 800164e:	2b00      	cmp	r3, #0
 8001650:	d005      	beq.n	800165e <main+0x66a>
		  {
			  ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_CR_LISTEN, W5500_Sn_CR);
 8001652:	2301      	movs	r3, #1
 8001654:	2202      	movs	r2, #2
 8001656:	2148      	movs	r1, #72	; 0x48
 8001658:	4804      	ldr	r0, [pc, #16]	; (800166c <main+0x678>)
 800165a:	f7fe fec2 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
		  }

		  needsOpenTelnet = false;
 800165e:	4b0d      	ldr	r3, [pc, #52]	; (8001694 <main+0x6a0>)
 8001660:	2200      	movs	r2, #0
 8001662:	701a      	strb	r2, [r3, #0]
	  }
*/
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
 8001664:	e578      	b.n	8001158 <main+0x164>
 8001666:	bf00      	nop
 8001668:	20000354 	.word	0x20000354
 800166c:	200023b0 	.word	0x200023b0
 8001670:	20002398 	.word	0x20002398
 8001674:	200002c8 	.word	0x200002c8
 8001678:	20001a8c 	.word	0x20001a8c
 800167c:	2000096d 	.word	0x2000096d
 8001680:	20000a71 	.word	0x20000a71
 8001684:	20000a70 	.word	0x20000a70
 8001688:	20000970 	.word	0x20000970
 800168c:	20000a72 	.word	0x20000a72
 8001690:	20000a73 	.word	0x20000a73
 8001694:	20000a74 	.word	0x20000a74

08001698 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	b090      	sub	sp, #64	; 0x40
 800169c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800169e:	f107 0318 	add.w	r3, r7, #24
 80016a2:	2228      	movs	r2, #40	; 0x28
 80016a4:	2100      	movs	r1, #0
 80016a6:	4618      	mov	r0, r3
 80016a8:	f003 fe08 	bl	80052bc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80016ac:	1d3b      	adds	r3, r7, #4
 80016ae:	2200      	movs	r2, #0
 80016b0:	601a      	str	r2, [r3, #0]
 80016b2:	605a      	str	r2, [r3, #4]
 80016b4:	609a      	str	r2, [r3, #8]
 80016b6:	60da      	str	r2, [r3, #12]
 80016b8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016ba:	2301      	movs	r3, #1
 80016bc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80016be:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016c2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80016c4:	2300      	movs	r3, #0
 80016c6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80016c8:	2301      	movs	r3, #1
 80016ca:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016cc:	2302      	movs	r3, #2
 80016ce:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016d0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016d4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 80016d6:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80016da:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016dc:	f107 0318 	add.w	r3, r7, #24
 80016e0:	4618      	mov	r0, r3
 80016e2:	f001 fbc1 	bl	8002e68 <HAL_RCC_OscConfig>
 80016e6:	4603      	mov	r3, r0
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	bf14      	ite	ne
 80016ec:	2301      	movne	r3, #1
 80016ee:	2300      	moveq	r3, #0
 80016f0:	b2db      	uxtb	r3, r3
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d001      	beq.n	80016fa <_Z18SystemClock_Configv+0x62>
  {
    Error_Handler();
 80016f6:	f000 fbbd 	bl	8001e74 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016fa:	230f      	movs	r3, #15
 80016fc:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80016fe:	2302      	movs	r3, #2
 8001700:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001702:	2300      	movs	r3, #0
 8001704:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001706:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800170a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800170c:	2300      	movs	r3, #0
 800170e:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001710:	1d3b      	adds	r3, r7, #4
 8001712:	2101      	movs	r1, #1
 8001714:	4618      	mov	r0, r3
 8001716:	f001 fe29 	bl	800336c <HAL_RCC_ClockConfig>
 800171a:	4603      	mov	r3, r0
 800171c:	2b00      	cmp	r3, #0
 800171e:	bf14      	ite	ne
 8001720:	2301      	movne	r3, #1
 8001722:	2300      	moveq	r3, #0
 8001724:	b2db      	uxtb	r3, r3
 8001726:	2b00      	cmp	r3, #0
 8001728:	d001      	beq.n	800172e <_Z18SystemClock_Configv+0x96>
  {
    Error_Handler();
 800172a:	f000 fba3 	bl	8001e74 <Error_Handler>
  }
}
 800172e:	bf00      	nop
 8001730:	3740      	adds	r7, #64	; 0x40
 8001732:	46bd      	mov	sp, r7
 8001734:	bd80      	pop	{r7, pc}
	...

08001738 <_ZL12MX_SPI1_Initv>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001738:	b580      	push	{r7, lr}
 800173a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800173c:	4b1a      	ldr	r3, [pc, #104]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800173e:	4a1b      	ldr	r2, [pc, #108]	; (80017ac <_ZL12MX_SPI1_Initv+0x74>)
 8001740:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001742:	4b19      	ldr	r3, [pc, #100]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001744:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001748:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800174a:	4b17      	ldr	r3, [pc, #92]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800174c:	2200      	movs	r2, #0
 800174e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001750:	4b15      	ldr	r3, [pc, #84]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001752:	2200      	movs	r2, #0
 8001754:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001756:	4b14      	ldr	r3, [pc, #80]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001758:	2200      	movs	r2, #0
 800175a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800175c:	4b12      	ldr	r3, [pc, #72]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800175e:	2200      	movs	r2, #0
 8001760:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001762:	4b11      	ldr	r3, [pc, #68]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001764:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001768:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 800176a:	4b0f      	ldr	r3, [pc, #60]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800176c:	2208      	movs	r2, #8
 800176e:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001770:	4b0d      	ldr	r3, [pc, #52]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001772:	2200      	movs	r2, #0
 8001774:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001776:	4b0c      	ldr	r3, [pc, #48]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001778:	2200      	movs	r2, #0
 800177a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800177c:	4b0a      	ldr	r3, [pc, #40]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800177e:	2200      	movs	r2, #0
 8001780:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8001782:	4b09      	ldr	r3, [pc, #36]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 8001784:	220a      	movs	r2, #10
 8001786:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001788:	4807      	ldr	r0, [pc, #28]	; (80017a8 <_ZL12MX_SPI1_Initv+0x70>)
 800178a:	f001 ff89 	bl	80036a0 <HAL_SPI_Init>
 800178e:	4603      	mov	r3, r0
 8001790:	2b00      	cmp	r3, #0
 8001792:	bf14      	ite	ne
 8001794:	2301      	movne	r3, #1
 8001796:	2300      	moveq	r3, #0
 8001798:	b2db      	uxtb	r3, r3
 800179a:	2b00      	cmp	r3, #0
 800179c:	d001      	beq.n	80017a2 <_ZL12MX_SPI1_Initv+0x6a>
  {
    Error_Handler();
 800179e:	f000 fb69 	bl	8001e74 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80017a2:	bf00      	nop
 80017a4:	bd80      	pop	{r7, pc}
 80017a6:	bf00      	nop
 80017a8:	20000634 	.word	0x20000634
 80017ac:	40013000 	.word	0x40013000

080017b0 <_ZL12MX_TIM2_Initv>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80017b0:	b580      	push	{r7, lr}
 80017b2:	b086      	sub	sp, #24
 80017b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017b6:	f107 0308 	add.w	r3, r7, #8
 80017ba:	2200      	movs	r2, #0
 80017bc:	601a      	str	r2, [r3, #0]
 80017be:	605a      	str	r2, [r3, #4]
 80017c0:	609a      	str	r2, [r3, #8]
 80017c2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017c4:	463b      	mov	r3, r7
 80017c6:	2200      	movs	r2, #0
 80017c8:	601a      	str	r2, [r3, #0]
 80017ca:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80017cc:	4b25      	ldr	r3, [pc, #148]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80017d2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100;
 80017d4:	4b23      	ldr	r3, [pc, #140]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017d6:	2264      	movs	r2, #100	; 0x64
 80017d8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017da:	4b22      	ldr	r3, [pc, #136]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017dc:	2200      	movs	r2, #0
 80017de:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 48000;
 80017e0:	4b20      	ldr	r3, [pc, #128]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017e2:	f64b 3280 	movw	r2, #48000	; 0xbb80
 80017e6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017e8:	4b1e      	ldr	r3, [pc, #120]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017ea:	2200      	movs	r2, #0
 80017ec:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017ee:	4b1d      	ldr	r3, [pc, #116]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017f0:	2200      	movs	r2, #0
 80017f2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80017f4:	481b      	ldr	r0, [pc, #108]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 80017f6:	f002 fc5f 	bl	80040b8 <HAL_TIM_Base_Init>
 80017fa:	4603      	mov	r3, r0
 80017fc:	2b00      	cmp	r3, #0
 80017fe:	bf14      	ite	ne
 8001800:	2301      	movne	r3, #1
 8001802:	2300      	moveq	r3, #0
 8001804:	b2db      	uxtb	r3, r3
 8001806:	2b00      	cmp	r3, #0
 8001808:	d001      	beq.n	800180e <_ZL12MX_TIM2_Initv+0x5e>
  {
    Error_Handler();
 800180a:	f000 fb33 	bl	8001e74 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800180e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001812:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001814:	f107 0308 	add.w	r3, r7, #8
 8001818:	4619      	mov	r1, r3
 800181a:	4812      	ldr	r0, [pc, #72]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 800181c:	f002 fe1c 	bl	8004458 <HAL_TIM_ConfigClockSource>
 8001820:	4603      	mov	r3, r0
 8001822:	2b00      	cmp	r3, #0
 8001824:	bf14      	ite	ne
 8001826:	2301      	movne	r3, #1
 8001828:	2300      	moveq	r3, #0
 800182a:	b2db      	uxtb	r3, r3
 800182c:	2b00      	cmp	r3, #0
 800182e:	d001      	beq.n	8001834 <_ZL12MX_TIM2_Initv+0x84>
  {
    Error_Handler();
 8001830:	f000 fb20 	bl	8001e74 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001834:	2300      	movs	r3, #0
 8001836:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001838:	2300      	movs	r3, #0
 800183a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800183c:	463b      	mov	r3, r7
 800183e:	4619      	mov	r1, r3
 8001840:	4808      	ldr	r0, [pc, #32]	; (8001864 <_ZL12MX_TIM2_Initv+0xb4>)
 8001842:	f002 ffe9 	bl	8004818 <HAL_TIMEx_MasterConfigSynchronization>
 8001846:	4603      	mov	r3, r0
 8001848:	2b00      	cmp	r3, #0
 800184a:	bf14      	ite	ne
 800184c:	2301      	movne	r3, #1
 800184e:	2300      	moveq	r3, #0
 8001850:	b2db      	uxtb	r3, r3
 8001852:	2b00      	cmp	r3, #0
 8001854:	d001      	beq.n	800185a <_ZL12MX_TIM2_Initv+0xaa>
  {
    Error_Handler();
 8001856:	f000 fb0d 	bl	8001e74 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800185a:	bf00      	nop
 800185c:	3718      	adds	r7, #24
 800185e:	46bd      	mov	sp, r7
 8001860:	bd80      	pop	{r7, pc}
 8001862:	bf00      	nop
 8001864:	2000068c 	.word	0x2000068c

08001868 <_ZL12MX_TIM3_Initv>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800186e:	f107 0308 	add.w	r3, r7, #8
 8001872:	2200      	movs	r2, #0
 8001874:	601a      	str	r2, [r3, #0]
 8001876:	605a      	str	r2, [r3, #4]
 8001878:	609a      	str	r2, [r3, #8]
 800187a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800187c:	463b      	mov	r3, r7
 800187e:	2200      	movs	r2, #0
 8001880:	601a      	str	r2, [r3, #0]
 8001882:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001884:	4b24      	ldr	r3, [pc, #144]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 8001886:	4a25      	ldr	r2, [pc, #148]	; (800191c <_ZL12MX_TIM3_Initv+0xb4>)
 8001888:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 1;
 800188a:	4b23      	ldr	r3, [pc, #140]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 800188c:	2201      	movs	r2, #1
 800188e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001890:	4b21      	ldr	r3, [pc, #132]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 8001892:	2200      	movs	r2, #0
 8001894:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 48000;
 8001896:	4b20      	ldr	r3, [pc, #128]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 8001898:	f64b 3280 	movw	r2, #48000	; 0xbb80
 800189c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800189e:	4b1e      	ldr	r3, [pc, #120]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018a4:	4b1c      	ldr	r3, [pc, #112]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 80018a6:	2200      	movs	r2, #0
 80018a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018aa:	481b      	ldr	r0, [pc, #108]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 80018ac:	f002 fc04 	bl	80040b8 <HAL_TIM_Base_Init>
 80018b0:	4603      	mov	r3, r0
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	bf14      	ite	ne
 80018b6:	2301      	movne	r3, #1
 80018b8:	2300      	moveq	r3, #0
 80018ba:	b2db      	uxtb	r3, r3
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d001      	beq.n	80018c4 <_ZL12MX_TIM3_Initv+0x5c>
  {
    Error_Handler();
 80018c0:	f000 fad8 	bl	8001e74 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80018c8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ca:	f107 0308 	add.w	r3, r7, #8
 80018ce:	4619      	mov	r1, r3
 80018d0:	4811      	ldr	r0, [pc, #68]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 80018d2:	f002 fdc1 	bl	8004458 <HAL_TIM_ConfigClockSource>
 80018d6:	4603      	mov	r3, r0
 80018d8:	2b00      	cmp	r3, #0
 80018da:	bf14      	ite	ne
 80018dc:	2301      	movne	r3, #1
 80018de:	2300      	moveq	r3, #0
 80018e0:	b2db      	uxtb	r3, r3
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	d001      	beq.n	80018ea <_ZL12MX_TIM3_Initv+0x82>
  {
    Error_Handler();
 80018e6:	f000 fac5 	bl	8001e74 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018ea:	2300      	movs	r3, #0
 80018ec:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ee:	2300      	movs	r3, #0
 80018f0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018f2:	463b      	mov	r3, r7
 80018f4:	4619      	mov	r1, r3
 80018f6:	4808      	ldr	r0, [pc, #32]	; (8001918 <_ZL12MX_TIM3_Initv+0xb0>)
 80018f8:	f002 ff8e 	bl	8004818 <HAL_TIMEx_MasterConfigSynchronization>
 80018fc:	4603      	mov	r3, r0
 80018fe:	2b00      	cmp	r3, #0
 8001900:	bf14      	ite	ne
 8001902:	2301      	movne	r3, #1
 8001904:	2300      	moveq	r3, #0
 8001906:	b2db      	uxtb	r3, r3
 8001908:	2b00      	cmp	r3, #0
 800190a:	d001      	beq.n	8001910 <_ZL12MX_TIM3_Initv+0xa8>
  {
    Error_Handler();
 800190c:	f000 fab2 	bl	8001e74 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001910:	bf00      	nop
 8001912:	3718      	adds	r7, #24
 8001914:	46bd      	mov	sp, r7
 8001916:	bd80      	pop	{r7, pc}
 8001918:	200006d4 	.word	0x200006d4
 800191c:	40000400 	.word	0x40000400

08001920 <_ZL12MX_TIM4_Initv>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001920:	b580      	push	{r7, lr}
 8001922:	b086      	sub	sp, #24
 8001924:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001926:	f107 0308 	add.w	r3, r7, #8
 800192a:	2200      	movs	r2, #0
 800192c:	601a      	str	r2, [r3, #0]
 800192e:	605a      	str	r2, [r3, #4]
 8001930:	609a      	str	r2, [r3, #8]
 8001932:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001934:	463b      	mov	r3, r7
 8001936:	2200      	movs	r2, #0
 8001938:	601a      	str	r2, [r3, #0]
 800193a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800193c:	4b24      	ldr	r3, [pc, #144]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 800193e:	4a25      	ldr	r2, [pc, #148]	; (80019d4 <_ZL12MX_TIM4_Initv+0xb4>)
 8001940:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 3;
 8001942:	4b23      	ldr	r3, [pc, #140]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 8001944:	2203      	movs	r2, #3
 8001946:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001948:	4b21      	ldr	r3, [pc, #132]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 800194a:	2200      	movs	r2, #0
 800194c:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 12000;
 800194e:	4b20      	ldr	r3, [pc, #128]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 8001950:	f642 62e0 	movw	r2, #12000	; 0x2ee0
 8001954:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001956:	4b1e      	ldr	r3, [pc, #120]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 8001958:	2200      	movs	r2, #0
 800195a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800195c:	4b1c      	ldr	r3, [pc, #112]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 800195e:	2200      	movs	r2, #0
 8001960:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001962:	481b      	ldr	r0, [pc, #108]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 8001964:	f002 fba8 	bl	80040b8 <HAL_TIM_Base_Init>
 8001968:	4603      	mov	r3, r0
 800196a:	2b00      	cmp	r3, #0
 800196c:	bf14      	ite	ne
 800196e:	2301      	movne	r3, #1
 8001970:	2300      	moveq	r3, #0
 8001972:	b2db      	uxtb	r3, r3
 8001974:	2b00      	cmp	r3, #0
 8001976:	d001      	beq.n	800197c <_ZL12MX_TIM4_Initv+0x5c>
  {
    Error_Handler();
 8001978:	f000 fa7c 	bl	8001e74 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800197c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001980:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001982:	f107 0308 	add.w	r3, r7, #8
 8001986:	4619      	mov	r1, r3
 8001988:	4811      	ldr	r0, [pc, #68]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 800198a:	f002 fd65 	bl	8004458 <HAL_TIM_ConfigClockSource>
 800198e:	4603      	mov	r3, r0
 8001990:	2b00      	cmp	r3, #0
 8001992:	bf14      	ite	ne
 8001994:	2301      	movne	r3, #1
 8001996:	2300      	moveq	r3, #0
 8001998:	b2db      	uxtb	r3, r3
 800199a:	2b00      	cmp	r3, #0
 800199c:	d001      	beq.n	80019a2 <_ZL12MX_TIM4_Initv+0x82>
  {
    Error_Handler();
 800199e:	f000 fa69 	bl	8001e74 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80019a2:	2300      	movs	r3, #0
 80019a4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80019a6:	2300      	movs	r3, #0
 80019a8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80019aa:	463b      	mov	r3, r7
 80019ac:	4619      	mov	r1, r3
 80019ae:	4808      	ldr	r0, [pc, #32]	; (80019d0 <_ZL12MX_TIM4_Initv+0xb0>)
 80019b0:	f002 ff32 	bl	8004818 <HAL_TIMEx_MasterConfigSynchronization>
 80019b4:	4603      	mov	r3, r0
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	bf14      	ite	ne
 80019ba:	2301      	movne	r3, #1
 80019bc:	2300      	moveq	r3, #0
 80019be:	b2db      	uxtb	r3, r3
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d001      	beq.n	80019c8 <_ZL12MX_TIM4_Initv+0xa8>
  {
    Error_Handler();
 80019c4:	f000 fa56 	bl	8001e74 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80019c8:	bf00      	nop
 80019ca:	3718      	adds	r7, #24
 80019cc:	46bd      	mov	sp, r7
 80019ce:	bd80      	pop	{r7, pc}
 80019d0:	2000071c 	.word	0x2000071c
 80019d4:	40000800 	.word	0x40000800

080019d8 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80019d8:	b580      	push	{r7, lr}
 80019da:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80019dc:	4b13      	ldr	r3, [pc, #76]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019de:	4a14      	ldr	r2, [pc, #80]	; (8001a30 <_ZL19MX_USART1_UART_Initv+0x58>)
 80019e0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80019e2:	4b12      	ldr	r3, [pc, #72]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019e4:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80019e8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80019ea:	4b10      	ldr	r3, [pc, #64]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019ec:	2200      	movs	r2, #0
 80019ee:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80019f0:	4b0e      	ldr	r3, [pc, #56]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019f2:	2200      	movs	r2, #0
 80019f4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80019f6:	4b0d      	ldr	r3, [pc, #52]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019f8:	2200      	movs	r2, #0
 80019fa:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80019fc:	4b0b      	ldr	r3, [pc, #44]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 80019fe:	220c      	movs	r2, #12
 8001a00:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001a02:	4b0a      	ldr	r3, [pc, #40]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 8001a04:	2200      	movs	r2, #0
 8001a06:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001a08:	4b08      	ldr	r3, [pc, #32]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 8001a0a:	2200      	movs	r2, #0
 8001a0c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001a0e:	4807      	ldr	r0, [pc, #28]	; (8001a2c <_ZL19MX_USART1_UART_Initv+0x54>)
 8001a10:	f002 ff72 	bl	80048f8 <HAL_UART_Init>
 8001a14:	4603      	mov	r3, r0
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	bf14      	ite	ne
 8001a1a:	2301      	movne	r3, #1
 8001a1c:	2300      	moveq	r3, #0
 8001a1e:	b2db      	uxtb	r3, r3
 8001a20:	2b00      	cmp	r3, #0
 8001a22:	d001      	beq.n	8001a28 <_ZL19MX_USART1_UART_Initv+0x50>
  {
    Error_Handler();
 8001a24:	f000 fa26 	bl	8001e74 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001a28:	bf00      	nop
 8001a2a:	bd80      	pop	{r7, pc}
 8001a2c:	20000764 	.word	0x20000764
 8001a30:	40013800 	.word	0x40013800

08001a34 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001a34:	b580      	push	{r7, lr}
 8001a36:	b088      	sub	sp, #32
 8001a38:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a3a:	f107 0310 	add.w	r3, r7, #16
 8001a3e:	2200      	movs	r2, #0
 8001a40:	601a      	str	r2, [r3, #0]
 8001a42:	605a      	str	r2, [r3, #4]
 8001a44:	609a      	str	r2, [r3, #8]
 8001a46:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a48:	4b48      	ldr	r3, [pc, #288]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a4a:	699b      	ldr	r3, [r3, #24]
 8001a4c:	4a47      	ldr	r2, [pc, #284]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a4e:	f043 0310 	orr.w	r3, r3, #16
 8001a52:	6193      	str	r3, [r2, #24]
 8001a54:	4b45      	ldr	r3, [pc, #276]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a56:	699b      	ldr	r3, [r3, #24]
 8001a58:	f003 0310 	and.w	r3, r3, #16
 8001a5c:	60fb      	str	r3, [r7, #12]
 8001a5e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a60:	4b42      	ldr	r3, [pc, #264]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a62:	699b      	ldr	r3, [r3, #24]
 8001a64:	4a41      	ldr	r2, [pc, #260]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a66:	f043 0320 	orr.w	r3, r3, #32
 8001a6a:	6193      	str	r3, [r2, #24]
 8001a6c:	4b3f      	ldr	r3, [pc, #252]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a6e:	699b      	ldr	r3, [r3, #24]
 8001a70:	f003 0320 	and.w	r3, r3, #32
 8001a74:	60bb      	str	r3, [r7, #8]
 8001a76:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a78:	4b3c      	ldr	r3, [pc, #240]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a7a:	699b      	ldr	r3, [r3, #24]
 8001a7c:	4a3b      	ldr	r2, [pc, #236]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a7e:	f043 0304 	orr.w	r3, r3, #4
 8001a82:	6193      	str	r3, [r2, #24]
 8001a84:	4b39      	ldr	r3, [pc, #228]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a86:	699b      	ldr	r3, [r3, #24]
 8001a88:	f003 0304 	and.w	r3, r3, #4
 8001a8c:	607b      	str	r3, [r7, #4]
 8001a8e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a90:	4b36      	ldr	r3, [pc, #216]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a92:	699b      	ldr	r3, [r3, #24]
 8001a94:	4a35      	ldr	r2, [pc, #212]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a96:	f043 0308 	orr.w	r3, r3, #8
 8001a9a:	6193      	str	r3, [r2, #24]
 8001a9c:	4b33      	ldr	r3, [pc, #204]	; (8001b6c <_ZL12MX_GPIO_Initv+0x138>)
 8001a9e:	699b      	ldr	r3, [r3, #24]
 8001aa0:	f003 0308 	and.w	r3, r3, #8
 8001aa4:	603b      	str	r3, [r7, #0]
 8001aa6:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(W5500_RST_GPIO_Port, W5500_RST_Pin, GPIO_PIN_SET);
 8001aa8:	2201      	movs	r2, #1
 8001aaa:	2110      	movs	r1, #16
 8001aac:	4830      	ldr	r0, [pc, #192]	; (8001b70 <_ZL12MX_GPIO_Initv+0x13c>)
 8001aae:	f001 f9ab 	bl	8002e08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(W5500_CS_GPIO_Port, W5500_CS_Pin, GPIO_PIN_RESET);
 8001ab2:	2200      	movs	r2, #0
 8001ab4:	2120      	movs	r1, #32
 8001ab6:	482e      	ldr	r0, [pc, #184]	; (8001b70 <_ZL12MX_GPIO_Initv+0x13c>)
 8001ab8:	f001 f9a6 	bl	8002e08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_TX_Pin|LED_RX_Pin, GPIO_PIN_SET);
 8001abc:	2201      	movs	r2, #1
 8001abe:	f44f 7140 	mov.w	r1, #768	; 0x300
 8001ac2:	482c      	ldr	r0, [pc, #176]	; (8001b74 <_ZL12MX_GPIO_Initv+0x140>)
 8001ac4:	f001 f9a0 	bl	8002e08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : RSTBUTTON_Pin */
  GPIO_InitStruct.Pin = RSTBUTTON_Pin;
 8001ac8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001acc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001ace:	2300      	movs	r3, #0
 8001ad0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ad2:	2301      	movs	r3, #1
 8001ad4:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(RSTBUTTON_GPIO_Port, &GPIO_InitStruct);
 8001ad6:	f107 0310 	add.w	r3, r7, #16
 8001ada:	4619      	mov	r1, r3
 8001adc:	4824      	ldr	r0, [pc, #144]	; (8001b70 <_ZL12MX_GPIO_Initv+0x13c>)
 8001ade:	f001 f80f 	bl	8002b00 <HAL_GPIO_Init>

  /*Configure GPIO pin : W5500_INT_Pin */
  GPIO_InitStruct.Pin = W5500_INT_Pin;
 8001ae2:	2310      	movs	r3, #16
 8001ae4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001ae6:	4b24      	ldr	r3, [pc, #144]	; (8001b78 <_ZL12MX_GPIO_Initv+0x144>)
 8001ae8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aea:	2300      	movs	r3, #0
 8001aec:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(W5500_INT_GPIO_Port, &GPIO_InitStruct);
 8001aee:	f107 0310 	add.w	r3, r7, #16
 8001af2:	4619      	mov	r1, r3
 8001af4:	4821      	ldr	r0, [pc, #132]	; (8001b7c <_ZL12MX_GPIO_Initv+0x148>)
 8001af6:	f001 f803 	bl	8002b00 <HAL_GPIO_Init>

  /*Configure GPIO pins : W5500_RST_Pin W5500_CS_Pin */
  GPIO_InitStruct.Pin = W5500_RST_Pin|W5500_CS_Pin;
 8001afa:	2330      	movs	r3, #48	; 0x30
 8001afc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001afe:	2301      	movs	r3, #1
 8001b00:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b02:	2300      	movs	r3, #0
 8001b04:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b06:	2302      	movs	r3, #2
 8001b08:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b0a:	f107 0310 	add.w	r3, r7, #16
 8001b0e:	4619      	mov	r1, r3
 8001b10:	4817      	ldr	r0, [pc, #92]	; (8001b70 <_ZL12MX_GPIO_Initv+0x13c>)
 8001b12:	f000 fff5 	bl	8002b00 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_TX_Pin */
  GPIO_InitStruct.Pin = LED_TX_Pin;
 8001b16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001b1a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001b1c:	2311      	movs	r3, #17
 8001b1e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b20:	2300      	movs	r3, #0
 8001b22:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b24:	2302      	movs	r3, #2
 8001b26:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_TX_GPIO_Port, &GPIO_InitStruct);
 8001b28:	f107 0310 	add.w	r3, r7, #16
 8001b2c:	4619      	mov	r1, r3
 8001b2e:	4811      	ldr	r0, [pc, #68]	; (8001b74 <_ZL12MX_GPIO_Initv+0x140>)
 8001b30:	f000 ffe6 	bl	8002b00 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_RX_Pin */
  GPIO_InitStruct.Pin = LED_RX_Pin;
 8001b34:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001b38:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b3a:	2301      	movs	r3, #1
 8001b3c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b3e:	2300      	movs	r3, #0
 8001b40:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b42:	2302      	movs	r3, #2
 8001b44:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_RX_GPIO_Port, &GPIO_InitStruct);
 8001b46:	f107 0310 	add.w	r3, r7, #16
 8001b4a:	4619      	mov	r1, r3
 8001b4c:	4809      	ldr	r0, [pc, #36]	; (8001b74 <_ZL12MX_GPIO_Initv+0x140>)
 8001b4e:	f000 ffd7 	bl	8002b00 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8001b52:	2200      	movs	r2, #0
 8001b54:	2100      	movs	r1, #0
 8001b56:	200a      	movs	r0, #10
 8001b58:	f000 fceb 	bl	8002532 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8001b5c:	200a      	movs	r0, #10
 8001b5e:	f000 fd04 	bl	800256a <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001b62:	bf00      	nop
 8001b64:	3720      	adds	r7, #32
 8001b66:	46bd      	mov	sp, r7
 8001b68:	bd80      	pop	{r7, pc}
 8001b6a:	bf00      	nop
 8001b6c:	40021000 	.word	0x40021000
 8001b70:	40011000 	.word	0x40011000
 8001b74:	40010c00 	.word	0x40010c00
 8001b78:	10210000 	.word	0x10210000
 8001b7c:	40010800 	.word	0x40010800

08001b80 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b082      	sub	sp, #8
 8001b84:	af00      	add	r7, sp, #0
 8001b86:	6078      	str	r0, [r7, #4]
  if (huart == &huart1)
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	4a14      	ldr	r2, [pc, #80]	; (8001bdc <HAL_UART_RxCpltCallback+0x5c>)
 8001b8c:	4293      	cmp	r3, r2
 8001b8e:	d121      	bne.n	8001bd4 <HAL_UART_RxCpltCallback+0x54>
  {
	  //// изначально было так - // включаем cветодиод "RX"
	  //// HAL_GPIO_WritePin(LED_RX_GPIO_Port, LED_RX_Pin, GPIO_PIN_RESET);

	  // включаем cветодиод "TX"
	  HAL_GPIO_WritePin(LED_TX_GPIO_Port, LED_TX_Pin, GPIO_PIN_RESET);
 8001b90:	2200      	movs	r2, #0
 8001b92:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b96:	4812      	ldr	r0, [pc, #72]	; (8001be0 <HAL_UART_RxCpltCallback+0x60>)
 8001b98:	f001 f936 	bl	8002e08 <HAL_GPIO_WritePin>

	  // запу�?каем таймер TIM4, от�?читываем врем�? �?вечени�? cветодиода "RX"
	  HAL_TIM_Base_Start_IT(&htim4);
 8001b9c:	4811      	ldr	r0, [pc, #68]	; (8001be4 <HAL_UART_RxCpltCallback+0x64>)
 8001b9e:	f002 fb01 	bl	80041a4 <HAL_TIM_Base_Start_IT>

	  //HAL_TIM_Base_Stop(&htim3);

	  // обнул�?ем �?четчик таймера TIM3
	  __HAL_TIM_SET_COUNTER(&htim3, 0);
 8001ba2:	4b11      	ldr	r3, [pc, #68]	; (8001be8 <HAL_UART_RxCpltCallback+0x68>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	2200      	movs	r2, #0
 8001ba8:	625a      	str	r2, [r3, #36]	; 0x24

	  // запу�?каем таймер TIM3, от�?читываем врем�? до �?ледующего пакета по RX
	  HAL_TIM_Base_Start_IT(&htim3);
 8001baa:	480f      	ldr	r0, [pc, #60]	; (8001be8 <HAL_UART_RxCpltCallback+0x68>)
 8001bac:	f002 fafa 	bl	80041a4 <HAL_TIM_Base_Start_IT>

	  // �?охран�?ем полученный байт в буфер
	  receivedPacketUART[receivedBytesUARTCounter] = receivedByteUART;
 8001bb0:	4b0e      	ldr	r3, [pc, #56]	; (8001bec <HAL_UART_RxCpltCallback+0x6c>)
 8001bb2:	781b      	ldrb	r3, [r3, #0]
 8001bb4:	461a      	mov	r2, r3
 8001bb6:	4b0e      	ldr	r3, [pc, #56]	; (8001bf0 <HAL_UART_RxCpltCallback+0x70>)
 8001bb8:	7819      	ldrb	r1, [r3, #0]
 8001bba:	4b0e      	ldr	r3, [pc, #56]	; (8001bf4 <HAL_UART_RxCpltCallback+0x74>)
 8001bbc:	5499      	strb	r1, [r3, r2]

	  //buf1.put(rxByte);

	  // инкрементируем �?четчик полученных байт
	  receivedBytesUARTCounter++;
 8001bbe:	4b0b      	ldr	r3, [pc, #44]	; (8001bec <HAL_UART_RxCpltCallback+0x6c>)
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	3301      	adds	r3, #1
 8001bc4:	b2da      	uxtb	r2, r3
 8001bc6:	4b09      	ldr	r3, [pc, #36]	; (8001bec <HAL_UART_RxCpltCallback+0x6c>)
 8001bc8:	701a      	strb	r2, [r3, #0]

	  // �?нова ждем приема байта по UART1
	  HAL_UART_Receive_IT(&huart1, &receivedByteUART, 1);
 8001bca:	2201      	movs	r2, #1
 8001bcc:	4908      	ldr	r1, [pc, #32]	; (8001bf0 <HAL_UART_RxCpltCallback+0x70>)
 8001bce:	4803      	ldr	r0, [pc, #12]	; (8001bdc <HAL_UART_RxCpltCallback+0x5c>)
 8001bd0:	f002 ff23 	bl	8004a1a <HAL_UART_Receive_IT>
  }
}
 8001bd4:	bf00      	nop
 8001bd6:	3708      	adds	r7, #8
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}
 8001bdc:	20000764 	.word	0x20000764
 8001be0:	40010c00 	.word	0x40010c00
 8001be4:	2000071c 	.word	0x2000071c
 8001be8:	200006d4 	.word	0x200006d4
 8001bec:	2000096c 	.word	0x2000096c
 8001bf0:	20000868 	.word	0x20000868
 8001bf4:	2000086c 	.word	0x2000086c

08001bf8 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 8001bf8:	b580      	push	{r7, lr}
 8001bfa:	b082      	sub	sp, #8
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	6078      	str	r0, [r7, #4]
  if(huart == &huart1)
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	4a06      	ldr	r2, [pc, #24]	; (8001c1c <HAL_UART_TxCpltCallback+0x24>)
 8001c04:	4293      	cmp	r3, r2
 8001c06:	d105      	bne.n	8001c14 <HAL_UART_TxCpltCallback+0x1c>
  {
	  //// изначально было так - // гаcим cветодиод "TX"
	  //// HAL_GPIO_WritePin(LED_TX_GPIO_Port, LED_TX_Pin, GPIO_PIN_SET);

	  // гаcим cветодиод "RX"
	  HAL_GPIO_WritePin(LED_RX_GPIO_Port, LED_RX_Pin, GPIO_PIN_SET);
 8001c08:	2201      	movs	r2, #1
 8001c0a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001c0e:	4804      	ldr	r0, [pc, #16]	; (8001c20 <HAL_UART_TxCpltCallback+0x28>)
 8001c10:	f001 f8fa 	bl	8002e08 <HAL_GPIO_WritePin>
  }
}
 8001c14:	bf00      	nop
 8001c16:	3708      	adds	r7, #8
 8001c18:	46bd      	mov	sp, r7
 8001c1a:	bd80      	pop	{r7, pc}
 8001c1c:	20000764 	.word	0x20000764
 8001c20:	40010c00 	.word	0x40010c00

08001c24 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001c24:	b580      	push	{r7, lr}
 8001c26:	b084      	sub	sp, #16
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
	if(htim->Instance == TIM3) //check if the interrupt comes from TIM3
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	4a1b      	ldr	r2, [pc, #108]	; (8001ca0 <HAL_TIM_PeriodElapsedCallback+0x7c>)
 8001c32:	4293      	cmp	r3, r2
 8001c34:	d121      	bne.n	8001c7a <HAL_TIM_PeriodElapsedCallback+0x56>
	{
		HAL_TIM_Base_Stop(&htim3);
 8001c36:	481b      	ldr	r0, [pc, #108]	; (8001ca4 <HAL_TIM_PeriodElapsedCallback+0x80>)
 8001c38:	f002 fa8d 	bl	8004156 <HAL_TIM_Base_Stop>

		// копируем полученный пакет
		for (int i = 0; i < receivedBytesUARTCounter; ++i)
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	60fb      	str	r3, [r7, #12]
 8001c40:	4b19      	ldr	r3, [pc, #100]	; (8001ca8 <HAL_TIM_PeriodElapsedCallback+0x84>)
 8001c42:	781b      	ldrb	r3, [r3, #0]
 8001c44:	461a      	mov	r2, r3
 8001c46:	68fb      	ldr	r3, [r7, #12]
 8001c48:	4293      	cmp	r3, r2
 8001c4a:	da0c      	bge.n	8001c66 <HAL_TIM_PeriodElapsedCallback+0x42>
		{
			copiedReceivedPacketUART[i] = receivedPacketUART[i];
 8001c4c:	4a17      	ldr	r2, [pc, #92]	; (8001cac <HAL_TIM_PeriodElapsedCallback+0x88>)
 8001c4e:	68fb      	ldr	r3, [r7, #12]
 8001c50:	4413      	add	r3, r2
 8001c52:	7819      	ldrb	r1, [r3, #0]
 8001c54:	4a16      	ldr	r2, [pc, #88]	; (8001cb0 <HAL_TIM_PeriodElapsedCallback+0x8c>)
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	4413      	add	r3, r2
 8001c5a:	460a      	mov	r2, r1
 8001c5c:	701a      	strb	r2, [r3, #0]
		for (int i = 0; i < receivedBytesUARTCounter; ++i)
 8001c5e:	68fb      	ldr	r3, [r7, #12]
 8001c60:	3301      	adds	r3, #1
 8001c62:	60fb      	str	r3, [r7, #12]
 8001c64:	e7ec      	b.n	8001c40 <HAL_TIM_PeriodElapsedCallback+0x1c>
		}
		// копируем �?четчик полученных байт
		copiedReceivedBytesUARTCounter = receivedBytesUARTCounter;
 8001c66:	4b10      	ldr	r3, [pc, #64]	; (8001ca8 <HAL_TIM_PeriodElapsedCallback+0x84>)
 8001c68:	781a      	ldrb	r2, [r3, #0]
 8001c6a:	4b12      	ldr	r3, [pc, #72]	; (8001cb4 <HAL_TIM_PeriodElapsedCallback+0x90>)
 8001c6c:	701a      	strb	r2, [r3, #0]

		// у�?танавливаем флаг о готовно�?ти пакета, прин�?того по UART
		receivedPacketUARTisReady = true;
 8001c6e:	4b12      	ldr	r3, [pc, #72]	; (8001cb8 <HAL_TIM_PeriodElapsedCallback+0x94>)
 8001c70:	2201      	movs	r2, #1
 8001c72:	701a      	strb	r2, [r3, #0]

		// обнул�?ем �?четчик полученных байт
		receivedBytesUARTCounter = 0;
 8001c74:	4b0c      	ldr	r3, [pc, #48]	; (8001ca8 <HAL_TIM_PeriodElapsedCallback+0x84>)
 8001c76:	2200      	movs	r2, #0
 8001c78:	701a      	strb	r2, [r3, #0]
	}
	if(htim->Instance == TIM4) //check if the interrupt comes from TIM4
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	4a0f      	ldr	r2, [pc, #60]	; (8001cbc <HAL_TIM_PeriodElapsedCallback+0x98>)
 8001c80:	4293      	cmp	r3, r2
 8001c82:	d108      	bne.n	8001c96 <HAL_TIM_PeriodElapsedCallback+0x72>
	{
		HAL_TIM_Base_Stop(&htim4);
 8001c84:	480e      	ldr	r0, [pc, #56]	; (8001cc0 <HAL_TIM_PeriodElapsedCallback+0x9c>)
 8001c86:	f002 fa66 	bl	8004156 <HAL_TIM_Base_Stop>

		//// изначально было так - // гаcим cветодиод "RX"
		//// HAL_GPIO_WritePin(LED_RX_GPIO_Port, LED_RX_Pin, GPIO_PIN_SET);

		// гаcим cветодиод "TX"
		HAL_GPIO_WritePin(LED_TX_GPIO_Port, LED_TX_Pin, GPIO_PIN_SET);
 8001c8a:	2201      	movs	r2, #1
 8001c8c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c90:	480c      	ldr	r0, [pc, #48]	; (8001cc4 <HAL_TIM_PeriodElapsedCallback+0xa0>)
 8001c92:	f001 f8b9 	bl	8002e08 <HAL_GPIO_WritePin>
	}
}
 8001c96:	bf00      	nop
 8001c98:	3710      	adds	r7, #16
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	bd80      	pop	{r7, pc}
 8001c9e:	bf00      	nop
 8001ca0:	40000400 	.word	0x40000400
 8001ca4:	200006d4 	.word	0x200006d4
 8001ca8:	2000096c 	.word	0x2000096c
 8001cac:	2000086c 	.word	0x2000086c
 8001cb0:	20000970 	.word	0x20000970
 8001cb4:	20000a70 	.word	0x20000a70
 8001cb8:	2000096d 	.word	0x2000096d
 8001cbc:	40000800 	.word	0x40000800
 8001cc0:	2000071c 	.word	0x2000071c
 8001cc4:	40010c00 	.word	0x40010c00

08001cc8 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b084      	sub	sp, #16
 8001ccc:	af00      	add	r7, sp, #0
 8001cce:	4603      	mov	r3, r0
 8001cd0:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == W5500_INT_Pin)
 8001cd2:	88fb      	ldrh	r3, [r7, #6]
 8001cd4:	2b10      	cmp	r3, #16
 8001cd6:	f040 80aa 	bne.w	8001e2e <HAL_GPIO_EXTI_Callback+0x166>
	{
		// читаем флаги прерываний от �?окетов
		uint8_t valueSIR = ethernetA1.readByteFromCRB(W5500_SIR);
 8001cda:	2117      	movs	r1, #23
 8001cdc:	4856      	ldr	r0, [pc, #344]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001cde:	f7fe fa91 	bl	8000204 <_ZN5W550015readByteFromCRBEh>
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	73fb      	strb	r3, [r7, #15]
		uint8_t valueSn_IR {0};
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	73bb      	strb	r3, [r7, #14]
		if (valueSIR)
 8001cea:	7bfb      	ldrb	r3, [r7, #15]
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	f000 809e 	beq.w	8001e2e <HAL_GPIO_EXTI_Callback+0x166>
		{
			if (valueSIR & W5500_S0_INT)
 8001cf2:	7bfb      	ldrb	r3, [r7, #15]
 8001cf4:	f003 0301 	and.w	r3, r3, #1
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d01d      	beq.n	8001d38 <HAL_GPIO_EXTI_Callback+0x70>
			{
				// читаем флаги прерываний �?окета 0
				valueSn_IR = ethernetA1.readByteFromSRB(SOCKET0, W5500_Sn_IR);
 8001cfc:	2202      	movs	r2, #2
 8001cfe:	2108      	movs	r1, #8
 8001d00:	484d      	ldr	r0, [pc, #308]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d02:	f7fe fafc 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 8001d06:	4603      	mov	r3, r0
 8001d08:	73bb      	strb	r3, [r7, #14]

				if (valueSn_IR & W5500_Sn_IR_RECV) // получен пакет
 8001d0a:	7bbb      	ldrb	r3, [r7, #14]
 8001d0c:	f003 0304 	and.w	r3, r3, #4
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	d011      	beq.n	8001d38 <HAL_GPIO_EXTI_Callback+0x70>
				{
					// принимаем полученные данные
					ethernetA1.receivePacket(SOCKET0, receiveSocket0data, &sizeOfReceiveSocket0data);
 8001d14:	4b49      	ldr	r3, [pc, #292]	; (8001e3c <HAL_GPIO_EXTI_Callback+0x174>)
 8001d16:	4a4a      	ldr	r2, [pc, #296]	; (8001e40 <HAL_GPIO_EXTI_Callback+0x178>)
 8001d18:	2108      	movs	r1, #8
 8001d1a:	4847      	ldr	r0, [pc, #284]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d1c:	f7fe fcc5 	bl	80006aa <_ZN5W550013receivePacketEhPhPt>
					// у�?танавливаем флаги
					socket0dataReady = true;
 8001d20:	4b48      	ldr	r3, [pc, #288]	; (8001e44 <HAL_GPIO_EXTI_Callback+0x17c>)
 8001d22:	2201      	movs	r2, #1
 8001d24:	701a      	strb	r2, [r3, #0]
					needsTransmitUDP = true;
 8001d26:	4b48      	ldr	r3, [pc, #288]	; (8001e48 <HAL_GPIO_EXTI_Callback+0x180>)
 8001d28:	2201      	movs	r2, #1
 8001d2a:	701a      	strb	r2, [r3, #0]
					// �?бра�?ываем флаг прерывани�? RECV в реги�?тре S0_IR
					ethernetA1.writeByteToSRB(SOCKET0, W5500_Sn_IR_RECV, W5500_Sn_IR);
 8001d2c:	2302      	movs	r3, #2
 8001d2e:	2204      	movs	r2, #4
 8001d30:	2108      	movs	r1, #8
 8001d32:	4841      	ldr	r0, [pc, #260]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d34:	f7fe fb55 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
				{

				}
			}

			if (valueSIR & W5500_S1_INT)
 8001d38:	7bfb      	ldrb	r3, [r7, #15]
 8001d3a:	f003 0302 	and.w	r3, r3, #2
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d031      	beq.n	8001da6 <HAL_GPIO_EXTI_Callback+0xde>
			{
				// читаем флаги прерываний �?окета 1
				valueSn_IR = ethernetA1.readByteFromSRB(SOCKET1, W5500_Sn_IR);
 8001d42:	2202      	movs	r2, #2
 8001d44:	2128      	movs	r1, #40	; 0x28
 8001d46:	483c      	ldr	r0, [pc, #240]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d48:	f7fe fad9 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 8001d4c:	4603      	mov	r3, r0
 8001d4e:	73bb      	strb	r3, [r7, #14]

				if (valueSn_IR & W5500_Sn_IR_RECV) // получен пакет
 8001d50:	7bbb      	ldrb	r3, [r7, #14]
 8001d52:	f003 0304 	and.w	r3, r3, #4
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d011      	beq.n	8001d7e <HAL_GPIO_EXTI_Callback+0xb6>
				{
					// принимаем полученные данные
					ethernetA1.receivePacket(SOCKET1, receiveSocket1data, &sizeOfReceiveSocket1data);
 8001d5a:	4b3c      	ldr	r3, [pc, #240]	; (8001e4c <HAL_GPIO_EXTI_Callback+0x184>)
 8001d5c:	4a3c      	ldr	r2, [pc, #240]	; (8001e50 <HAL_GPIO_EXTI_Callback+0x188>)
 8001d5e:	2128      	movs	r1, #40	; 0x28
 8001d60:	4835      	ldr	r0, [pc, #212]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d62:	f7fe fca2 	bl	80006aa <_ZN5W550013receivePacketEhPhPt>
					// у�?танавливаем флаги
					socket1dataReady = true;
 8001d66:	4b3b      	ldr	r3, [pc, #236]	; (8001e54 <HAL_GPIO_EXTI_Callback+0x18c>)
 8001d68:	2201      	movs	r2, #1
 8001d6a:	701a      	strb	r2, [r3, #0]
					needsTransmitTCP = true;
 8001d6c:	4b3a      	ldr	r3, [pc, #232]	; (8001e58 <HAL_GPIO_EXTI_Callback+0x190>)
 8001d6e:	2201      	movs	r2, #1
 8001d70:	701a      	strb	r2, [r3, #0]
					// �?бра�?ываем флаг прерывани�? RECV в реги�?тре S1_IR
					ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_IR_RECV, W5500_Sn_IR);
 8001d72:	2302      	movs	r3, #2
 8001d74:	2204      	movs	r2, #4
 8001d76:	2128      	movs	r1, #40	; 0x28
 8001d78:	482f      	ldr	r0, [pc, #188]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d7a:	f7fe fb32 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
				if (valueSn_IR & W5500_Sn_IR_CON) // �?оединение �? пиром у�?пешно у�?тановлено
				{

				}

				if (valueSn_IR & W5500_Sn_IR_DISCON) // от пира получен пакет FIN или FIN/ACK
 8001d7e:	7bbb      	ldrb	r3, [r7, #14]
 8001d80:	f003 0302 	and.w	r3, r3, #2
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d00e      	beq.n	8001da6 <HAL_GPIO_EXTI_Callback+0xde>
				{
					// отправл�?ем команду DISCONNECT
					ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_CR_DISCON, W5500_Sn_CR);
 8001d88:	2301      	movs	r3, #1
 8001d8a:	2208      	movs	r2, #8
 8001d8c:	2128      	movs	r1, #40	; 0x28
 8001d8e:	482a      	ldr	r0, [pc, #168]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001d90:	f7fe fb27 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
					// у�?танавливаем флаг
					needsOpenTCP = true;
 8001d94:	4b31      	ldr	r3, [pc, #196]	; (8001e5c <HAL_GPIO_EXTI_Callback+0x194>)
 8001d96:	2201      	movs	r2, #1
 8001d98:	701a      	strb	r2, [r3, #0]
					// �?бра�?ываем флаг прерывани�? RECV в реги�?тре S1_IR
					ethernetA1.writeByteToSRB(SOCKET1, W5500_Sn_IR_DISCON, W5500_Sn_IR);
 8001d9a:	2302      	movs	r3, #2
 8001d9c:	2202      	movs	r2, #2
 8001d9e:	2128      	movs	r1, #40	; 0x28
 8001da0:	4825      	ldr	r0, [pc, #148]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001da2:	f7fe fb1e 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
				{

				}
			}

			if (valueSIR & W5500_S2_INT)
 8001da6:	7bfb      	ldrb	r3, [r7, #15]
 8001da8:	f003 0304 	and.w	r3, r3, #4
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d03e      	beq.n	8001e2e <HAL_GPIO_EXTI_Callback+0x166>
			{
				// читаем флаги прерываний �?окета 2
				valueSn_IR = ethernetA1.readByteFromSRB(SOCKET2, W5500_Sn_IR);
 8001db0:	2202      	movs	r2, #2
 8001db2:	2148      	movs	r1, #72	; 0x48
 8001db4:	4820      	ldr	r0, [pc, #128]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001db6:	f7fe faa2 	bl	80002fe <_ZN5W550015readByteFromSRBEhh>
 8001dba:	4603      	mov	r3, r0
 8001dbc:	73bb      	strb	r3, [r7, #14]

				if (valueSn_IR & W5500_Sn_IR_RECV) // получен пакет
 8001dbe:	7bbb      	ldrb	r3, [r7, #14]
 8001dc0:	f003 0304 	and.w	r3, r3, #4
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	d00e      	beq.n	8001de6 <HAL_GPIO_EXTI_Callback+0x11e>
				{
					// принимаем полученные данные
					ethernetA1.receivePacket(SOCKET2, receiveSocket2data, &sizeOfReceiveSocket2data);
 8001dc8:	4b25      	ldr	r3, [pc, #148]	; (8001e60 <HAL_GPIO_EXTI_Callback+0x198>)
 8001dca:	4a26      	ldr	r2, [pc, #152]	; (8001e64 <HAL_GPIO_EXTI_Callback+0x19c>)
 8001dcc:	2148      	movs	r1, #72	; 0x48
 8001dce:	481a      	ldr	r0, [pc, #104]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001dd0:	f7fe fc6b 	bl	80006aa <_ZN5W550013receivePacketEhPhPt>
					// у�?танавливаем флаги
					socket2dataReady = true;
 8001dd4:	4b24      	ldr	r3, [pc, #144]	; (8001e68 <HAL_GPIO_EXTI_Callback+0x1a0>)
 8001dd6:	2201      	movs	r2, #1
 8001dd8:	701a      	strb	r2, [r3, #0]
					//needsTransmitTCP = true;
					// �?бра�?ываем флаг прерывани�? RECV в реги�?тре S1_IR
					ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_IR_RECV, W5500_Sn_IR);
 8001dda:	2302      	movs	r3, #2
 8001ddc:	2204      	movs	r2, #4
 8001dde:	2148      	movs	r1, #72	; 0x48
 8001de0:	4815      	ldr	r0, [pc, #84]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001de2:	f7fe fafe 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
				if (valueSn_IR & W5500_Sn_IR_SEND_OK) // команда SEND выполнена
				{

				}

				if (valueSn_IR & W5500_Sn_IR_CON) // �?оединение �? пиром у�?пешно у�?тановлено
 8001de6:	7bbb      	ldrb	r3, [r7, #14]
 8001de8:	f003 0301 	and.w	r3, r3, #1
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d00a      	beq.n	8001e06 <HAL_GPIO_EXTI_Callback+0x13e>
				{
					ethernetA1.sendString(SOCKET2, text0);
 8001df0:	4a1e      	ldr	r2, [pc, #120]	; (8001e6c <HAL_GPIO_EXTI_Callback+0x1a4>)
 8001df2:	2148      	movs	r1, #72	; 0x48
 8001df4:	4810      	ldr	r0, [pc, #64]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001df6:	f7fe fce7 	bl	80007c8 <_ZN5W550010sendStringEhPc>
					// �?бра�?ываем флаг прерывани�? CON в реги�?тре S1_IR
					ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_IR_CON, W5500_Sn_IR);
 8001dfa:	2302      	movs	r3, #2
 8001dfc:	2201      	movs	r2, #1
 8001dfe:	2148      	movs	r1, #72	; 0x48
 8001e00:	480d      	ldr	r0, [pc, #52]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001e02:	f7fe faee 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
				}

				if (valueSn_IR & W5500_Sn_IR_DISCON) // от пира получен пакет FIN или FIN/ACK
 8001e06:	7bbb      	ldrb	r3, [r7, #14]
 8001e08:	f003 0302 	and.w	r3, r3, #2
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	d00e      	beq.n	8001e2e <HAL_GPIO_EXTI_Callback+0x166>
				{
					// отправл�?ем команду DISCONNECT
					ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_CR_DISCON, W5500_Sn_CR);
 8001e10:	2301      	movs	r3, #1
 8001e12:	2208      	movs	r2, #8
 8001e14:	2148      	movs	r1, #72	; 0x48
 8001e16:	4808      	ldr	r0, [pc, #32]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001e18:	f7fe fae3 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
					// у�?танавливаем флаг
					needsOpenTelnet = true;
 8001e1c:	4b14      	ldr	r3, [pc, #80]	; (8001e70 <HAL_GPIO_EXTI_Callback+0x1a8>)
 8001e1e:	2201      	movs	r2, #1
 8001e20:	701a      	strb	r2, [r3, #0]
					// �?бра�?ываем флаг прерывани�? RECV в реги�?тре S1_IR
					ethernetA1.writeByteToSRB(SOCKET2, W5500_Sn_IR_DISCON, W5500_Sn_IR);
 8001e22:	2302      	movs	r3, #2
 8001e24:	2202      	movs	r2, #2
 8001e26:	2148      	movs	r1, #72	; 0x48
 8001e28:	4803      	ldr	r0, [pc, #12]	; (8001e38 <HAL_GPIO_EXTI_Callback+0x170>)
 8001e2a:	f7fe fada 	bl	80003e2 <_ZN5W550014writeByteToSRBEhhh>
			}


		}
	}
}
 8001e2e:	bf00      	nop
 8001e30:	3710      	adds	r7, #16
 8001e32:	46bd      	mov	sp, r7
 8001e34:	bd80      	pop	{r7, pc}
 8001e36:	bf00      	nop
 8001e38:	200023b0 	.word	0x200023b0
 8001e3c:	2000127e 	.word	0x2000127e
 8001e40:	20000a78 	.word	0x20000a78
 8001e44:	20000a75 	.word	0x20000a75
 8001e48:	20000a71 	.word	0x20000a71
 8001e4c:	20001a8a 	.word	0x20001a8a
 8001e50:	20001284 	.word	0x20001284
 8001e54:	20001280 	.word	0x20001280
 8001e58:	20000a72 	.word	0x20000a72
 8001e5c:	20000a73 	.word	0x20000a73
 8001e60:	20002296 	.word	0x20002296
 8001e64:	20001a90 	.word	0x20001a90
 8001e68:	20001a8c 	.word	0x20001a8c
 8001e6c:	20000000 	.word	0x20000000
 8001e70:	20000a74 	.word	0x20000a74

08001e74 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001e74:	b480      	push	{r7}
 8001e76:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001e78:	b672      	cpsid	i
}
 8001e7a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001e7c:	e7fe      	b.n	8001e7c <Error_Handler+0x8>
	...

08001e80 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 8001e80:	b580      	push	{r7, lr}
 8001e82:	b084      	sub	sp, #16
 8001e84:	af02      	add	r7, sp, #8
 8001e86:	6078      	str	r0, [r7, #4]
 8001e88:	6039      	str	r1, [r7, #0]
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	2b01      	cmp	r3, #1
 8001e8e:	d10e      	bne.n	8001eae <_Z41__static_initialization_and_destruction_0ii+0x2e>
 8001e90:	683b      	ldr	r3, [r7, #0]
 8001e92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001e96:	4293      	cmp	r3, r2
 8001e98:	d109      	bne.n	8001eae <_Z41__static_initialization_and_destruction_0ii+0x2e>
W5500 ethernetA1(&hspi1, W5500_CS_GPIO_Port, W5500_CS_Pin, W5500_RST_GPIO_Port, W5500_RST_Pin);
 8001e9a:	2310      	movs	r3, #16
 8001e9c:	9301      	str	r3, [sp, #4]
 8001e9e:	4b0b      	ldr	r3, [pc, #44]	; (8001ecc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8001ea0:	9300      	str	r3, [sp, #0]
 8001ea2:	2320      	movs	r3, #32
 8001ea4:	4a09      	ldr	r2, [pc, #36]	; (8001ecc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8001ea6:	490a      	ldr	r1, [pc, #40]	; (8001ed0 <_Z41__static_initialization_and_destruction_0ii+0x50>)
 8001ea8:	480a      	ldr	r0, [pc, #40]	; (8001ed4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 8001eaa:	f7fe f957 	bl	800015c <_ZN5W5500C1EP19__SPI_HandleTypeDefP12GPIO_TypeDeftS3_t>
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	2b00      	cmp	r3, #0
 8001eb2:	d107      	bne.n	8001ec4 <_Z41__static_initialization_and_destruction_0ii+0x44>
 8001eb4:	683b      	ldr	r3, [r7, #0]
 8001eb6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001eba:	4293      	cmp	r3, r2
 8001ebc:	d102      	bne.n	8001ec4 <_Z41__static_initialization_and_destruction_0ii+0x44>
 8001ebe:	4805      	ldr	r0, [pc, #20]	; (8001ed4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 8001ec0:	f7fe f978 	bl	80001b4 <_ZN5W5500D1Ev>
}
 8001ec4:	bf00      	nop
 8001ec6:	3708      	adds	r7, #8
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bd80      	pop	{r7, pc}
 8001ecc:	40011000 	.word	0x40011000
 8001ed0:	20000634 	.word	0x20000634
 8001ed4:	200023b0 	.word	0x200023b0

08001ed8 <_GLOBAL__sub_I_hspi1>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001ee0:	2001      	movs	r0, #1
 8001ee2:	f7ff ffcd 	bl	8001e80 <_Z41__static_initialization_and_destruction_0ii>
 8001ee6:	bd80      	pop	{r7, pc}

08001ee8 <_GLOBAL__sub_D_hspi1>:
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	af00      	add	r7, sp, #0
 8001eec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001ef0:	2000      	movs	r0, #0
 8001ef2:	f7ff ffc5 	bl	8001e80 <_Z41__static_initialization_and_destruction_0ii>
 8001ef6:	bd80      	pop	{r7, pc}

08001ef8 <HAL_MspInit>:
 8001ef8:	b480      	push	{r7}
 8001efa:	b085      	sub	sp, #20
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	4b15      	ldr	r3, [pc, #84]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f00:	699b      	ldr	r3, [r3, #24]
 8001f02:	4a14      	ldr	r2, [pc, #80]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f04:	f043 0301 	orr.w	r3, r3, #1
 8001f08:	6193      	str	r3, [r2, #24]
 8001f0a:	4b12      	ldr	r3, [pc, #72]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f0c:	699b      	ldr	r3, [r3, #24]
 8001f0e:	f003 0301 	and.w	r3, r3, #1
 8001f12:	60bb      	str	r3, [r7, #8]
 8001f14:	68bb      	ldr	r3, [r7, #8]
 8001f16:	4b0f      	ldr	r3, [pc, #60]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f18:	69db      	ldr	r3, [r3, #28]
 8001f1a:	4a0e      	ldr	r2, [pc, #56]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f1c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f20:	61d3      	str	r3, [r2, #28]
 8001f22:	4b0c      	ldr	r3, [pc, #48]	; (8001f54 <HAL_MspInit+0x5c>)
 8001f24:	69db      	ldr	r3, [r3, #28]
 8001f26:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f2a:	607b      	str	r3, [r7, #4]
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	4b0a      	ldr	r3, [pc, #40]	; (8001f58 <HAL_MspInit+0x60>)
 8001f30:	685b      	ldr	r3, [r3, #4]
 8001f32:	60fb      	str	r3, [r7, #12]
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001f3a:	60fb      	str	r3, [r7, #12]
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001f42:	60fb      	str	r3, [r7, #12]
 8001f44:	4a04      	ldr	r2, [pc, #16]	; (8001f58 <HAL_MspInit+0x60>)
 8001f46:	68fb      	ldr	r3, [r7, #12]
 8001f48:	6053      	str	r3, [r2, #4]
 8001f4a:	bf00      	nop
 8001f4c:	3714      	adds	r7, #20
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	bc80      	pop	{r7}
 8001f52:	4770      	bx	lr
 8001f54:	40021000 	.word	0x40021000
 8001f58:	40010000 	.word	0x40010000

08001f5c <HAL_SPI_MspInit>:
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	b088      	sub	sp, #32
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	6078      	str	r0, [r7, #4]
 8001f64:	f107 0310 	add.w	r3, r7, #16
 8001f68:	2200      	movs	r2, #0
 8001f6a:	601a      	str	r2, [r3, #0]
 8001f6c:	605a      	str	r2, [r3, #4]
 8001f6e:	609a      	str	r2, [r3, #8]
 8001f70:	60da      	str	r2, [r3, #12]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	4a1f      	ldr	r2, [pc, #124]	; (8001ff4 <HAL_SPI_MspInit+0x98>)
 8001f78:	4293      	cmp	r3, r2
 8001f7a:	d137      	bne.n	8001fec <HAL_SPI_MspInit+0x90>
 8001f7c:	4b1e      	ldr	r3, [pc, #120]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001f7e:	699b      	ldr	r3, [r3, #24]
 8001f80:	4a1d      	ldr	r2, [pc, #116]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001f82:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001f86:	6193      	str	r3, [r2, #24]
 8001f88:	4b1b      	ldr	r3, [pc, #108]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001f8a:	699b      	ldr	r3, [r3, #24]
 8001f8c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001f90:	60fb      	str	r3, [r7, #12]
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	4b18      	ldr	r3, [pc, #96]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001f96:	699b      	ldr	r3, [r3, #24]
 8001f98:	4a17      	ldr	r2, [pc, #92]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001f9a:	f043 0304 	orr.w	r3, r3, #4
 8001f9e:	6193      	str	r3, [r2, #24]
 8001fa0:	4b15      	ldr	r3, [pc, #84]	; (8001ff8 <HAL_SPI_MspInit+0x9c>)
 8001fa2:	699b      	ldr	r3, [r3, #24]
 8001fa4:	f003 0304 	and.w	r3, r3, #4
 8001fa8:	60bb      	str	r3, [r7, #8]
 8001faa:	68bb      	ldr	r3, [r7, #8]
 8001fac:	23a0      	movs	r3, #160	; 0xa0
 8001fae:	613b      	str	r3, [r7, #16]
 8001fb0:	2302      	movs	r3, #2
 8001fb2:	617b      	str	r3, [r7, #20]
 8001fb4:	2303      	movs	r3, #3
 8001fb6:	61fb      	str	r3, [r7, #28]
 8001fb8:	f107 0310 	add.w	r3, r7, #16
 8001fbc:	4619      	mov	r1, r3
 8001fbe:	480f      	ldr	r0, [pc, #60]	; (8001ffc <HAL_SPI_MspInit+0xa0>)
 8001fc0:	f000 fd9e 	bl	8002b00 <HAL_GPIO_Init>
 8001fc4:	2340      	movs	r3, #64	; 0x40
 8001fc6:	613b      	str	r3, [r7, #16]
 8001fc8:	2300      	movs	r3, #0
 8001fca:	617b      	str	r3, [r7, #20]
 8001fcc:	2300      	movs	r3, #0
 8001fce:	61bb      	str	r3, [r7, #24]
 8001fd0:	f107 0310 	add.w	r3, r7, #16
 8001fd4:	4619      	mov	r1, r3
 8001fd6:	4809      	ldr	r0, [pc, #36]	; (8001ffc <HAL_SPI_MspInit+0xa0>)
 8001fd8:	f000 fd92 	bl	8002b00 <HAL_GPIO_Init>
 8001fdc:	2200      	movs	r2, #0
 8001fde:	2100      	movs	r1, #0
 8001fe0:	2023      	movs	r0, #35	; 0x23
 8001fe2:	f000 faa6 	bl	8002532 <HAL_NVIC_SetPriority>
 8001fe6:	2023      	movs	r0, #35	; 0x23
 8001fe8:	f000 fabf 	bl	800256a <HAL_NVIC_EnableIRQ>
 8001fec:	bf00      	nop
 8001fee:	3720      	adds	r7, #32
 8001ff0:	46bd      	mov	sp, r7
 8001ff2:	bd80      	pop	{r7, pc}
 8001ff4:	40013000 	.word	0x40013000
 8001ff8:	40021000 	.word	0x40021000
 8001ffc:	40010800 	.word	0x40010800

08002000 <HAL_TIM_Base_MspInit>:
 8002000:	b580      	push	{r7, lr}
 8002002:	b086      	sub	sp, #24
 8002004:	af00      	add	r7, sp, #0
 8002006:	6078      	str	r0, [r7, #4]
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002010:	d114      	bne.n	800203c <HAL_TIM_Base_MspInit+0x3c>
 8002012:	4b26      	ldr	r3, [pc, #152]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002014:	69db      	ldr	r3, [r3, #28]
 8002016:	4a25      	ldr	r2, [pc, #148]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002018:	f043 0301 	orr.w	r3, r3, #1
 800201c:	61d3      	str	r3, [r2, #28]
 800201e:	4b23      	ldr	r3, [pc, #140]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002020:	69db      	ldr	r3, [r3, #28]
 8002022:	f003 0301 	and.w	r3, r3, #1
 8002026:	617b      	str	r3, [r7, #20]
 8002028:	697b      	ldr	r3, [r7, #20]
 800202a:	2200      	movs	r2, #0
 800202c:	2100      	movs	r1, #0
 800202e:	201c      	movs	r0, #28
 8002030:	f000 fa7f 	bl	8002532 <HAL_NVIC_SetPriority>
 8002034:	201c      	movs	r0, #28
 8002036:	f000 fa98 	bl	800256a <HAL_NVIC_EnableIRQ>
 800203a:	e032      	b.n	80020a2 <HAL_TIM_Base_MspInit+0xa2>
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	4a1b      	ldr	r2, [pc, #108]	; (80020b0 <HAL_TIM_Base_MspInit+0xb0>)
 8002042:	4293      	cmp	r3, r2
 8002044:	d114      	bne.n	8002070 <HAL_TIM_Base_MspInit+0x70>
 8002046:	4b19      	ldr	r3, [pc, #100]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002048:	69db      	ldr	r3, [r3, #28]
 800204a:	4a18      	ldr	r2, [pc, #96]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 800204c:	f043 0302 	orr.w	r3, r3, #2
 8002050:	61d3      	str	r3, [r2, #28]
 8002052:	4b16      	ldr	r3, [pc, #88]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002054:	69db      	ldr	r3, [r3, #28]
 8002056:	f003 0302 	and.w	r3, r3, #2
 800205a:	613b      	str	r3, [r7, #16]
 800205c:	693b      	ldr	r3, [r7, #16]
 800205e:	2200      	movs	r2, #0
 8002060:	2100      	movs	r1, #0
 8002062:	201d      	movs	r0, #29
 8002064:	f000 fa65 	bl	8002532 <HAL_NVIC_SetPriority>
 8002068:	201d      	movs	r0, #29
 800206a:	f000 fa7e 	bl	800256a <HAL_NVIC_EnableIRQ>
 800206e:	e018      	b.n	80020a2 <HAL_TIM_Base_MspInit+0xa2>
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	4a0f      	ldr	r2, [pc, #60]	; (80020b4 <HAL_TIM_Base_MspInit+0xb4>)
 8002076:	4293      	cmp	r3, r2
 8002078:	d113      	bne.n	80020a2 <HAL_TIM_Base_MspInit+0xa2>
 800207a:	4b0c      	ldr	r3, [pc, #48]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 800207c:	69db      	ldr	r3, [r3, #28]
 800207e:	4a0b      	ldr	r2, [pc, #44]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002080:	f043 0304 	orr.w	r3, r3, #4
 8002084:	61d3      	str	r3, [r2, #28]
 8002086:	4b09      	ldr	r3, [pc, #36]	; (80020ac <HAL_TIM_Base_MspInit+0xac>)
 8002088:	69db      	ldr	r3, [r3, #28]
 800208a:	f003 0304 	and.w	r3, r3, #4
 800208e:	60fb      	str	r3, [r7, #12]
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	2200      	movs	r2, #0
 8002094:	2100      	movs	r1, #0
 8002096:	201e      	movs	r0, #30
 8002098:	f000 fa4b 	bl	8002532 <HAL_NVIC_SetPriority>
 800209c:	201e      	movs	r0, #30
 800209e:	f000 fa64 	bl	800256a <HAL_NVIC_EnableIRQ>
 80020a2:	bf00      	nop
 80020a4:	3718      	adds	r7, #24
 80020a6:	46bd      	mov	sp, r7
 80020a8:	bd80      	pop	{r7, pc}
 80020aa:	bf00      	nop
 80020ac:	40021000 	.word	0x40021000
 80020b0:	40000400 	.word	0x40000400
 80020b4:	40000800 	.word	0x40000800

080020b8 <HAL_UART_MspInit>:
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b088      	sub	sp, #32
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
 80020c0:	f107 0310 	add.w	r3, r7, #16
 80020c4:	2200      	movs	r2, #0
 80020c6:	601a      	str	r2, [r3, #0]
 80020c8:	605a      	str	r2, [r3, #4]
 80020ca:	609a      	str	r2, [r3, #8]
 80020cc:	60da      	str	r2, [r3, #12]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	4a20      	ldr	r2, [pc, #128]	; (8002154 <HAL_UART_MspInit+0x9c>)
 80020d4:	4293      	cmp	r3, r2
 80020d6:	d139      	bne.n	800214c <HAL_UART_MspInit+0x94>
 80020d8:	4b1f      	ldr	r3, [pc, #124]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020da:	699b      	ldr	r3, [r3, #24]
 80020dc:	4a1e      	ldr	r2, [pc, #120]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020de:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80020e2:	6193      	str	r3, [r2, #24]
 80020e4:	4b1c      	ldr	r3, [pc, #112]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020e6:	699b      	ldr	r3, [r3, #24]
 80020e8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80020ec:	60fb      	str	r3, [r7, #12]
 80020ee:	68fb      	ldr	r3, [r7, #12]
 80020f0:	4b19      	ldr	r3, [pc, #100]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020f2:	699b      	ldr	r3, [r3, #24]
 80020f4:	4a18      	ldr	r2, [pc, #96]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020f6:	f043 0304 	orr.w	r3, r3, #4
 80020fa:	6193      	str	r3, [r2, #24]
 80020fc:	4b16      	ldr	r3, [pc, #88]	; (8002158 <HAL_UART_MspInit+0xa0>)
 80020fe:	699b      	ldr	r3, [r3, #24]
 8002100:	f003 0304 	and.w	r3, r3, #4
 8002104:	60bb      	str	r3, [r7, #8]
 8002106:	68bb      	ldr	r3, [r7, #8]
 8002108:	f44f 7300 	mov.w	r3, #512	; 0x200
 800210c:	613b      	str	r3, [r7, #16]
 800210e:	2302      	movs	r3, #2
 8002110:	617b      	str	r3, [r7, #20]
 8002112:	2303      	movs	r3, #3
 8002114:	61fb      	str	r3, [r7, #28]
 8002116:	f107 0310 	add.w	r3, r7, #16
 800211a:	4619      	mov	r1, r3
 800211c:	480f      	ldr	r0, [pc, #60]	; (800215c <HAL_UART_MspInit+0xa4>)
 800211e:	f000 fcef 	bl	8002b00 <HAL_GPIO_Init>
 8002122:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002126:	613b      	str	r3, [r7, #16]
 8002128:	2300      	movs	r3, #0
 800212a:	617b      	str	r3, [r7, #20]
 800212c:	2300      	movs	r3, #0
 800212e:	61bb      	str	r3, [r7, #24]
 8002130:	f107 0310 	add.w	r3, r7, #16
 8002134:	4619      	mov	r1, r3
 8002136:	4809      	ldr	r0, [pc, #36]	; (800215c <HAL_UART_MspInit+0xa4>)
 8002138:	f000 fce2 	bl	8002b00 <HAL_GPIO_Init>
 800213c:	2200      	movs	r2, #0
 800213e:	2100      	movs	r1, #0
 8002140:	2025      	movs	r0, #37	; 0x25
 8002142:	f000 f9f6 	bl	8002532 <HAL_NVIC_SetPriority>
 8002146:	2025      	movs	r0, #37	; 0x25
 8002148:	f000 fa0f 	bl	800256a <HAL_NVIC_EnableIRQ>
 800214c:	bf00      	nop
 800214e:	3720      	adds	r7, #32
 8002150:	46bd      	mov	sp, r7
 8002152:	bd80      	pop	{r7, pc}
 8002154:	40013800 	.word	0x40013800
 8002158:	40021000 	.word	0x40021000
 800215c:	40010800 	.word	0x40010800

08002160 <NMI_Handler>:
 8002160:	b480      	push	{r7}
 8002162:	af00      	add	r7, sp, #0
 8002164:	e7fe      	b.n	8002164 <NMI_Handler+0x4>

08002166 <HardFault_Handler>:
 8002166:	b480      	push	{r7}
 8002168:	af00      	add	r7, sp, #0
 800216a:	e7fe      	b.n	800216a <HardFault_Handler+0x4>

0800216c <MemManage_Handler>:
 800216c:	b480      	push	{r7}
 800216e:	af00      	add	r7, sp, #0
 8002170:	e7fe      	b.n	8002170 <MemManage_Handler+0x4>

08002172 <BusFault_Handler>:
 8002172:	b480      	push	{r7}
 8002174:	af00      	add	r7, sp, #0
 8002176:	e7fe      	b.n	8002176 <BusFault_Handler+0x4>

08002178 <UsageFault_Handler>:
 8002178:	b480      	push	{r7}
 800217a:	af00      	add	r7, sp, #0
 800217c:	e7fe      	b.n	800217c <UsageFault_Handler+0x4>

0800217e <SVC_Handler>:
 800217e:	b480      	push	{r7}
 8002180:	af00      	add	r7, sp, #0
 8002182:	bf00      	nop
 8002184:	46bd      	mov	sp, r7
 8002186:	bc80      	pop	{r7}
 8002188:	4770      	bx	lr

0800218a <DebugMon_Handler>:
 800218a:	b480      	push	{r7}
 800218c:	af00      	add	r7, sp, #0
 800218e:	bf00      	nop
 8002190:	46bd      	mov	sp, r7
 8002192:	bc80      	pop	{r7}
 8002194:	4770      	bx	lr

08002196 <PendSV_Handler>:
 8002196:	b480      	push	{r7}
 8002198:	af00      	add	r7, sp, #0
 800219a:	bf00      	nop
 800219c:	46bd      	mov	sp, r7
 800219e:	bc80      	pop	{r7}
 80021a0:	4770      	bx	lr

080021a2 <SysTick_Handler>:
 80021a2:	b580      	push	{r7, lr}
 80021a4:	af00      	add	r7, sp, #0
 80021a6:	f000 f8ad 	bl	8002304 <HAL_IncTick>
 80021aa:	bf00      	nop
 80021ac:	bd80      	pop	{r7, pc}

080021ae <EXTI4_IRQHandler>:
 80021ae:	b580      	push	{r7, lr}
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	2010      	movs	r0, #16
 80021b4:	f000 fe40 	bl	8002e38 <HAL_GPIO_EXTI_IRQHandler>
 80021b8:	bf00      	nop
 80021ba:	bd80      	pop	{r7, pc}

080021bc <TIM2_IRQHandler>:
 80021bc:	b580      	push	{r7, lr}
 80021be:	af00      	add	r7, sp, #0
 80021c0:	4802      	ldr	r0, [pc, #8]	; (80021cc <TIM2_IRQHandler+0x10>)
 80021c2:	f002 f841 	bl	8004248 <HAL_TIM_IRQHandler>
 80021c6:	bf00      	nop
 80021c8:	bd80      	pop	{r7, pc}
 80021ca:	bf00      	nop
 80021cc:	2000068c 	.word	0x2000068c

080021d0 <TIM3_IRQHandler>:
 80021d0:	b580      	push	{r7, lr}
 80021d2:	af00      	add	r7, sp, #0
 80021d4:	4802      	ldr	r0, [pc, #8]	; (80021e0 <TIM3_IRQHandler+0x10>)
 80021d6:	f002 f837 	bl	8004248 <HAL_TIM_IRQHandler>
 80021da:	bf00      	nop
 80021dc:	bd80      	pop	{r7, pc}
 80021de:	bf00      	nop
 80021e0:	200006d4 	.word	0x200006d4

080021e4 <TIM4_IRQHandler>:
 80021e4:	b580      	push	{r7, lr}
 80021e6:	af00      	add	r7, sp, #0
 80021e8:	4802      	ldr	r0, [pc, #8]	; (80021f4 <TIM4_IRQHandler+0x10>)
 80021ea:	f002 f82d 	bl	8004248 <HAL_TIM_IRQHandler>
 80021ee:	bf00      	nop
 80021f0:	bd80      	pop	{r7, pc}
 80021f2:	bf00      	nop
 80021f4:	2000071c 	.word	0x2000071c

080021f8 <SPI1_IRQHandler>:
 80021f8:	b580      	push	{r7, lr}
 80021fa:	af00      	add	r7, sp, #0
 80021fc:	4802      	ldr	r0, [pc, #8]	; (8002208 <SPI1_IRQHandler+0x10>)
 80021fe:	f001 fdb1 	bl	8003d64 <HAL_SPI_IRQHandler>
 8002202:	bf00      	nop
 8002204:	bd80      	pop	{r7, pc}
 8002206:	bf00      	nop
 8002208:	20000634 	.word	0x20000634

0800220c <USART1_IRQHandler>:
 800220c:	b580      	push	{r7, lr}
 800220e:	af00      	add	r7, sp, #0
 8002210:	4802      	ldr	r0, [pc, #8]	; (800221c <USART1_IRQHandler+0x10>)
 8002212:	f002 fc33 	bl	8004a7c <HAL_UART_IRQHandler>
 8002216:	bf00      	nop
 8002218:	bd80      	pop	{r7, pc}
 800221a:	bf00      	nop
 800221c:	20000764 	.word	0x20000764

08002220 <SystemInit>:
 8002220:	b480      	push	{r7}
 8002222:	af00      	add	r7, sp, #0
 8002224:	bf00      	nop
 8002226:	46bd      	mov	sp, r7
 8002228:	bc80      	pop	{r7}
 800222a:	4770      	bx	lr

0800222c <Reset_Handler>:
 800222c:	480c      	ldr	r0, [pc, #48]	; (8002260 <LoopFillZerobss+0x12>)
 800222e:	490d      	ldr	r1, [pc, #52]	; (8002264 <LoopFillZerobss+0x16>)
 8002230:	4a0d      	ldr	r2, [pc, #52]	; (8002268 <LoopFillZerobss+0x1a>)
 8002232:	2300      	movs	r3, #0
 8002234:	e002      	b.n	800223c <LoopCopyDataInit>

08002236 <CopyDataInit>:
 8002236:	58d4      	ldr	r4, [r2, r3]
 8002238:	50c4      	str	r4, [r0, r3]
 800223a:	3304      	adds	r3, #4

0800223c <LoopCopyDataInit>:
 800223c:	18c4      	adds	r4, r0, r3
 800223e:	428c      	cmp	r4, r1
 8002240:	d3f9      	bcc.n	8002236 <CopyDataInit>
 8002242:	4a0a      	ldr	r2, [pc, #40]	; (800226c <LoopFillZerobss+0x1e>)
 8002244:	4c0a      	ldr	r4, [pc, #40]	; (8002270 <LoopFillZerobss+0x22>)
 8002246:	2300      	movs	r3, #0
 8002248:	e001      	b.n	800224e <LoopFillZerobss>

0800224a <FillZerobss>:
 800224a:	6013      	str	r3, [r2, #0]
 800224c:	3204      	adds	r2, #4

0800224e <LoopFillZerobss>:
 800224e:	42a2      	cmp	r2, r4
 8002250:	d3fb      	bcc.n	800224a <FillZerobss>
 8002252:	f7ff ffe5 	bl	8002220 <SystemInit>
 8002256:	f003 f80d 	bl	8005274 <__libc_init_array>
 800225a:	f7fe fecb 	bl	8000ff4 <main>
 800225e:	4770      	bx	lr
 8002260:	20000000 	.word	0x20000000
 8002264:	200004dc 	.word	0x200004dc
 8002268:	0800552c 	.word	0x0800552c
 800226c:	200004e0 	.word	0x200004e0
 8002270:	200025e8 	.word	0x200025e8

08002274 <ADC1_2_IRQHandler>:
 8002274:	e7fe      	b.n	8002274 <ADC1_2_IRQHandler>
	...

08002278 <HAL_Init>:
 8002278:	b580      	push	{r7, lr}
 800227a:	af00      	add	r7, sp, #0
 800227c:	4b08      	ldr	r3, [pc, #32]	; (80022a0 <HAL_Init+0x28>)
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	4a07      	ldr	r2, [pc, #28]	; (80022a0 <HAL_Init+0x28>)
 8002282:	f043 0310 	orr.w	r3, r3, #16
 8002286:	6013      	str	r3, [r2, #0]
 8002288:	2003      	movs	r0, #3
 800228a:	f000 f947 	bl	800251c <HAL_NVIC_SetPriorityGrouping>
 800228e:	200f      	movs	r0, #15
 8002290:	f000 f808 	bl	80022a4 <HAL_InitTick>
 8002294:	f7ff fe30 	bl	8001ef8 <HAL_MspInit>
 8002298:	2300      	movs	r3, #0
 800229a:	4618      	mov	r0, r3
 800229c:	bd80      	pop	{r7, pc}
 800229e:	bf00      	nop
 80022a0:	40022000 	.word	0x40022000

080022a4 <HAL_InitTick>:
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b082      	sub	sp, #8
 80022a8:	af00      	add	r7, sp, #0
 80022aa:	6078      	str	r0, [r7, #4]
 80022ac:	4b12      	ldr	r3, [pc, #72]	; (80022f8 <HAL_InitTick+0x54>)
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	4b12      	ldr	r3, [pc, #72]	; (80022fc <HAL_InitTick+0x58>)
 80022b2:	781b      	ldrb	r3, [r3, #0]
 80022b4:	4619      	mov	r1, r3
 80022b6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80022ba:	fbb3 f3f1 	udiv	r3, r3, r1
 80022be:	fbb2 f3f3 	udiv	r3, r2, r3
 80022c2:	4618      	mov	r0, r3
 80022c4:	f000 f95f 	bl	8002586 <HAL_SYSTICK_Config>
 80022c8:	4603      	mov	r3, r0
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d001      	beq.n	80022d2 <HAL_InitTick+0x2e>
 80022ce:	2301      	movs	r3, #1
 80022d0:	e00e      	b.n	80022f0 <HAL_InitTick+0x4c>
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	2b0f      	cmp	r3, #15
 80022d6:	d80a      	bhi.n	80022ee <HAL_InitTick+0x4a>
 80022d8:	2200      	movs	r2, #0
 80022da:	6879      	ldr	r1, [r7, #4]
 80022dc:	f04f 30ff 	mov.w	r0, #4294967295
 80022e0:	f000 f927 	bl	8002532 <HAL_NVIC_SetPriority>
 80022e4:	4a06      	ldr	r2, [pc, #24]	; (8002300 <HAL_InitTick+0x5c>)
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	6013      	str	r3, [r2, #0]
 80022ea:	2300      	movs	r3, #0
 80022ec:	e000      	b.n	80022f0 <HAL_InitTick+0x4c>
 80022ee:	2301      	movs	r3, #1
 80022f0:	4618      	mov	r0, r3
 80022f2:	3708      	adds	r7, #8
 80022f4:	46bd      	mov	sp, r7
 80022f6:	bd80      	pop	{r7, pc}
 80022f8:	2000046c 	.word	0x2000046c
 80022fc:	20000474 	.word	0x20000474
 8002300:	20000470 	.word	0x20000470

08002304 <HAL_IncTick>:
 8002304:	b480      	push	{r7}
 8002306:	af00      	add	r7, sp, #0
 8002308:	4b05      	ldr	r3, [pc, #20]	; (8002320 <HAL_IncTick+0x1c>)
 800230a:	781b      	ldrb	r3, [r3, #0]
 800230c:	461a      	mov	r2, r3
 800230e:	4b05      	ldr	r3, [pc, #20]	; (8002324 <HAL_IncTick+0x20>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4413      	add	r3, r2
 8002314:	4a03      	ldr	r2, [pc, #12]	; (8002324 <HAL_IncTick+0x20>)
 8002316:	6013      	str	r3, [r2, #0]
 8002318:	bf00      	nop
 800231a:	46bd      	mov	sp, r7
 800231c:	bc80      	pop	{r7}
 800231e:	4770      	bx	lr
 8002320:	20000474 	.word	0x20000474
 8002324:	200025c0 	.word	0x200025c0

08002328 <HAL_GetTick>:
 8002328:	b480      	push	{r7}
 800232a:	af00      	add	r7, sp, #0
 800232c:	4b02      	ldr	r3, [pc, #8]	; (8002338 <HAL_GetTick+0x10>)
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	4618      	mov	r0, r3
 8002332:	46bd      	mov	sp, r7
 8002334:	bc80      	pop	{r7}
 8002336:	4770      	bx	lr
 8002338:	200025c0 	.word	0x200025c0

0800233c <HAL_Delay>:
 800233c:	b580      	push	{r7, lr}
 800233e:	b084      	sub	sp, #16
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
 8002344:	f7ff fff0 	bl	8002328 <HAL_GetTick>
 8002348:	60b8      	str	r0, [r7, #8]
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	60fb      	str	r3, [r7, #12]
 800234e:	68fb      	ldr	r3, [r7, #12]
 8002350:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002354:	d005      	beq.n	8002362 <HAL_Delay+0x26>
 8002356:	4b0a      	ldr	r3, [pc, #40]	; (8002380 <HAL_Delay+0x44>)
 8002358:	781b      	ldrb	r3, [r3, #0]
 800235a:	461a      	mov	r2, r3
 800235c:	68fb      	ldr	r3, [r7, #12]
 800235e:	4413      	add	r3, r2
 8002360:	60fb      	str	r3, [r7, #12]
 8002362:	bf00      	nop
 8002364:	f7ff ffe0 	bl	8002328 <HAL_GetTick>
 8002368:	4602      	mov	r2, r0
 800236a:	68bb      	ldr	r3, [r7, #8]
 800236c:	1ad3      	subs	r3, r2, r3
 800236e:	68fa      	ldr	r2, [r7, #12]
 8002370:	429a      	cmp	r2, r3
 8002372:	d8f7      	bhi.n	8002364 <HAL_Delay+0x28>
 8002374:	bf00      	nop
 8002376:	bf00      	nop
 8002378:	3710      	adds	r7, #16
 800237a:	46bd      	mov	sp, r7
 800237c:	bd80      	pop	{r7, pc}
 800237e:	bf00      	nop
 8002380:	20000474 	.word	0x20000474

08002384 <__NVIC_SetPriorityGrouping>:
 8002384:	b480      	push	{r7}
 8002386:	b085      	sub	sp, #20
 8002388:	af00      	add	r7, sp, #0
 800238a:	6078      	str	r0, [r7, #4]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	f003 0307 	and.w	r3, r3, #7
 8002392:	60fb      	str	r3, [r7, #12]
 8002394:	4b0c      	ldr	r3, [pc, #48]	; (80023c8 <__NVIC_SetPriorityGrouping+0x44>)
 8002396:	68db      	ldr	r3, [r3, #12]
 8002398:	60bb      	str	r3, [r7, #8]
 800239a:	68ba      	ldr	r2, [r7, #8]
 800239c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80023a0:	4013      	ands	r3, r2
 80023a2:	60bb      	str	r3, [r7, #8]
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	021a      	lsls	r2, r3, #8
 80023a8:	68bb      	ldr	r3, [r7, #8]
 80023aa:	4313      	orrs	r3, r2
 80023ac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80023b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80023b4:	60bb      	str	r3, [r7, #8]
 80023b6:	4a04      	ldr	r2, [pc, #16]	; (80023c8 <__NVIC_SetPriorityGrouping+0x44>)
 80023b8:	68bb      	ldr	r3, [r7, #8]
 80023ba:	60d3      	str	r3, [r2, #12]
 80023bc:	bf00      	nop
 80023be:	3714      	adds	r7, #20
 80023c0:	46bd      	mov	sp, r7
 80023c2:	bc80      	pop	{r7}
 80023c4:	4770      	bx	lr
 80023c6:	bf00      	nop
 80023c8:	e000ed00 	.word	0xe000ed00

080023cc <__NVIC_GetPriorityGrouping>:
 80023cc:	b480      	push	{r7}
 80023ce:	af00      	add	r7, sp, #0
 80023d0:	4b04      	ldr	r3, [pc, #16]	; (80023e4 <__NVIC_GetPriorityGrouping+0x18>)
 80023d2:	68db      	ldr	r3, [r3, #12]
 80023d4:	0a1b      	lsrs	r3, r3, #8
 80023d6:	f003 0307 	and.w	r3, r3, #7
 80023da:	4618      	mov	r0, r3
 80023dc:	46bd      	mov	sp, r7
 80023de:	bc80      	pop	{r7}
 80023e0:	4770      	bx	lr
 80023e2:	bf00      	nop
 80023e4:	e000ed00 	.word	0xe000ed00

080023e8 <__NVIC_EnableIRQ>:
 80023e8:	b480      	push	{r7}
 80023ea:	b083      	sub	sp, #12
 80023ec:	af00      	add	r7, sp, #0
 80023ee:	4603      	mov	r3, r0
 80023f0:	71fb      	strb	r3, [r7, #7]
 80023f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	db0b      	blt.n	8002412 <__NVIC_EnableIRQ+0x2a>
 80023fa:	79fb      	ldrb	r3, [r7, #7]
 80023fc:	f003 021f 	and.w	r2, r3, #31
 8002400:	4906      	ldr	r1, [pc, #24]	; (800241c <__NVIC_EnableIRQ+0x34>)
 8002402:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002406:	095b      	lsrs	r3, r3, #5
 8002408:	2001      	movs	r0, #1
 800240a:	fa00 f202 	lsl.w	r2, r0, r2
 800240e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002412:	bf00      	nop
 8002414:	370c      	adds	r7, #12
 8002416:	46bd      	mov	sp, r7
 8002418:	bc80      	pop	{r7}
 800241a:	4770      	bx	lr
 800241c:	e000e100 	.word	0xe000e100

08002420 <__NVIC_SetPriority>:
 8002420:	b480      	push	{r7}
 8002422:	b083      	sub	sp, #12
 8002424:	af00      	add	r7, sp, #0
 8002426:	4603      	mov	r3, r0
 8002428:	6039      	str	r1, [r7, #0]
 800242a:	71fb      	strb	r3, [r7, #7]
 800242c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002430:	2b00      	cmp	r3, #0
 8002432:	db0a      	blt.n	800244a <__NVIC_SetPriority+0x2a>
 8002434:	683b      	ldr	r3, [r7, #0]
 8002436:	b2da      	uxtb	r2, r3
 8002438:	490c      	ldr	r1, [pc, #48]	; (800246c <__NVIC_SetPriority+0x4c>)
 800243a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800243e:	0112      	lsls	r2, r2, #4
 8002440:	b2d2      	uxtb	r2, r2
 8002442:	440b      	add	r3, r1
 8002444:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002448:	e00a      	b.n	8002460 <__NVIC_SetPriority+0x40>
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	b2da      	uxtb	r2, r3
 800244e:	4908      	ldr	r1, [pc, #32]	; (8002470 <__NVIC_SetPriority+0x50>)
 8002450:	79fb      	ldrb	r3, [r7, #7]
 8002452:	f003 030f 	and.w	r3, r3, #15
 8002456:	3b04      	subs	r3, #4
 8002458:	0112      	lsls	r2, r2, #4
 800245a:	b2d2      	uxtb	r2, r2
 800245c:	440b      	add	r3, r1
 800245e:	761a      	strb	r2, [r3, #24]
 8002460:	bf00      	nop
 8002462:	370c      	adds	r7, #12
 8002464:	46bd      	mov	sp, r7
 8002466:	bc80      	pop	{r7}
 8002468:	4770      	bx	lr
 800246a:	bf00      	nop
 800246c:	e000e100 	.word	0xe000e100
 8002470:	e000ed00 	.word	0xe000ed00

08002474 <NVIC_EncodePriority>:
 8002474:	b480      	push	{r7}
 8002476:	b089      	sub	sp, #36	; 0x24
 8002478:	af00      	add	r7, sp, #0
 800247a:	60f8      	str	r0, [r7, #12]
 800247c:	60b9      	str	r1, [r7, #8]
 800247e:	607a      	str	r2, [r7, #4]
 8002480:	68fb      	ldr	r3, [r7, #12]
 8002482:	f003 0307 	and.w	r3, r3, #7
 8002486:	61fb      	str	r3, [r7, #28]
 8002488:	69fb      	ldr	r3, [r7, #28]
 800248a:	f1c3 0307 	rsb	r3, r3, #7
 800248e:	2b04      	cmp	r3, #4
 8002490:	bf28      	it	cs
 8002492:	2304      	movcs	r3, #4
 8002494:	61bb      	str	r3, [r7, #24]
 8002496:	69fb      	ldr	r3, [r7, #28]
 8002498:	3304      	adds	r3, #4
 800249a:	2b06      	cmp	r3, #6
 800249c:	d902      	bls.n	80024a4 <NVIC_EncodePriority+0x30>
 800249e:	69fb      	ldr	r3, [r7, #28]
 80024a0:	3b03      	subs	r3, #3
 80024a2:	e000      	b.n	80024a6 <NVIC_EncodePriority+0x32>
 80024a4:	2300      	movs	r3, #0
 80024a6:	617b      	str	r3, [r7, #20]
 80024a8:	f04f 32ff 	mov.w	r2, #4294967295
 80024ac:	69bb      	ldr	r3, [r7, #24]
 80024ae:	fa02 f303 	lsl.w	r3, r2, r3
 80024b2:	43da      	mvns	r2, r3
 80024b4:	68bb      	ldr	r3, [r7, #8]
 80024b6:	401a      	ands	r2, r3
 80024b8:	697b      	ldr	r3, [r7, #20]
 80024ba:	409a      	lsls	r2, r3
 80024bc:	f04f 31ff 	mov.w	r1, #4294967295
 80024c0:	697b      	ldr	r3, [r7, #20]
 80024c2:	fa01 f303 	lsl.w	r3, r1, r3
 80024c6:	43d9      	mvns	r1, r3
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	400b      	ands	r3, r1
 80024cc:	4313      	orrs	r3, r2
 80024ce:	4618      	mov	r0, r3
 80024d0:	3724      	adds	r7, #36	; 0x24
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bc80      	pop	{r7}
 80024d6:	4770      	bx	lr

080024d8 <SysTick_Config>:
 80024d8:	b580      	push	{r7, lr}
 80024da:	b082      	sub	sp, #8
 80024dc:	af00      	add	r7, sp, #0
 80024de:	6078      	str	r0, [r7, #4]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	3b01      	subs	r3, #1
 80024e4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80024e8:	d301      	bcc.n	80024ee <SysTick_Config+0x16>
 80024ea:	2301      	movs	r3, #1
 80024ec:	e00f      	b.n	800250e <SysTick_Config+0x36>
 80024ee:	4a0a      	ldr	r2, [pc, #40]	; (8002518 <SysTick_Config+0x40>)
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	3b01      	subs	r3, #1
 80024f4:	6053      	str	r3, [r2, #4]
 80024f6:	210f      	movs	r1, #15
 80024f8:	f04f 30ff 	mov.w	r0, #4294967295
 80024fc:	f7ff ff90 	bl	8002420 <__NVIC_SetPriority>
 8002500:	4b05      	ldr	r3, [pc, #20]	; (8002518 <SysTick_Config+0x40>)
 8002502:	2200      	movs	r2, #0
 8002504:	609a      	str	r2, [r3, #8]
 8002506:	4b04      	ldr	r3, [pc, #16]	; (8002518 <SysTick_Config+0x40>)
 8002508:	2207      	movs	r2, #7
 800250a:	601a      	str	r2, [r3, #0]
 800250c:	2300      	movs	r3, #0
 800250e:	4618      	mov	r0, r3
 8002510:	3708      	adds	r7, #8
 8002512:	46bd      	mov	sp, r7
 8002514:	bd80      	pop	{r7, pc}
 8002516:	bf00      	nop
 8002518:	e000e010 	.word	0xe000e010

0800251c <HAL_NVIC_SetPriorityGrouping>:
 800251c:	b580      	push	{r7, lr}
 800251e:	b082      	sub	sp, #8
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	6878      	ldr	r0, [r7, #4]
 8002526:	f7ff ff2d 	bl	8002384 <__NVIC_SetPriorityGrouping>
 800252a:	bf00      	nop
 800252c:	3708      	adds	r7, #8
 800252e:	46bd      	mov	sp, r7
 8002530:	bd80      	pop	{r7, pc}

08002532 <HAL_NVIC_SetPriority>:
 8002532:	b580      	push	{r7, lr}
 8002534:	b086      	sub	sp, #24
 8002536:	af00      	add	r7, sp, #0
 8002538:	4603      	mov	r3, r0
 800253a:	60b9      	str	r1, [r7, #8]
 800253c:	607a      	str	r2, [r7, #4]
 800253e:	73fb      	strb	r3, [r7, #15]
 8002540:	2300      	movs	r3, #0
 8002542:	617b      	str	r3, [r7, #20]
 8002544:	f7ff ff42 	bl	80023cc <__NVIC_GetPriorityGrouping>
 8002548:	6178      	str	r0, [r7, #20]
 800254a:	687a      	ldr	r2, [r7, #4]
 800254c:	68b9      	ldr	r1, [r7, #8]
 800254e:	6978      	ldr	r0, [r7, #20]
 8002550:	f7ff ff90 	bl	8002474 <NVIC_EncodePriority>
 8002554:	4602      	mov	r2, r0
 8002556:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800255a:	4611      	mov	r1, r2
 800255c:	4618      	mov	r0, r3
 800255e:	f7ff ff5f 	bl	8002420 <__NVIC_SetPriority>
 8002562:	bf00      	nop
 8002564:	3718      	adds	r7, #24
 8002566:	46bd      	mov	sp, r7
 8002568:	bd80      	pop	{r7, pc}

0800256a <HAL_NVIC_EnableIRQ>:
 800256a:	b580      	push	{r7, lr}
 800256c:	b082      	sub	sp, #8
 800256e:	af00      	add	r7, sp, #0
 8002570:	4603      	mov	r3, r0
 8002572:	71fb      	strb	r3, [r7, #7]
 8002574:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002578:	4618      	mov	r0, r3
 800257a:	f7ff ff35 	bl	80023e8 <__NVIC_EnableIRQ>
 800257e:	bf00      	nop
 8002580:	3708      	adds	r7, #8
 8002582:	46bd      	mov	sp, r7
 8002584:	bd80      	pop	{r7, pc}

08002586 <HAL_SYSTICK_Config>:
 8002586:	b580      	push	{r7, lr}
 8002588:	b082      	sub	sp, #8
 800258a:	af00      	add	r7, sp, #0
 800258c:	6078      	str	r0, [r7, #4]
 800258e:	6878      	ldr	r0, [r7, #4]
 8002590:	f7ff ffa2 	bl	80024d8 <SysTick_Config>
 8002594:	4603      	mov	r3, r0
 8002596:	4618      	mov	r0, r3
 8002598:	3708      	adds	r7, #8
 800259a:	46bd      	mov	sp, r7
 800259c:	bd80      	pop	{r7, pc}

0800259e <HAL_DMA_Abort>:
 800259e:	b480      	push	{r7}
 80025a0:	b085      	sub	sp, #20
 80025a2:	af00      	add	r7, sp, #0
 80025a4:	6078      	str	r0, [r7, #4]
 80025a6:	2300      	movs	r3, #0
 80025a8:	73fb      	strb	r3, [r7, #15]
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80025b0:	2b02      	cmp	r3, #2
 80025b2:	d008      	beq.n	80025c6 <HAL_DMA_Abort+0x28>
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	2204      	movs	r2, #4
 80025b8:	639a      	str	r2, [r3, #56]	; 0x38
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	2200      	movs	r2, #0
 80025be:	f883 2020 	strb.w	r2, [r3, #32]
 80025c2:	2301      	movs	r3, #1
 80025c4:	e020      	b.n	8002608 <HAL_DMA_Abort+0x6a>
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	681a      	ldr	r2, [r3, #0]
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f022 020e 	bic.w	r2, r2, #14
 80025d4:	601a      	str	r2, [r3, #0]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	681a      	ldr	r2, [r3, #0]
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	f022 0201 	bic.w	r2, r2, #1
 80025e4:	601a      	str	r2, [r3, #0]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80025ee:	2101      	movs	r1, #1
 80025f0:	fa01 f202 	lsl.w	r2, r1, r2
 80025f4:	605a      	str	r2, [r3, #4]
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	2201      	movs	r2, #1
 80025fa:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	2200      	movs	r2, #0
 8002602:	f883 2020 	strb.w	r2, [r3, #32]
 8002606:	7bfb      	ldrb	r3, [r7, #15]
 8002608:	4618      	mov	r0, r3
 800260a:	3714      	adds	r7, #20
 800260c:	46bd      	mov	sp, r7
 800260e:	bc80      	pop	{r7}
 8002610:	4770      	bx	lr
	...

08002614 <HAL_DMA_Abort_IT>:
 8002614:	b580      	push	{r7, lr}
 8002616:	b084      	sub	sp, #16
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	2300      	movs	r3, #0
 800261e:	73fb      	strb	r3, [r7, #15]
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002626:	2b02      	cmp	r3, #2
 8002628:	d005      	beq.n	8002636 <HAL_DMA_Abort_IT+0x22>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	2204      	movs	r2, #4
 800262e:	639a      	str	r2, [r3, #56]	; 0x38
 8002630:	2301      	movs	r3, #1
 8002632:	73fb      	strb	r3, [r7, #15]
 8002634:	e051      	b.n	80026da <HAL_DMA_Abort_IT+0xc6>
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	681a      	ldr	r2, [r3, #0]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f022 020e 	bic.w	r2, r2, #14
 8002644:	601a      	str	r2, [r3, #0]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	681a      	ldr	r2, [r3, #0]
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f022 0201 	bic.w	r2, r2, #1
 8002654:	601a      	str	r2, [r3, #0]
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	4a22      	ldr	r2, [pc, #136]	; (80026e4 <HAL_DMA_Abort_IT+0xd0>)
 800265c:	4293      	cmp	r3, r2
 800265e:	d029      	beq.n	80026b4 <HAL_DMA_Abort_IT+0xa0>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	4a20      	ldr	r2, [pc, #128]	; (80026e8 <HAL_DMA_Abort_IT+0xd4>)
 8002666:	4293      	cmp	r3, r2
 8002668:	d022      	beq.n	80026b0 <HAL_DMA_Abort_IT+0x9c>
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	4a1f      	ldr	r2, [pc, #124]	; (80026ec <HAL_DMA_Abort_IT+0xd8>)
 8002670:	4293      	cmp	r3, r2
 8002672:	d01a      	beq.n	80026aa <HAL_DMA_Abort_IT+0x96>
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	4a1d      	ldr	r2, [pc, #116]	; (80026f0 <HAL_DMA_Abort_IT+0xdc>)
 800267a:	4293      	cmp	r3, r2
 800267c:	d012      	beq.n	80026a4 <HAL_DMA_Abort_IT+0x90>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	4a1c      	ldr	r2, [pc, #112]	; (80026f4 <HAL_DMA_Abort_IT+0xe0>)
 8002684:	4293      	cmp	r3, r2
 8002686:	d00a      	beq.n	800269e <HAL_DMA_Abort_IT+0x8a>
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	4a1a      	ldr	r2, [pc, #104]	; (80026f8 <HAL_DMA_Abort_IT+0xe4>)
 800268e:	4293      	cmp	r3, r2
 8002690:	d102      	bne.n	8002698 <HAL_DMA_Abort_IT+0x84>
 8002692:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002696:	e00e      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 8002698:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800269c:	e00b      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 800269e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80026a2:	e008      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 80026a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026a8:	e005      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 80026aa:	f44f 7380 	mov.w	r3, #256	; 0x100
 80026ae:	e002      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 80026b0:	2310      	movs	r3, #16
 80026b2:	e000      	b.n	80026b6 <HAL_DMA_Abort_IT+0xa2>
 80026b4:	2301      	movs	r3, #1
 80026b6:	4a11      	ldr	r2, [pc, #68]	; (80026fc <HAL_DMA_Abort_IT+0xe8>)
 80026b8:	6053      	str	r3, [r2, #4]
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	2201      	movs	r2, #1
 80026be:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	2200      	movs	r2, #0
 80026c6:	f883 2020 	strb.w	r2, [r3, #32]
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80026ce:	2b00      	cmp	r3, #0
 80026d0:	d003      	beq.n	80026da <HAL_DMA_Abort_IT+0xc6>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80026d6:	6878      	ldr	r0, [r7, #4]
 80026d8:	4798      	blx	r3
 80026da:	7bfb      	ldrb	r3, [r7, #15]
 80026dc:	4618      	mov	r0, r3
 80026de:	3710      	adds	r7, #16
 80026e0:	46bd      	mov	sp, r7
 80026e2:	bd80      	pop	{r7, pc}
 80026e4:	40020008 	.word	0x40020008
 80026e8:	4002001c 	.word	0x4002001c
 80026ec:	40020030 	.word	0x40020030
 80026f0:	40020044 	.word	0x40020044
 80026f4:	40020058 	.word	0x40020058
 80026f8:	4002006c 	.word	0x4002006c
 80026fc:	40020000 	.word	0x40020000

08002700 <HAL_FLASH_Program>:
 8002700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002702:	b087      	sub	sp, #28
 8002704:	af00      	add	r7, sp, #0
 8002706:	60f8      	str	r0, [r7, #12]
 8002708:	60b9      	str	r1, [r7, #8]
 800270a:	e9c7 2300 	strd	r2, r3, [r7]
 800270e:	2301      	movs	r3, #1
 8002710:	75fb      	strb	r3, [r7, #23]
 8002712:	2300      	movs	r3, #0
 8002714:	75bb      	strb	r3, [r7, #22]
 8002716:	2300      	movs	r3, #0
 8002718:	757b      	strb	r3, [r7, #21]
 800271a:	4b2f      	ldr	r3, [pc, #188]	; (80027d8 <HAL_FLASH_Program+0xd8>)
 800271c:	7e1b      	ldrb	r3, [r3, #24]
 800271e:	2b01      	cmp	r3, #1
 8002720:	d101      	bne.n	8002726 <HAL_FLASH_Program+0x26>
 8002722:	2302      	movs	r3, #2
 8002724:	e054      	b.n	80027d0 <HAL_FLASH_Program+0xd0>
 8002726:	4b2c      	ldr	r3, [pc, #176]	; (80027d8 <HAL_FLASH_Program+0xd8>)
 8002728:	2201      	movs	r2, #1
 800272a:	761a      	strb	r2, [r3, #24]
 800272c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8002730:	f000 f8a8 	bl	8002884 <FLASH_WaitForLastOperation>
 8002734:	4603      	mov	r3, r0
 8002736:	75fb      	strb	r3, [r7, #23]
 8002738:	7dfb      	ldrb	r3, [r7, #23]
 800273a:	2b00      	cmp	r3, #0
 800273c:	d144      	bne.n	80027c8 <HAL_FLASH_Program+0xc8>
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	2b01      	cmp	r3, #1
 8002742:	d102      	bne.n	800274a <HAL_FLASH_Program+0x4a>
 8002744:	2301      	movs	r3, #1
 8002746:	757b      	strb	r3, [r7, #21]
 8002748:	e007      	b.n	800275a <HAL_FLASH_Program+0x5a>
 800274a:	68fb      	ldr	r3, [r7, #12]
 800274c:	2b02      	cmp	r3, #2
 800274e:	d102      	bne.n	8002756 <HAL_FLASH_Program+0x56>
 8002750:	2302      	movs	r3, #2
 8002752:	757b      	strb	r3, [r7, #21]
 8002754:	e001      	b.n	800275a <HAL_FLASH_Program+0x5a>
 8002756:	2304      	movs	r3, #4
 8002758:	757b      	strb	r3, [r7, #21]
 800275a:	2300      	movs	r3, #0
 800275c:	75bb      	strb	r3, [r7, #22]
 800275e:	e02d      	b.n	80027bc <HAL_FLASH_Program+0xbc>
 8002760:	7dbb      	ldrb	r3, [r7, #22]
 8002762:	005a      	lsls	r2, r3, #1
 8002764:	68bb      	ldr	r3, [r7, #8]
 8002766:	eb02 0c03 	add.w	ip, r2, r3
 800276a:	7dbb      	ldrb	r3, [r7, #22]
 800276c:	0119      	lsls	r1, r3, #4
 800276e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002772:	f1c1 0620 	rsb	r6, r1, #32
 8002776:	f1a1 0020 	sub.w	r0, r1, #32
 800277a:	fa22 f401 	lsr.w	r4, r2, r1
 800277e:	fa03 f606 	lsl.w	r6, r3, r6
 8002782:	4334      	orrs	r4, r6
 8002784:	fa23 f000 	lsr.w	r0, r3, r0
 8002788:	4304      	orrs	r4, r0
 800278a:	fa23 f501 	lsr.w	r5, r3, r1
 800278e:	b2a3      	uxth	r3, r4
 8002790:	4619      	mov	r1, r3
 8002792:	4660      	mov	r0, ip
 8002794:	f000 f85a 	bl	800284c <FLASH_Program_HalfWord>
 8002798:	f24c 3050 	movw	r0, #50000	; 0xc350
 800279c:	f000 f872 	bl	8002884 <FLASH_WaitForLastOperation>
 80027a0:	4603      	mov	r3, r0
 80027a2:	75fb      	strb	r3, [r7, #23]
 80027a4:	4b0d      	ldr	r3, [pc, #52]	; (80027dc <HAL_FLASH_Program+0xdc>)
 80027a6:	691b      	ldr	r3, [r3, #16]
 80027a8:	4a0c      	ldr	r2, [pc, #48]	; (80027dc <HAL_FLASH_Program+0xdc>)
 80027aa:	f023 0301 	bic.w	r3, r3, #1
 80027ae:	6113      	str	r3, [r2, #16]
 80027b0:	7dfb      	ldrb	r3, [r7, #23]
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d107      	bne.n	80027c6 <HAL_FLASH_Program+0xc6>
 80027b6:	7dbb      	ldrb	r3, [r7, #22]
 80027b8:	3301      	adds	r3, #1
 80027ba:	75bb      	strb	r3, [r7, #22]
 80027bc:	7dba      	ldrb	r2, [r7, #22]
 80027be:	7d7b      	ldrb	r3, [r7, #21]
 80027c0:	429a      	cmp	r2, r3
 80027c2:	d3cd      	bcc.n	8002760 <HAL_FLASH_Program+0x60>
 80027c4:	e000      	b.n	80027c8 <HAL_FLASH_Program+0xc8>
 80027c6:	bf00      	nop
 80027c8:	4b03      	ldr	r3, [pc, #12]	; (80027d8 <HAL_FLASH_Program+0xd8>)
 80027ca:	2200      	movs	r2, #0
 80027cc:	761a      	strb	r2, [r3, #24]
 80027ce:	7dfb      	ldrb	r3, [r7, #23]
 80027d0:	4618      	mov	r0, r3
 80027d2:	371c      	adds	r7, #28
 80027d4:	46bd      	mov	sp, r7
 80027d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027d8:	200025c8 	.word	0x200025c8
 80027dc:	40022000 	.word	0x40022000

080027e0 <HAL_FLASH_Unlock>:
 80027e0:	b480      	push	{r7}
 80027e2:	b083      	sub	sp, #12
 80027e4:	af00      	add	r7, sp, #0
 80027e6:	2300      	movs	r3, #0
 80027e8:	71fb      	strb	r3, [r7, #7]
 80027ea:	4b0d      	ldr	r3, [pc, #52]	; (8002820 <HAL_FLASH_Unlock+0x40>)
 80027ec:	691b      	ldr	r3, [r3, #16]
 80027ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d00d      	beq.n	8002812 <HAL_FLASH_Unlock+0x32>
 80027f6:	4b0a      	ldr	r3, [pc, #40]	; (8002820 <HAL_FLASH_Unlock+0x40>)
 80027f8:	4a0a      	ldr	r2, [pc, #40]	; (8002824 <HAL_FLASH_Unlock+0x44>)
 80027fa:	605a      	str	r2, [r3, #4]
 80027fc:	4b08      	ldr	r3, [pc, #32]	; (8002820 <HAL_FLASH_Unlock+0x40>)
 80027fe:	4a0a      	ldr	r2, [pc, #40]	; (8002828 <HAL_FLASH_Unlock+0x48>)
 8002800:	605a      	str	r2, [r3, #4]
 8002802:	4b07      	ldr	r3, [pc, #28]	; (8002820 <HAL_FLASH_Unlock+0x40>)
 8002804:	691b      	ldr	r3, [r3, #16]
 8002806:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800280a:	2b00      	cmp	r3, #0
 800280c:	d001      	beq.n	8002812 <HAL_FLASH_Unlock+0x32>
 800280e:	2301      	movs	r3, #1
 8002810:	71fb      	strb	r3, [r7, #7]
 8002812:	79fb      	ldrb	r3, [r7, #7]
 8002814:	4618      	mov	r0, r3
 8002816:	370c      	adds	r7, #12
 8002818:	46bd      	mov	sp, r7
 800281a:	bc80      	pop	{r7}
 800281c:	4770      	bx	lr
 800281e:	bf00      	nop
 8002820:	40022000 	.word	0x40022000
 8002824:	45670123 	.word	0x45670123
 8002828:	cdef89ab 	.word	0xcdef89ab

0800282c <HAL_FLASH_Lock>:
 800282c:	b480      	push	{r7}
 800282e:	af00      	add	r7, sp, #0
 8002830:	4b05      	ldr	r3, [pc, #20]	; (8002848 <HAL_FLASH_Lock+0x1c>)
 8002832:	691b      	ldr	r3, [r3, #16]
 8002834:	4a04      	ldr	r2, [pc, #16]	; (8002848 <HAL_FLASH_Lock+0x1c>)
 8002836:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800283a:	6113      	str	r3, [r2, #16]
 800283c:	2300      	movs	r3, #0
 800283e:	4618      	mov	r0, r3
 8002840:	46bd      	mov	sp, r7
 8002842:	bc80      	pop	{r7}
 8002844:	4770      	bx	lr
 8002846:	bf00      	nop
 8002848:	40022000 	.word	0x40022000

0800284c <FLASH_Program_HalfWord>:
 800284c:	b480      	push	{r7}
 800284e:	b083      	sub	sp, #12
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]
 8002854:	460b      	mov	r3, r1
 8002856:	807b      	strh	r3, [r7, #2]
 8002858:	4b08      	ldr	r3, [pc, #32]	; (800287c <FLASH_Program_HalfWord+0x30>)
 800285a:	2200      	movs	r2, #0
 800285c:	61da      	str	r2, [r3, #28]
 800285e:	4b08      	ldr	r3, [pc, #32]	; (8002880 <FLASH_Program_HalfWord+0x34>)
 8002860:	691b      	ldr	r3, [r3, #16]
 8002862:	4a07      	ldr	r2, [pc, #28]	; (8002880 <FLASH_Program_HalfWord+0x34>)
 8002864:	f043 0301 	orr.w	r3, r3, #1
 8002868:	6113      	str	r3, [r2, #16]
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	887a      	ldrh	r2, [r7, #2]
 800286e:	801a      	strh	r2, [r3, #0]
 8002870:	bf00      	nop
 8002872:	370c      	adds	r7, #12
 8002874:	46bd      	mov	sp, r7
 8002876:	bc80      	pop	{r7}
 8002878:	4770      	bx	lr
 800287a:	bf00      	nop
 800287c:	200025c8 	.word	0x200025c8
 8002880:	40022000 	.word	0x40022000

08002884 <FLASH_WaitForLastOperation>:
 8002884:	b580      	push	{r7, lr}
 8002886:	b084      	sub	sp, #16
 8002888:	af00      	add	r7, sp, #0
 800288a:	6078      	str	r0, [r7, #4]
 800288c:	f7ff fd4c 	bl	8002328 <HAL_GetTick>
 8002890:	60f8      	str	r0, [r7, #12]
 8002892:	e010      	b.n	80028b6 <FLASH_WaitForLastOperation+0x32>
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	f1b3 3fff 	cmp.w	r3, #4294967295
 800289a:	d00c      	beq.n	80028b6 <FLASH_WaitForLastOperation+0x32>
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	2b00      	cmp	r3, #0
 80028a0:	d007      	beq.n	80028b2 <FLASH_WaitForLastOperation+0x2e>
 80028a2:	f7ff fd41 	bl	8002328 <HAL_GetTick>
 80028a6:	4602      	mov	r2, r0
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	1ad3      	subs	r3, r2, r3
 80028ac:	687a      	ldr	r2, [r7, #4]
 80028ae:	429a      	cmp	r2, r3
 80028b0:	d201      	bcs.n	80028b6 <FLASH_WaitForLastOperation+0x32>
 80028b2:	2303      	movs	r3, #3
 80028b4:	e025      	b.n	8002902 <FLASH_WaitForLastOperation+0x7e>
 80028b6:	4b15      	ldr	r3, [pc, #84]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028b8:	68db      	ldr	r3, [r3, #12]
 80028ba:	f003 0301 	and.w	r3, r3, #1
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d1e8      	bne.n	8002894 <FLASH_WaitForLastOperation+0x10>
 80028c2:	4b12      	ldr	r3, [pc, #72]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028c4:	68db      	ldr	r3, [r3, #12]
 80028c6:	f003 0320 	and.w	r3, r3, #32
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d002      	beq.n	80028d4 <FLASH_WaitForLastOperation+0x50>
 80028ce:	4b0f      	ldr	r3, [pc, #60]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028d0:	2220      	movs	r2, #32
 80028d2:	60da      	str	r2, [r3, #12]
 80028d4:	4b0d      	ldr	r3, [pc, #52]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028d6:	68db      	ldr	r3, [r3, #12]
 80028d8:	f003 0310 	and.w	r3, r3, #16
 80028dc:	2b00      	cmp	r3, #0
 80028de:	d10b      	bne.n	80028f8 <FLASH_WaitForLastOperation+0x74>
 80028e0:	4b0a      	ldr	r3, [pc, #40]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028e2:	69db      	ldr	r3, [r3, #28]
 80028e4:	f003 0301 	and.w	r3, r3, #1
 80028e8:	2b00      	cmp	r3, #0
 80028ea:	d105      	bne.n	80028f8 <FLASH_WaitForLastOperation+0x74>
 80028ec:	4b07      	ldr	r3, [pc, #28]	; (800290c <FLASH_WaitForLastOperation+0x88>)
 80028ee:	68db      	ldr	r3, [r3, #12]
 80028f0:	f003 0304 	and.w	r3, r3, #4
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	d003      	beq.n	8002900 <FLASH_WaitForLastOperation+0x7c>
 80028f8:	f000 f80a 	bl	8002910 <FLASH_SetErrorCode>
 80028fc:	2301      	movs	r3, #1
 80028fe:	e000      	b.n	8002902 <FLASH_WaitForLastOperation+0x7e>
 8002900:	2300      	movs	r3, #0
 8002902:	4618      	mov	r0, r3
 8002904:	3710      	adds	r7, #16
 8002906:	46bd      	mov	sp, r7
 8002908:	bd80      	pop	{r7, pc}
 800290a:	bf00      	nop
 800290c:	40022000 	.word	0x40022000

08002910 <FLASH_SetErrorCode>:
 8002910:	b480      	push	{r7}
 8002912:	b083      	sub	sp, #12
 8002914:	af00      	add	r7, sp, #0
 8002916:	2300      	movs	r3, #0
 8002918:	607b      	str	r3, [r7, #4]
 800291a:	4b23      	ldr	r3, [pc, #140]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 800291c:	68db      	ldr	r3, [r3, #12]
 800291e:	f003 0310 	and.w	r3, r3, #16
 8002922:	2b00      	cmp	r3, #0
 8002924:	d009      	beq.n	800293a <FLASH_SetErrorCode+0x2a>
 8002926:	4b21      	ldr	r3, [pc, #132]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002928:	69db      	ldr	r3, [r3, #28]
 800292a:	f043 0302 	orr.w	r3, r3, #2
 800292e:	4a1f      	ldr	r2, [pc, #124]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002930:	61d3      	str	r3, [r2, #28]
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	f043 0310 	orr.w	r3, r3, #16
 8002938:	607b      	str	r3, [r7, #4]
 800293a:	4b1b      	ldr	r3, [pc, #108]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 800293c:	68db      	ldr	r3, [r3, #12]
 800293e:	f003 0304 	and.w	r3, r3, #4
 8002942:	2b00      	cmp	r3, #0
 8002944:	d009      	beq.n	800295a <FLASH_SetErrorCode+0x4a>
 8002946:	4b19      	ldr	r3, [pc, #100]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002948:	69db      	ldr	r3, [r3, #28]
 800294a:	f043 0301 	orr.w	r3, r3, #1
 800294e:	4a17      	ldr	r2, [pc, #92]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002950:	61d3      	str	r3, [r2, #28]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	f043 0304 	orr.w	r3, r3, #4
 8002958:	607b      	str	r3, [r7, #4]
 800295a:	4b13      	ldr	r3, [pc, #76]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 800295c:	69db      	ldr	r3, [r3, #28]
 800295e:	f003 0301 	and.w	r3, r3, #1
 8002962:	2b00      	cmp	r3, #0
 8002964:	d00b      	beq.n	800297e <FLASH_SetErrorCode+0x6e>
 8002966:	4b11      	ldr	r3, [pc, #68]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002968:	69db      	ldr	r3, [r3, #28]
 800296a:	f043 0304 	orr.w	r3, r3, #4
 800296e:	4a0f      	ldr	r2, [pc, #60]	; (80029ac <FLASH_SetErrorCode+0x9c>)
 8002970:	61d3      	str	r3, [r2, #28]
 8002972:	4b0d      	ldr	r3, [pc, #52]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 8002974:	69db      	ldr	r3, [r3, #28]
 8002976:	4a0c      	ldr	r2, [pc, #48]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 8002978:	f023 0301 	bic.w	r3, r3, #1
 800297c:	61d3      	str	r3, [r2, #28]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	f240 1201 	movw	r2, #257	; 0x101
 8002984:	4293      	cmp	r3, r2
 8002986:	d106      	bne.n	8002996 <FLASH_SetErrorCode+0x86>
 8002988:	4b07      	ldr	r3, [pc, #28]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 800298a:	69db      	ldr	r3, [r3, #28]
 800298c:	4a06      	ldr	r2, [pc, #24]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 800298e:	f023 0301 	bic.w	r3, r3, #1
 8002992:	61d3      	str	r3, [r2, #28]
 8002994:	e002      	b.n	800299c <FLASH_SetErrorCode+0x8c>
 8002996:	4a04      	ldr	r2, [pc, #16]	; (80029a8 <FLASH_SetErrorCode+0x98>)
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	60d3      	str	r3, [r2, #12]
 800299c:	bf00      	nop
 800299e:	370c      	adds	r7, #12
 80029a0:	46bd      	mov	sp, r7
 80029a2:	bc80      	pop	{r7}
 80029a4:	4770      	bx	lr
 80029a6:	bf00      	nop
 80029a8:	40022000 	.word	0x40022000
 80029ac:	200025c8 	.word	0x200025c8

080029b0 <HAL_FLASHEx_Erase>:
 80029b0:	b580      	push	{r7, lr}
 80029b2:	b084      	sub	sp, #16
 80029b4:	af00      	add	r7, sp, #0
 80029b6:	6078      	str	r0, [r7, #4]
 80029b8:	6039      	str	r1, [r7, #0]
 80029ba:	2301      	movs	r3, #1
 80029bc:	73fb      	strb	r3, [r7, #15]
 80029be:	2300      	movs	r3, #0
 80029c0:	60bb      	str	r3, [r7, #8]
 80029c2:	4b2f      	ldr	r3, [pc, #188]	; (8002a80 <HAL_FLASHEx_Erase+0xd0>)
 80029c4:	7e1b      	ldrb	r3, [r3, #24]
 80029c6:	2b01      	cmp	r3, #1
 80029c8:	d101      	bne.n	80029ce <HAL_FLASHEx_Erase+0x1e>
 80029ca:	2302      	movs	r3, #2
 80029cc:	e053      	b.n	8002a76 <HAL_FLASHEx_Erase+0xc6>
 80029ce:	4b2c      	ldr	r3, [pc, #176]	; (8002a80 <HAL_FLASHEx_Erase+0xd0>)
 80029d0:	2201      	movs	r2, #1
 80029d2:	761a      	strb	r2, [r3, #24]
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	2b02      	cmp	r3, #2
 80029da:	d116      	bne.n	8002a0a <HAL_FLASHEx_Erase+0x5a>
 80029dc:	f24c 3050 	movw	r0, #50000	; 0xc350
 80029e0:	f7ff ff50 	bl	8002884 <FLASH_WaitForLastOperation>
 80029e4:	4603      	mov	r3, r0
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d141      	bne.n	8002a6e <HAL_FLASHEx_Erase+0xbe>
 80029ea:	2001      	movs	r0, #1
 80029ec:	f000 f84c 	bl	8002a88 <FLASH_MassErase>
 80029f0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80029f4:	f7ff ff46 	bl	8002884 <FLASH_WaitForLastOperation>
 80029f8:	4603      	mov	r3, r0
 80029fa:	73fb      	strb	r3, [r7, #15]
 80029fc:	4b21      	ldr	r3, [pc, #132]	; (8002a84 <HAL_FLASHEx_Erase+0xd4>)
 80029fe:	691b      	ldr	r3, [r3, #16]
 8002a00:	4a20      	ldr	r2, [pc, #128]	; (8002a84 <HAL_FLASHEx_Erase+0xd4>)
 8002a02:	f023 0304 	bic.w	r3, r3, #4
 8002a06:	6113      	str	r3, [r2, #16]
 8002a08:	e031      	b.n	8002a6e <HAL_FLASHEx_Erase+0xbe>
 8002a0a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8002a0e:	f7ff ff39 	bl	8002884 <FLASH_WaitForLastOperation>
 8002a12:	4603      	mov	r3, r0
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	d12a      	bne.n	8002a6e <HAL_FLASHEx_Erase+0xbe>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	f04f 32ff 	mov.w	r2, #4294967295
 8002a1e:	601a      	str	r2, [r3, #0]
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	689b      	ldr	r3, [r3, #8]
 8002a24:	60bb      	str	r3, [r7, #8]
 8002a26:	e019      	b.n	8002a5c <HAL_FLASHEx_Erase+0xac>
 8002a28:	68b8      	ldr	r0, [r7, #8]
 8002a2a:	f000 f849 	bl	8002ac0 <FLASH_PageErase>
 8002a2e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8002a32:	f7ff ff27 	bl	8002884 <FLASH_WaitForLastOperation>
 8002a36:	4603      	mov	r3, r0
 8002a38:	73fb      	strb	r3, [r7, #15]
 8002a3a:	4b12      	ldr	r3, [pc, #72]	; (8002a84 <HAL_FLASHEx_Erase+0xd4>)
 8002a3c:	691b      	ldr	r3, [r3, #16]
 8002a3e:	4a11      	ldr	r2, [pc, #68]	; (8002a84 <HAL_FLASHEx_Erase+0xd4>)
 8002a40:	f023 0302 	bic.w	r3, r3, #2
 8002a44:	6113      	str	r3, [r2, #16]
 8002a46:	7bfb      	ldrb	r3, [r7, #15]
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d003      	beq.n	8002a54 <HAL_FLASHEx_Erase+0xa4>
 8002a4c:	683b      	ldr	r3, [r7, #0]
 8002a4e:	68ba      	ldr	r2, [r7, #8]
 8002a50:	601a      	str	r2, [r3, #0]
 8002a52:	e00c      	b.n	8002a6e <HAL_FLASHEx_Erase+0xbe>
 8002a54:	68bb      	ldr	r3, [r7, #8]
 8002a56:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002a5a:	60bb      	str	r3, [r7, #8]
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	68db      	ldr	r3, [r3, #12]
 8002a60:	029a      	lsls	r2, r3, #10
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	689b      	ldr	r3, [r3, #8]
 8002a66:	4413      	add	r3, r2
 8002a68:	68ba      	ldr	r2, [r7, #8]
 8002a6a:	429a      	cmp	r2, r3
 8002a6c:	d3dc      	bcc.n	8002a28 <HAL_FLASHEx_Erase+0x78>
 8002a6e:	4b04      	ldr	r3, [pc, #16]	; (8002a80 <HAL_FLASHEx_Erase+0xd0>)
 8002a70:	2200      	movs	r2, #0
 8002a72:	761a      	strb	r2, [r3, #24]
 8002a74:	7bfb      	ldrb	r3, [r7, #15]
 8002a76:	4618      	mov	r0, r3
 8002a78:	3710      	adds	r7, #16
 8002a7a:	46bd      	mov	sp, r7
 8002a7c:	bd80      	pop	{r7, pc}
 8002a7e:	bf00      	nop
 8002a80:	200025c8 	.word	0x200025c8
 8002a84:	40022000 	.word	0x40022000

08002a88 <FLASH_MassErase>:
 8002a88:	b480      	push	{r7}
 8002a8a:	b083      	sub	sp, #12
 8002a8c:	af00      	add	r7, sp, #0
 8002a8e:	6078      	str	r0, [r7, #4]
 8002a90:	4b09      	ldr	r3, [pc, #36]	; (8002ab8 <FLASH_MassErase+0x30>)
 8002a92:	2200      	movs	r2, #0
 8002a94:	61da      	str	r2, [r3, #28]
 8002a96:	4b09      	ldr	r3, [pc, #36]	; (8002abc <FLASH_MassErase+0x34>)
 8002a98:	691b      	ldr	r3, [r3, #16]
 8002a9a:	4a08      	ldr	r2, [pc, #32]	; (8002abc <FLASH_MassErase+0x34>)
 8002a9c:	f043 0304 	orr.w	r3, r3, #4
 8002aa0:	6113      	str	r3, [r2, #16]
 8002aa2:	4b06      	ldr	r3, [pc, #24]	; (8002abc <FLASH_MassErase+0x34>)
 8002aa4:	691b      	ldr	r3, [r3, #16]
 8002aa6:	4a05      	ldr	r2, [pc, #20]	; (8002abc <FLASH_MassErase+0x34>)
 8002aa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002aac:	6113      	str	r3, [r2, #16]
 8002aae:	bf00      	nop
 8002ab0:	370c      	adds	r7, #12
 8002ab2:	46bd      	mov	sp, r7
 8002ab4:	bc80      	pop	{r7}
 8002ab6:	4770      	bx	lr
 8002ab8:	200025c8 	.word	0x200025c8
 8002abc:	40022000 	.word	0x40022000

08002ac0 <FLASH_PageErase>:
 8002ac0:	b480      	push	{r7}
 8002ac2:	b083      	sub	sp, #12
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	4b0b      	ldr	r3, [pc, #44]	; (8002af8 <FLASH_PageErase+0x38>)
 8002aca:	2200      	movs	r2, #0
 8002acc:	61da      	str	r2, [r3, #28]
 8002ace:	4b0b      	ldr	r3, [pc, #44]	; (8002afc <FLASH_PageErase+0x3c>)
 8002ad0:	691b      	ldr	r3, [r3, #16]
 8002ad2:	4a0a      	ldr	r2, [pc, #40]	; (8002afc <FLASH_PageErase+0x3c>)
 8002ad4:	f043 0302 	orr.w	r3, r3, #2
 8002ad8:	6113      	str	r3, [r2, #16]
 8002ada:	4a08      	ldr	r2, [pc, #32]	; (8002afc <FLASH_PageErase+0x3c>)
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	6153      	str	r3, [r2, #20]
 8002ae0:	4b06      	ldr	r3, [pc, #24]	; (8002afc <FLASH_PageErase+0x3c>)
 8002ae2:	691b      	ldr	r3, [r3, #16]
 8002ae4:	4a05      	ldr	r2, [pc, #20]	; (8002afc <FLASH_PageErase+0x3c>)
 8002ae6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002aea:	6113      	str	r3, [r2, #16]
 8002aec:	bf00      	nop
 8002aee:	370c      	adds	r7, #12
 8002af0:	46bd      	mov	sp, r7
 8002af2:	bc80      	pop	{r7}
 8002af4:	4770      	bx	lr
 8002af6:	bf00      	nop
 8002af8:	200025c8 	.word	0x200025c8
 8002afc:	40022000 	.word	0x40022000

08002b00 <HAL_GPIO_Init>:
 8002b00:	b480      	push	{r7}
 8002b02:	b08b      	sub	sp, #44	; 0x2c
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
 8002b08:	6039      	str	r1, [r7, #0]
 8002b0a:	2300      	movs	r3, #0
 8002b0c:	627b      	str	r3, [r7, #36]	; 0x24
 8002b0e:	2300      	movs	r3, #0
 8002b10:	623b      	str	r3, [r7, #32]
 8002b12:	e169      	b.n	8002de8 <HAL_GPIO_Init+0x2e8>
 8002b14:	2201      	movs	r2, #1
 8002b16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b18:	fa02 f303 	lsl.w	r3, r2, r3
 8002b1c:	61fb      	str	r3, [r7, #28]
 8002b1e:	683b      	ldr	r3, [r7, #0]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	69fa      	ldr	r2, [r7, #28]
 8002b24:	4013      	ands	r3, r2
 8002b26:	61bb      	str	r3, [r7, #24]
 8002b28:	69ba      	ldr	r2, [r7, #24]
 8002b2a:	69fb      	ldr	r3, [r7, #28]
 8002b2c:	429a      	cmp	r2, r3
 8002b2e:	f040 8158 	bne.w	8002de2 <HAL_GPIO_Init+0x2e2>
 8002b32:	683b      	ldr	r3, [r7, #0]
 8002b34:	685b      	ldr	r3, [r3, #4]
 8002b36:	4a9a      	ldr	r2, [pc, #616]	; (8002da0 <HAL_GPIO_Init+0x2a0>)
 8002b38:	4293      	cmp	r3, r2
 8002b3a:	d05e      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002b3c:	4a98      	ldr	r2, [pc, #608]	; (8002da0 <HAL_GPIO_Init+0x2a0>)
 8002b3e:	4293      	cmp	r3, r2
 8002b40:	d875      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b42:	4a98      	ldr	r2, [pc, #608]	; (8002da4 <HAL_GPIO_Init+0x2a4>)
 8002b44:	4293      	cmp	r3, r2
 8002b46:	d058      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002b48:	4a96      	ldr	r2, [pc, #600]	; (8002da4 <HAL_GPIO_Init+0x2a4>)
 8002b4a:	4293      	cmp	r3, r2
 8002b4c:	d86f      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b4e:	4a96      	ldr	r2, [pc, #600]	; (8002da8 <HAL_GPIO_Init+0x2a8>)
 8002b50:	4293      	cmp	r3, r2
 8002b52:	d052      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002b54:	4a94      	ldr	r2, [pc, #592]	; (8002da8 <HAL_GPIO_Init+0x2a8>)
 8002b56:	4293      	cmp	r3, r2
 8002b58:	d869      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b5a:	4a94      	ldr	r2, [pc, #592]	; (8002dac <HAL_GPIO_Init+0x2ac>)
 8002b5c:	4293      	cmp	r3, r2
 8002b5e:	d04c      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002b60:	4a92      	ldr	r2, [pc, #584]	; (8002dac <HAL_GPIO_Init+0x2ac>)
 8002b62:	4293      	cmp	r3, r2
 8002b64:	d863      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b66:	4a92      	ldr	r2, [pc, #584]	; (8002db0 <HAL_GPIO_Init+0x2b0>)
 8002b68:	4293      	cmp	r3, r2
 8002b6a:	d046      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002b6c:	4a90      	ldr	r2, [pc, #576]	; (8002db0 <HAL_GPIO_Init+0x2b0>)
 8002b6e:	4293      	cmp	r3, r2
 8002b70:	d85d      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b72:	2b12      	cmp	r3, #18
 8002b74:	d82a      	bhi.n	8002bcc <HAL_GPIO_Init+0xcc>
 8002b76:	2b12      	cmp	r3, #18
 8002b78:	d859      	bhi.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002b7a:	a201      	add	r2, pc, #4	; (adr r2, 8002b80 <HAL_GPIO_Init+0x80>)
 8002b7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002b80:	08002bfb 	.word	0x08002bfb
 8002b84:	08002bd5 	.word	0x08002bd5
 8002b88:	08002be7 	.word	0x08002be7
 8002b8c:	08002c29 	.word	0x08002c29
 8002b90:	08002c2f 	.word	0x08002c2f
 8002b94:	08002c2f 	.word	0x08002c2f
 8002b98:	08002c2f 	.word	0x08002c2f
 8002b9c:	08002c2f 	.word	0x08002c2f
 8002ba0:	08002c2f 	.word	0x08002c2f
 8002ba4:	08002c2f 	.word	0x08002c2f
 8002ba8:	08002c2f 	.word	0x08002c2f
 8002bac:	08002c2f 	.word	0x08002c2f
 8002bb0:	08002c2f 	.word	0x08002c2f
 8002bb4:	08002c2f 	.word	0x08002c2f
 8002bb8:	08002c2f 	.word	0x08002c2f
 8002bbc:	08002c2f 	.word	0x08002c2f
 8002bc0:	08002c2f 	.word	0x08002c2f
 8002bc4:	08002bdd 	.word	0x08002bdd
 8002bc8:	08002bf1 	.word	0x08002bf1
 8002bcc:	4a79      	ldr	r2, [pc, #484]	; (8002db4 <HAL_GPIO_Init+0x2b4>)
 8002bce:	4293      	cmp	r3, r2
 8002bd0:	d013      	beq.n	8002bfa <HAL_GPIO_Init+0xfa>
 8002bd2:	e02c      	b.n	8002c2e <HAL_GPIO_Init+0x12e>
 8002bd4:	683b      	ldr	r3, [r7, #0]
 8002bd6:	68db      	ldr	r3, [r3, #12]
 8002bd8:	623b      	str	r3, [r7, #32]
 8002bda:	e029      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002bdc:	683b      	ldr	r3, [r7, #0]
 8002bde:	68db      	ldr	r3, [r3, #12]
 8002be0:	3304      	adds	r3, #4
 8002be2:	623b      	str	r3, [r7, #32]
 8002be4:	e024      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	68db      	ldr	r3, [r3, #12]
 8002bea:	3308      	adds	r3, #8
 8002bec:	623b      	str	r3, [r7, #32]
 8002bee:	e01f      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002bf0:	683b      	ldr	r3, [r7, #0]
 8002bf2:	68db      	ldr	r3, [r3, #12]
 8002bf4:	330c      	adds	r3, #12
 8002bf6:	623b      	str	r3, [r7, #32]
 8002bf8:	e01a      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002bfa:	683b      	ldr	r3, [r7, #0]
 8002bfc:	689b      	ldr	r3, [r3, #8]
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d102      	bne.n	8002c08 <HAL_GPIO_Init+0x108>
 8002c02:	2304      	movs	r3, #4
 8002c04:	623b      	str	r3, [r7, #32]
 8002c06:	e013      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002c08:	683b      	ldr	r3, [r7, #0]
 8002c0a:	689b      	ldr	r3, [r3, #8]
 8002c0c:	2b01      	cmp	r3, #1
 8002c0e:	d105      	bne.n	8002c1c <HAL_GPIO_Init+0x11c>
 8002c10:	2308      	movs	r3, #8
 8002c12:	623b      	str	r3, [r7, #32]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	69fa      	ldr	r2, [r7, #28]
 8002c18:	611a      	str	r2, [r3, #16]
 8002c1a:	e009      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002c1c:	2308      	movs	r3, #8
 8002c1e:	623b      	str	r3, [r7, #32]
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	69fa      	ldr	r2, [r7, #28]
 8002c24:	615a      	str	r2, [r3, #20]
 8002c26:	e003      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002c28:	2300      	movs	r3, #0
 8002c2a:	623b      	str	r3, [r7, #32]
 8002c2c:	e000      	b.n	8002c30 <HAL_GPIO_Init+0x130>
 8002c2e:	bf00      	nop
 8002c30:	69bb      	ldr	r3, [r7, #24]
 8002c32:	2bff      	cmp	r3, #255	; 0xff
 8002c34:	d801      	bhi.n	8002c3a <HAL_GPIO_Init+0x13a>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	e001      	b.n	8002c3e <HAL_GPIO_Init+0x13e>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	3304      	adds	r3, #4
 8002c3e:	617b      	str	r3, [r7, #20]
 8002c40:	69bb      	ldr	r3, [r7, #24]
 8002c42:	2bff      	cmp	r3, #255	; 0xff
 8002c44:	d802      	bhi.n	8002c4c <HAL_GPIO_Init+0x14c>
 8002c46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c48:	009b      	lsls	r3, r3, #2
 8002c4a:	e002      	b.n	8002c52 <HAL_GPIO_Init+0x152>
 8002c4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c4e:	3b08      	subs	r3, #8
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	613b      	str	r3, [r7, #16]
 8002c54:	697b      	ldr	r3, [r7, #20]
 8002c56:	681a      	ldr	r2, [r3, #0]
 8002c58:	210f      	movs	r1, #15
 8002c5a:	693b      	ldr	r3, [r7, #16]
 8002c5c:	fa01 f303 	lsl.w	r3, r1, r3
 8002c60:	43db      	mvns	r3, r3
 8002c62:	401a      	ands	r2, r3
 8002c64:	6a39      	ldr	r1, [r7, #32]
 8002c66:	693b      	ldr	r3, [r7, #16]
 8002c68:	fa01 f303 	lsl.w	r3, r1, r3
 8002c6c:	431a      	orrs	r2, r3
 8002c6e:	697b      	ldr	r3, [r7, #20]
 8002c70:	601a      	str	r2, [r3, #0]
 8002c72:	683b      	ldr	r3, [r7, #0]
 8002c74:	685b      	ldr	r3, [r3, #4]
 8002c76:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	f000 80b1 	beq.w	8002de2 <HAL_GPIO_Init+0x2e2>
 8002c80:	4b4d      	ldr	r3, [pc, #308]	; (8002db8 <HAL_GPIO_Init+0x2b8>)
 8002c82:	699b      	ldr	r3, [r3, #24]
 8002c84:	4a4c      	ldr	r2, [pc, #304]	; (8002db8 <HAL_GPIO_Init+0x2b8>)
 8002c86:	f043 0301 	orr.w	r3, r3, #1
 8002c8a:	6193      	str	r3, [r2, #24]
 8002c8c:	4b4a      	ldr	r3, [pc, #296]	; (8002db8 <HAL_GPIO_Init+0x2b8>)
 8002c8e:	699b      	ldr	r3, [r3, #24]
 8002c90:	f003 0301 	and.w	r3, r3, #1
 8002c94:	60bb      	str	r3, [r7, #8]
 8002c96:	68bb      	ldr	r3, [r7, #8]
 8002c98:	4a48      	ldr	r2, [pc, #288]	; (8002dbc <HAL_GPIO_Init+0x2bc>)
 8002c9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c9c:	089b      	lsrs	r3, r3, #2
 8002c9e:	3302      	adds	r3, #2
 8002ca0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ca4:	60fb      	str	r3, [r7, #12]
 8002ca6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ca8:	f003 0303 	and.w	r3, r3, #3
 8002cac:	009b      	lsls	r3, r3, #2
 8002cae:	220f      	movs	r2, #15
 8002cb0:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb4:	43db      	mvns	r3, r3
 8002cb6:	68fa      	ldr	r2, [r7, #12]
 8002cb8:	4013      	ands	r3, r2
 8002cba:	60fb      	str	r3, [r7, #12]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	4a40      	ldr	r2, [pc, #256]	; (8002dc0 <HAL_GPIO_Init+0x2c0>)
 8002cc0:	4293      	cmp	r3, r2
 8002cc2:	d013      	beq.n	8002cec <HAL_GPIO_Init+0x1ec>
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	4a3f      	ldr	r2, [pc, #252]	; (8002dc4 <HAL_GPIO_Init+0x2c4>)
 8002cc8:	4293      	cmp	r3, r2
 8002cca:	d00d      	beq.n	8002ce8 <HAL_GPIO_Init+0x1e8>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	4a3e      	ldr	r2, [pc, #248]	; (8002dc8 <HAL_GPIO_Init+0x2c8>)
 8002cd0:	4293      	cmp	r3, r2
 8002cd2:	d007      	beq.n	8002ce4 <HAL_GPIO_Init+0x1e4>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	4a3d      	ldr	r2, [pc, #244]	; (8002dcc <HAL_GPIO_Init+0x2cc>)
 8002cd8:	4293      	cmp	r3, r2
 8002cda:	d101      	bne.n	8002ce0 <HAL_GPIO_Init+0x1e0>
 8002cdc:	2303      	movs	r3, #3
 8002cde:	e006      	b.n	8002cee <HAL_GPIO_Init+0x1ee>
 8002ce0:	2304      	movs	r3, #4
 8002ce2:	e004      	b.n	8002cee <HAL_GPIO_Init+0x1ee>
 8002ce4:	2302      	movs	r3, #2
 8002ce6:	e002      	b.n	8002cee <HAL_GPIO_Init+0x1ee>
 8002ce8:	2301      	movs	r3, #1
 8002cea:	e000      	b.n	8002cee <HAL_GPIO_Init+0x1ee>
 8002cec:	2300      	movs	r3, #0
 8002cee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002cf0:	f002 0203 	and.w	r2, r2, #3
 8002cf4:	0092      	lsls	r2, r2, #2
 8002cf6:	4093      	lsls	r3, r2
 8002cf8:	68fa      	ldr	r2, [r7, #12]
 8002cfa:	4313      	orrs	r3, r2
 8002cfc:	60fb      	str	r3, [r7, #12]
 8002cfe:	492f      	ldr	r1, [pc, #188]	; (8002dbc <HAL_GPIO_Init+0x2bc>)
 8002d00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d02:	089b      	lsrs	r3, r3, #2
 8002d04:	3302      	adds	r3, #2
 8002d06:	68fa      	ldr	r2, [r7, #12]
 8002d08:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002d0c:	683b      	ldr	r3, [r7, #0]
 8002d0e:	685b      	ldr	r3, [r3, #4]
 8002d10:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d006      	beq.n	8002d26 <HAL_GPIO_Init+0x226>
 8002d18:	4b2d      	ldr	r3, [pc, #180]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d1a:	681a      	ldr	r2, [r3, #0]
 8002d1c:	492c      	ldr	r1, [pc, #176]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d1e:	69bb      	ldr	r3, [r7, #24]
 8002d20:	4313      	orrs	r3, r2
 8002d22:	600b      	str	r3, [r1, #0]
 8002d24:	e006      	b.n	8002d34 <HAL_GPIO_Init+0x234>
 8002d26:	4b2a      	ldr	r3, [pc, #168]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d28:	681a      	ldr	r2, [r3, #0]
 8002d2a:	69bb      	ldr	r3, [r7, #24]
 8002d2c:	43db      	mvns	r3, r3
 8002d2e:	4928      	ldr	r1, [pc, #160]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d30:	4013      	ands	r3, r2
 8002d32:	600b      	str	r3, [r1, #0]
 8002d34:	683b      	ldr	r3, [r7, #0]
 8002d36:	685b      	ldr	r3, [r3, #4]
 8002d38:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	d006      	beq.n	8002d4e <HAL_GPIO_Init+0x24e>
 8002d40:	4b23      	ldr	r3, [pc, #140]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d42:	685a      	ldr	r2, [r3, #4]
 8002d44:	4922      	ldr	r1, [pc, #136]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d46:	69bb      	ldr	r3, [r7, #24]
 8002d48:	4313      	orrs	r3, r2
 8002d4a:	604b      	str	r3, [r1, #4]
 8002d4c:	e006      	b.n	8002d5c <HAL_GPIO_Init+0x25c>
 8002d4e:	4b20      	ldr	r3, [pc, #128]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d50:	685a      	ldr	r2, [r3, #4]
 8002d52:	69bb      	ldr	r3, [r7, #24]
 8002d54:	43db      	mvns	r3, r3
 8002d56:	491e      	ldr	r1, [pc, #120]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d58:	4013      	ands	r3, r2
 8002d5a:	604b      	str	r3, [r1, #4]
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	685b      	ldr	r3, [r3, #4]
 8002d60:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d006      	beq.n	8002d76 <HAL_GPIO_Init+0x276>
 8002d68:	4b19      	ldr	r3, [pc, #100]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d6a:	689a      	ldr	r2, [r3, #8]
 8002d6c:	4918      	ldr	r1, [pc, #96]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d6e:	69bb      	ldr	r3, [r7, #24]
 8002d70:	4313      	orrs	r3, r2
 8002d72:	608b      	str	r3, [r1, #8]
 8002d74:	e006      	b.n	8002d84 <HAL_GPIO_Init+0x284>
 8002d76:	4b16      	ldr	r3, [pc, #88]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d78:	689a      	ldr	r2, [r3, #8]
 8002d7a:	69bb      	ldr	r3, [r7, #24]
 8002d7c:	43db      	mvns	r3, r3
 8002d7e:	4914      	ldr	r1, [pc, #80]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d80:	4013      	ands	r3, r2
 8002d82:	608b      	str	r3, [r1, #8]
 8002d84:	683b      	ldr	r3, [r7, #0]
 8002d86:	685b      	ldr	r3, [r3, #4]
 8002d88:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d021      	beq.n	8002dd4 <HAL_GPIO_Init+0x2d4>
 8002d90:	4b0f      	ldr	r3, [pc, #60]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d92:	68da      	ldr	r2, [r3, #12]
 8002d94:	490e      	ldr	r1, [pc, #56]	; (8002dd0 <HAL_GPIO_Init+0x2d0>)
 8002d96:	69bb      	ldr	r3, [r7, #24]
 8002d98:	4313      	orrs	r3, r2
 8002d9a:	60cb      	str	r3, [r1, #12]
 8002d9c:	e021      	b.n	8002de2 <HAL_GPIO_Init+0x2e2>
 8002d9e:	bf00      	nop
 8002da0:	10320000 	.word	0x10320000
 8002da4:	10310000 	.word	0x10310000
 8002da8:	10220000 	.word	0x10220000
 8002dac:	10210000 	.word	0x10210000
 8002db0:	10120000 	.word	0x10120000
 8002db4:	10110000 	.word	0x10110000
 8002db8:	40021000 	.word	0x40021000
 8002dbc:	40010000 	.word	0x40010000
 8002dc0:	40010800 	.word	0x40010800
 8002dc4:	40010c00 	.word	0x40010c00
 8002dc8:	40011000 	.word	0x40011000
 8002dcc:	40011400 	.word	0x40011400
 8002dd0:	40010400 	.word	0x40010400
 8002dd4:	4b0b      	ldr	r3, [pc, #44]	; (8002e04 <HAL_GPIO_Init+0x304>)
 8002dd6:	68da      	ldr	r2, [r3, #12]
 8002dd8:	69bb      	ldr	r3, [r7, #24]
 8002dda:	43db      	mvns	r3, r3
 8002ddc:	4909      	ldr	r1, [pc, #36]	; (8002e04 <HAL_GPIO_Init+0x304>)
 8002dde:	4013      	ands	r3, r2
 8002de0:	60cb      	str	r3, [r1, #12]
 8002de2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002de4:	3301      	adds	r3, #1
 8002de6:	627b      	str	r3, [r7, #36]	; 0x24
 8002de8:	683b      	ldr	r3, [r7, #0]
 8002dea:	681a      	ldr	r2, [r3, #0]
 8002dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dee:	fa22 f303 	lsr.w	r3, r2, r3
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	f47f ae8e 	bne.w	8002b14 <HAL_GPIO_Init+0x14>
 8002df8:	bf00      	nop
 8002dfa:	bf00      	nop
 8002dfc:	372c      	adds	r7, #44	; 0x2c
 8002dfe:	46bd      	mov	sp, r7
 8002e00:	bc80      	pop	{r7}
 8002e02:	4770      	bx	lr
 8002e04:	40010400 	.word	0x40010400

08002e08 <HAL_GPIO_WritePin>:
 8002e08:	b480      	push	{r7}
 8002e0a:	b083      	sub	sp, #12
 8002e0c:	af00      	add	r7, sp, #0
 8002e0e:	6078      	str	r0, [r7, #4]
 8002e10:	460b      	mov	r3, r1
 8002e12:	807b      	strh	r3, [r7, #2]
 8002e14:	4613      	mov	r3, r2
 8002e16:	707b      	strb	r3, [r7, #1]
 8002e18:	787b      	ldrb	r3, [r7, #1]
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d003      	beq.n	8002e26 <HAL_GPIO_WritePin+0x1e>
 8002e1e:	887a      	ldrh	r2, [r7, #2]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	611a      	str	r2, [r3, #16]
 8002e24:	e003      	b.n	8002e2e <HAL_GPIO_WritePin+0x26>
 8002e26:	887b      	ldrh	r3, [r7, #2]
 8002e28:	041a      	lsls	r2, r3, #16
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	611a      	str	r2, [r3, #16]
 8002e2e:	bf00      	nop
 8002e30:	370c      	adds	r7, #12
 8002e32:	46bd      	mov	sp, r7
 8002e34:	bc80      	pop	{r7}
 8002e36:	4770      	bx	lr

08002e38 <HAL_GPIO_EXTI_IRQHandler>:
 8002e38:	b580      	push	{r7, lr}
 8002e3a:	b082      	sub	sp, #8
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	4603      	mov	r3, r0
 8002e40:	80fb      	strh	r3, [r7, #6]
 8002e42:	4b08      	ldr	r3, [pc, #32]	; (8002e64 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002e44:	695a      	ldr	r2, [r3, #20]
 8002e46:	88fb      	ldrh	r3, [r7, #6]
 8002e48:	4013      	ands	r3, r2
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	d006      	beq.n	8002e5c <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002e4e:	4a05      	ldr	r2, [pc, #20]	; (8002e64 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002e50:	88fb      	ldrh	r3, [r7, #6]
 8002e52:	6153      	str	r3, [r2, #20]
 8002e54:	88fb      	ldrh	r3, [r7, #6]
 8002e56:	4618      	mov	r0, r3
 8002e58:	f7fe ff36 	bl	8001cc8 <HAL_GPIO_EXTI_Callback>
 8002e5c:	bf00      	nop
 8002e5e:	3708      	adds	r7, #8
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd80      	pop	{r7, pc}
 8002e64:	40010400 	.word	0x40010400

08002e68 <HAL_RCC_OscConfig>:
 8002e68:	b580      	push	{r7, lr}
 8002e6a:	b086      	sub	sp, #24
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	6078      	str	r0, [r7, #4]
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d101      	bne.n	8002e7a <HAL_RCC_OscConfig+0x12>
 8002e76:	2301      	movs	r3, #1
 8002e78:	e272      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	f003 0301 	and.w	r3, r3, #1
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	f000 8087 	beq.w	8002f96 <HAL_RCC_OscConfig+0x12e>
 8002e88:	4b92      	ldr	r3, [pc, #584]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002e8a:	685b      	ldr	r3, [r3, #4]
 8002e8c:	f003 030c 	and.w	r3, r3, #12
 8002e90:	2b04      	cmp	r3, #4
 8002e92:	d00c      	beq.n	8002eae <HAL_RCC_OscConfig+0x46>
 8002e94:	4b8f      	ldr	r3, [pc, #572]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002e96:	685b      	ldr	r3, [r3, #4]
 8002e98:	f003 030c 	and.w	r3, r3, #12
 8002e9c:	2b08      	cmp	r3, #8
 8002e9e:	d112      	bne.n	8002ec6 <HAL_RCC_OscConfig+0x5e>
 8002ea0:	4b8c      	ldr	r3, [pc, #560]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ea2:	685b      	ldr	r3, [r3, #4]
 8002ea4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002ea8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002eac:	d10b      	bne.n	8002ec6 <HAL_RCC_OscConfig+0x5e>
 8002eae:	4b89      	ldr	r3, [pc, #548]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002eb6:	2b00      	cmp	r3, #0
 8002eb8:	d06c      	beq.n	8002f94 <HAL_RCC_OscConfig+0x12c>
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	685b      	ldr	r3, [r3, #4]
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d168      	bne.n	8002f94 <HAL_RCC_OscConfig+0x12c>
 8002ec2:	2301      	movs	r3, #1
 8002ec4:	e24c      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	685b      	ldr	r3, [r3, #4]
 8002eca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002ece:	d106      	bne.n	8002ede <HAL_RCC_OscConfig+0x76>
 8002ed0:	4b80      	ldr	r3, [pc, #512]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	4a7f      	ldr	r2, [pc, #508]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ed6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002eda:	6013      	str	r3, [r2, #0]
 8002edc:	e02e      	b.n	8002f3c <HAL_RCC_OscConfig+0xd4>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	685b      	ldr	r3, [r3, #4]
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d10c      	bne.n	8002f00 <HAL_RCC_OscConfig+0x98>
 8002ee6:	4b7b      	ldr	r3, [pc, #492]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	4a7a      	ldr	r2, [pc, #488]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002eec:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002ef0:	6013      	str	r3, [r2, #0]
 8002ef2:	4b78      	ldr	r3, [pc, #480]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	4a77      	ldr	r2, [pc, #476]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002ef8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002efc:	6013      	str	r3, [r2, #0]
 8002efe:	e01d      	b.n	8002f3c <HAL_RCC_OscConfig+0xd4>
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	685b      	ldr	r3, [r3, #4]
 8002f04:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002f08:	d10c      	bne.n	8002f24 <HAL_RCC_OscConfig+0xbc>
 8002f0a:	4b72      	ldr	r3, [pc, #456]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	4a71      	ldr	r2, [pc, #452]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f10:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002f14:	6013      	str	r3, [r2, #0]
 8002f16:	4b6f      	ldr	r3, [pc, #444]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	4a6e      	ldr	r2, [pc, #440]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f1c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002f20:	6013      	str	r3, [r2, #0]
 8002f22:	e00b      	b.n	8002f3c <HAL_RCC_OscConfig+0xd4>
 8002f24:	4b6b      	ldr	r3, [pc, #428]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	4a6a      	ldr	r2, [pc, #424]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f2a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002f2e:	6013      	str	r3, [r2, #0]
 8002f30:	4b68      	ldr	r3, [pc, #416]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	4a67      	ldr	r2, [pc, #412]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f36:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002f3a:	6013      	str	r3, [r2, #0]
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	685b      	ldr	r3, [r3, #4]
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	d013      	beq.n	8002f6c <HAL_RCC_OscConfig+0x104>
 8002f44:	f7ff f9f0 	bl	8002328 <HAL_GetTick>
 8002f48:	6138      	str	r0, [r7, #16]
 8002f4a:	e008      	b.n	8002f5e <HAL_RCC_OscConfig+0xf6>
 8002f4c:	f7ff f9ec 	bl	8002328 <HAL_GetTick>
 8002f50:	4602      	mov	r2, r0
 8002f52:	693b      	ldr	r3, [r7, #16]
 8002f54:	1ad3      	subs	r3, r2, r3
 8002f56:	2b64      	cmp	r3, #100	; 0x64
 8002f58:	d901      	bls.n	8002f5e <HAL_RCC_OscConfig+0xf6>
 8002f5a:	2303      	movs	r3, #3
 8002f5c:	e200      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8002f5e:	4b5d      	ldr	r3, [pc, #372]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d0f0      	beq.n	8002f4c <HAL_RCC_OscConfig+0xe4>
 8002f6a:	e014      	b.n	8002f96 <HAL_RCC_OscConfig+0x12e>
 8002f6c:	f7ff f9dc 	bl	8002328 <HAL_GetTick>
 8002f70:	6138      	str	r0, [r7, #16]
 8002f72:	e008      	b.n	8002f86 <HAL_RCC_OscConfig+0x11e>
 8002f74:	f7ff f9d8 	bl	8002328 <HAL_GetTick>
 8002f78:	4602      	mov	r2, r0
 8002f7a:	693b      	ldr	r3, [r7, #16]
 8002f7c:	1ad3      	subs	r3, r2, r3
 8002f7e:	2b64      	cmp	r3, #100	; 0x64
 8002f80:	d901      	bls.n	8002f86 <HAL_RCC_OscConfig+0x11e>
 8002f82:	2303      	movs	r3, #3
 8002f84:	e1ec      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8002f86:	4b53      	ldr	r3, [pc, #332]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d1f0      	bne.n	8002f74 <HAL_RCC_OscConfig+0x10c>
 8002f92:	e000      	b.n	8002f96 <HAL_RCC_OscConfig+0x12e>
 8002f94:	bf00      	nop
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	f003 0302 	and.w	r3, r3, #2
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d063      	beq.n	800306a <HAL_RCC_OscConfig+0x202>
 8002fa2:	4b4c      	ldr	r3, [pc, #304]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fa4:	685b      	ldr	r3, [r3, #4]
 8002fa6:	f003 030c 	and.w	r3, r3, #12
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d00b      	beq.n	8002fc6 <HAL_RCC_OscConfig+0x15e>
 8002fae:	4b49      	ldr	r3, [pc, #292]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fb0:	685b      	ldr	r3, [r3, #4]
 8002fb2:	f003 030c 	and.w	r3, r3, #12
 8002fb6:	2b08      	cmp	r3, #8
 8002fb8:	d11c      	bne.n	8002ff4 <HAL_RCC_OscConfig+0x18c>
 8002fba:	4b46      	ldr	r3, [pc, #280]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fbc:	685b      	ldr	r3, [r3, #4]
 8002fbe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d116      	bne.n	8002ff4 <HAL_RCC_OscConfig+0x18c>
 8002fc6:	4b43      	ldr	r3, [pc, #268]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	f003 0302 	and.w	r3, r3, #2
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d005      	beq.n	8002fde <HAL_RCC_OscConfig+0x176>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	691b      	ldr	r3, [r3, #16]
 8002fd6:	2b01      	cmp	r3, #1
 8002fd8:	d001      	beq.n	8002fde <HAL_RCC_OscConfig+0x176>
 8002fda:	2301      	movs	r3, #1
 8002fdc:	e1c0      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8002fde:	4b3d      	ldr	r3, [pc, #244]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	695b      	ldr	r3, [r3, #20]
 8002fea:	00db      	lsls	r3, r3, #3
 8002fec:	4939      	ldr	r1, [pc, #228]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8002fee:	4313      	orrs	r3, r2
 8002ff0:	600b      	str	r3, [r1, #0]
 8002ff2:	e03a      	b.n	800306a <HAL_RCC_OscConfig+0x202>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	691b      	ldr	r3, [r3, #16]
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d020      	beq.n	800303e <HAL_RCC_OscConfig+0x1d6>
 8002ffc:	4b36      	ldr	r3, [pc, #216]	; (80030d8 <HAL_RCC_OscConfig+0x270>)
 8002ffe:	2201      	movs	r2, #1
 8003000:	601a      	str	r2, [r3, #0]
 8003002:	f7ff f991 	bl	8002328 <HAL_GetTick>
 8003006:	6138      	str	r0, [r7, #16]
 8003008:	e008      	b.n	800301c <HAL_RCC_OscConfig+0x1b4>
 800300a:	f7ff f98d 	bl	8002328 <HAL_GetTick>
 800300e:	4602      	mov	r2, r0
 8003010:	693b      	ldr	r3, [r7, #16]
 8003012:	1ad3      	subs	r3, r2, r3
 8003014:	2b02      	cmp	r3, #2
 8003016:	d901      	bls.n	800301c <HAL_RCC_OscConfig+0x1b4>
 8003018:	2303      	movs	r3, #3
 800301a:	e1a1      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 800301c:	4b2d      	ldr	r3, [pc, #180]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	f003 0302 	and.w	r3, r3, #2
 8003024:	2b00      	cmp	r3, #0
 8003026:	d0f0      	beq.n	800300a <HAL_RCC_OscConfig+0x1a2>
 8003028:	4b2a      	ldr	r3, [pc, #168]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	695b      	ldr	r3, [r3, #20]
 8003034:	00db      	lsls	r3, r3, #3
 8003036:	4927      	ldr	r1, [pc, #156]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8003038:	4313      	orrs	r3, r2
 800303a:	600b      	str	r3, [r1, #0]
 800303c:	e015      	b.n	800306a <HAL_RCC_OscConfig+0x202>
 800303e:	4b26      	ldr	r3, [pc, #152]	; (80030d8 <HAL_RCC_OscConfig+0x270>)
 8003040:	2200      	movs	r2, #0
 8003042:	601a      	str	r2, [r3, #0]
 8003044:	f7ff f970 	bl	8002328 <HAL_GetTick>
 8003048:	6138      	str	r0, [r7, #16]
 800304a:	e008      	b.n	800305e <HAL_RCC_OscConfig+0x1f6>
 800304c:	f7ff f96c 	bl	8002328 <HAL_GetTick>
 8003050:	4602      	mov	r2, r0
 8003052:	693b      	ldr	r3, [r7, #16]
 8003054:	1ad3      	subs	r3, r2, r3
 8003056:	2b02      	cmp	r3, #2
 8003058:	d901      	bls.n	800305e <HAL_RCC_OscConfig+0x1f6>
 800305a:	2303      	movs	r3, #3
 800305c:	e180      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 800305e:	4b1d      	ldr	r3, [pc, #116]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	f003 0302 	and.w	r3, r3, #2
 8003066:	2b00      	cmp	r3, #0
 8003068:	d1f0      	bne.n	800304c <HAL_RCC_OscConfig+0x1e4>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	f003 0308 	and.w	r3, r3, #8
 8003072:	2b00      	cmp	r3, #0
 8003074:	d03a      	beq.n	80030ec <HAL_RCC_OscConfig+0x284>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	699b      	ldr	r3, [r3, #24]
 800307a:	2b00      	cmp	r3, #0
 800307c:	d019      	beq.n	80030b2 <HAL_RCC_OscConfig+0x24a>
 800307e:	4b17      	ldr	r3, [pc, #92]	; (80030dc <HAL_RCC_OscConfig+0x274>)
 8003080:	2201      	movs	r2, #1
 8003082:	601a      	str	r2, [r3, #0]
 8003084:	f7ff f950 	bl	8002328 <HAL_GetTick>
 8003088:	6138      	str	r0, [r7, #16]
 800308a:	e008      	b.n	800309e <HAL_RCC_OscConfig+0x236>
 800308c:	f7ff f94c 	bl	8002328 <HAL_GetTick>
 8003090:	4602      	mov	r2, r0
 8003092:	693b      	ldr	r3, [r7, #16]
 8003094:	1ad3      	subs	r3, r2, r3
 8003096:	2b02      	cmp	r3, #2
 8003098:	d901      	bls.n	800309e <HAL_RCC_OscConfig+0x236>
 800309a:	2303      	movs	r3, #3
 800309c:	e160      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 800309e:	4b0d      	ldr	r3, [pc, #52]	; (80030d4 <HAL_RCC_OscConfig+0x26c>)
 80030a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030a2:	f003 0302 	and.w	r3, r3, #2
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d0f0      	beq.n	800308c <HAL_RCC_OscConfig+0x224>
 80030aa:	2001      	movs	r0, #1
 80030ac:	f000 fada 	bl	8003664 <RCC_Delay>
 80030b0:	e01c      	b.n	80030ec <HAL_RCC_OscConfig+0x284>
 80030b2:	4b0a      	ldr	r3, [pc, #40]	; (80030dc <HAL_RCC_OscConfig+0x274>)
 80030b4:	2200      	movs	r2, #0
 80030b6:	601a      	str	r2, [r3, #0]
 80030b8:	f7ff f936 	bl	8002328 <HAL_GetTick>
 80030bc:	6138      	str	r0, [r7, #16]
 80030be:	e00f      	b.n	80030e0 <HAL_RCC_OscConfig+0x278>
 80030c0:	f7ff f932 	bl	8002328 <HAL_GetTick>
 80030c4:	4602      	mov	r2, r0
 80030c6:	693b      	ldr	r3, [r7, #16]
 80030c8:	1ad3      	subs	r3, r2, r3
 80030ca:	2b02      	cmp	r3, #2
 80030cc:	d908      	bls.n	80030e0 <HAL_RCC_OscConfig+0x278>
 80030ce:	2303      	movs	r3, #3
 80030d0:	e146      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 80030d2:	bf00      	nop
 80030d4:	40021000 	.word	0x40021000
 80030d8:	42420000 	.word	0x42420000
 80030dc:	42420480 	.word	0x42420480
 80030e0:	4b92      	ldr	r3, [pc, #584]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80030e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030e4:	f003 0302 	and.w	r3, r3, #2
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	d1e9      	bne.n	80030c0 <HAL_RCC_OscConfig+0x258>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	f003 0304 	and.w	r3, r3, #4
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	f000 80a6 	beq.w	8003246 <HAL_RCC_OscConfig+0x3de>
 80030fa:	2300      	movs	r3, #0
 80030fc:	75fb      	strb	r3, [r7, #23]
 80030fe:	4b8b      	ldr	r3, [pc, #556]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003100:	69db      	ldr	r3, [r3, #28]
 8003102:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003106:	2b00      	cmp	r3, #0
 8003108:	d10d      	bne.n	8003126 <HAL_RCC_OscConfig+0x2be>
 800310a:	4b88      	ldr	r3, [pc, #544]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 800310c:	69db      	ldr	r3, [r3, #28]
 800310e:	4a87      	ldr	r2, [pc, #540]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003110:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003114:	61d3      	str	r3, [r2, #28]
 8003116:	4b85      	ldr	r3, [pc, #532]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003118:	69db      	ldr	r3, [r3, #28]
 800311a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800311e:	60bb      	str	r3, [r7, #8]
 8003120:	68bb      	ldr	r3, [r7, #8]
 8003122:	2301      	movs	r3, #1
 8003124:	75fb      	strb	r3, [r7, #23]
 8003126:	4b82      	ldr	r3, [pc, #520]	; (8003330 <HAL_RCC_OscConfig+0x4c8>)
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800312e:	2b00      	cmp	r3, #0
 8003130:	d118      	bne.n	8003164 <HAL_RCC_OscConfig+0x2fc>
 8003132:	4b7f      	ldr	r3, [pc, #508]	; (8003330 <HAL_RCC_OscConfig+0x4c8>)
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	4a7e      	ldr	r2, [pc, #504]	; (8003330 <HAL_RCC_OscConfig+0x4c8>)
 8003138:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800313c:	6013      	str	r3, [r2, #0]
 800313e:	f7ff f8f3 	bl	8002328 <HAL_GetTick>
 8003142:	6138      	str	r0, [r7, #16]
 8003144:	e008      	b.n	8003158 <HAL_RCC_OscConfig+0x2f0>
 8003146:	f7ff f8ef 	bl	8002328 <HAL_GetTick>
 800314a:	4602      	mov	r2, r0
 800314c:	693b      	ldr	r3, [r7, #16]
 800314e:	1ad3      	subs	r3, r2, r3
 8003150:	2b64      	cmp	r3, #100	; 0x64
 8003152:	d901      	bls.n	8003158 <HAL_RCC_OscConfig+0x2f0>
 8003154:	2303      	movs	r3, #3
 8003156:	e103      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8003158:	4b75      	ldr	r3, [pc, #468]	; (8003330 <HAL_RCC_OscConfig+0x4c8>)
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003160:	2b00      	cmp	r3, #0
 8003162:	d0f0      	beq.n	8003146 <HAL_RCC_OscConfig+0x2de>
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	68db      	ldr	r3, [r3, #12]
 8003168:	2b01      	cmp	r3, #1
 800316a:	d106      	bne.n	800317a <HAL_RCC_OscConfig+0x312>
 800316c:	4b6f      	ldr	r3, [pc, #444]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 800316e:	6a1b      	ldr	r3, [r3, #32]
 8003170:	4a6e      	ldr	r2, [pc, #440]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003172:	f043 0301 	orr.w	r3, r3, #1
 8003176:	6213      	str	r3, [r2, #32]
 8003178:	e02d      	b.n	80031d6 <HAL_RCC_OscConfig+0x36e>
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	68db      	ldr	r3, [r3, #12]
 800317e:	2b00      	cmp	r3, #0
 8003180:	d10c      	bne.n	800319c <HAL_RCC_OscConfig+0x334>
 8003182:	4b6a      	ldr	r3, [pc, #424]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003184:	6a1b      	ldr	r3, [r3, #32]
 8003186:	4a69      	ldr	r2, [pc, #420]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003188:	f023 0301 	bic.w	r3, r3, #1
 800318c:	6213      	str	r3, [r2, #32]
 800318e:	4b67      	ldr	r3, [pc, #412]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003190:	6a1b      	ldr	r3, [r3, #32]
 8003192:	4a66      	ldr	r2, [pc, #408]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003194:	f023 0304 	bic.w	r3, r3, #4
 8003198:	6213      	str	r3, [r2, #32]
 800319a:	e01c      	b.n	80031d6 <HAL_RCC_OscConfig+0x36e>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	68db      	ldr	r3, [r3, #12]
 80031a0:	2b05      	cmp	r3, #5
 80031a2:	d10c      	bne.n	80031be <HAL_RCC_OscConfig+0x356>
 80031a4:	4b61      	ldr	r3, [pc, #388]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031a6:	6a1b      	ldr	r3, [r3, #32]
 80031a8:	4a60      	ldr	r2, [pc, #384]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031aa:	f043 0304 	orr.w	r3, r3, #4
 80031ae:	6213      	str	r3, [r2, #32]
 80031b0:	4b5e      	ldr	r3, [pc, #376]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031b2:	6a1b      	ldr	r3, [r3, #32]
 80031b4:	4a5d      	ldr	r2, [pc, #372]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031b6:	f043 0301 	orr.w	r3, r3, #1
 80031ba:	6213      	str	r3, [r2, #32]
 80031bc:	e00b      	b.n	80031d6 <HAL_RCC_OscConfig+0x36e>
 80031be:	4b5b      	ldr	r3, [pc, #364]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031c0:	6a1b      	ldr	r3, [r3, #32]
 80031c2:	4a5a      	ldr	r2, [pc, #360]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031c4:	f023 0301 	bic.w	r3, r3, #1
 80031c8:	6213      	str	r3, [r2, #32]
 80031ca:	4b58      	ldr	r3, [pc, #352]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031cc:	6a1b      	ldr	r3, [r3, #32]
 80031ce:	4a57      	ldr	r2, [pc, #348]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031d0:	f023 0304 	bic.w	r3, r3, #4
 80031d4:	6213      	str	r3, [r2, #32]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	68db      	ldr	r3, [r3, #12]
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d015      	beq.n	800320a <HAL_RCC_OscConfig+0x3a2>
 80031de:	f7ff f8a3 	bl	8002328 <HAL_GetTick>
 80031e2:	6138      	str	r0, [r7, #16]
 80031e4:	e00a      	b.n	80031fc <HAL_RCC_OscConfig+0x394>
 80031e6:	f7ff f89f 	bl	8002328 <HAL_GetTick>
 80031ea:	4602      	mov	r2, r0
 80031ec:	693b      	ldr	r3, [r7, #16]
 80031ee:	1ad3      	subs	r3, r2, r3
 80031f0:	f241 3288 	movw	r2, #5000	; 0x1388
 80031f4:	4293      	cmp	r3, r2
 80031f6:	d901      	bls.n	80031fc <HAL_RCC_OscConfig+0x394>
 80031f8:	2303      	movs	r3, #3
 80031fa:	e0b1      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 80031fc:	4b4b      	ldr	r3, [pc, #300]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80031fe:	6a1b      	ldr	r3, [r3, #32]
 8003200:	f003 0302 	and.w	r3, r3, #2
 8003204:	2b00      	cmp	r3, #0
 8003206:	d0ee      	beq.n	80031e6 <HAL_RCC_OscConfig+0x37e>
 8003208:	e014      	b.n	8003234 <HAL_RCC_OscConfig+0x3cc>
 800320a:	f7ff f88d 	bl	8002328 <HAL_GetTick>
 800320e:	6138      	str	r0, [r7, #16]
 8003210:	e00a      	b.n	8003228 <HAL_RCC_OscConfig+0x3c0>
 8003212:	f7ff f889 	bl	8002328 <HAL_GetTick>
 8003216:	4602      	mov	r2, r0
 8003218:	693b      	ldr	r3, [r7, #16]
 800321a:	1ad3      	subs	r3, r2, r3
 800321c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003220:	4293      	cmp	r3, r2
 8003222:	d901      	bls.n	8003228 <HAL_RCC_OscConfig+0x3c0>
 8003224:	2303      	movs	r3, #3
 8003226:	e09b      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8003228:	4b40      	ldr	r3, [pc, #256]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 800322a:	6a1b      	ldr	r3, [r3, #32]
 800322c:	f003 0302 	and.w	r3, r3, #2
 8003230:	2b00      	cmp	r3, #0
 8003232:	d1ee      	bne.n	8003212 <HAL_RCC_OscConfig+0x3aa>
 8003234:	7dfb      	ldrb	r3, [r7, #23]
 8003236:	2b01      	cmp	r3, #1
 8003238:	d105      	bne.n	8003246 <HAL_RCC_OscConfig+0x3de>
 800323a:	4b3c      	ldr	r3, [pc, #240]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 800323c:	69db      	ldr	r3, [r3, #28]
 800323e:	4a3b      	ldr	r2, [pc, #236]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003240:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003244:	61d3      	str	r3, [r2, #28]
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	69db      	ldr	r3, [r3, #28]
 800324a:	2b00      	cmp	r3, #0
 800324c:	f000 8087 	beq.w	800335e <HAL_RCC_OscConfig+0x4f6>
 8003250:	4b36      	ldr	r3, [pc, #216]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003252:	685b      	ldr	r3, [r3, #4]
 8003254:	f003 030c 	and.w	r3, r3, #12
 8003258:	2b08      	cmp	r3, #8
 800325a:	d061      	beq.n	8003320 <HAL_RCC_OscConfig+0x4b8>
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	69db      	ldr	r3, [r3, #28]
 8003260:	2b02      	cmp	r3, #2
 8003262:	d146      	bne.n	80032f2 <HAL_RCC_OscConfig+0x48a>
 8003264:	4b33      	ldr	r3, [pc, #204]	; (8003334 <HAL_RCC_OscConfig+0x4cc>)
 8003266:	2200      	movs	r2, #0
 8003268:	601a      	str	r2, [r3, #0]
 800326a:	f7ff f85d 	bl	8002328 <HAL_GetTick>
 800326e:	6138      	str	r0, [r7, #16]
 8003270:	e008      	b.n	8003284 <HAL_RCC_OscConfig+0x41c>
 8003272:	f7ff f859 	bl	8002328 <HAL_GetTick>
 8003276:	4602      	mov	r2, r0
 8003278:	693b      	ldr	r3, [r7, #16]
 800327a:	1ad3      	subs	r3, r2, r3
 800327c:	2b02      	cmp	r3, #2
 800327e:	d901      	bls.n	8003284 <HAL_RCC_OscConfig+0x41c>
 8003280:	2303      	movs	r3, #3
 8003282:	e06d      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8003284:	4b29      	ldr	r3, [pc, #164]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800328c:	2b00      	cmp	r3, #0
 800328e:	d1f0      	bne.n	8003272 <HAL_RCC_OscConfig+0x40a>
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	6a1b      	ldr	r3, [r3, #32]
 8003294:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003298:	d108      	bne.n	80032ac <HAL_RCC_OscConfig+0x444>
 800329a:	4b24      	ldr	r3, [pc, #144]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 800329c:	685b      	ldr	r3, [r3, #4]
 800329e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	689b      	ldr	r3, [r3, #8]
 80032a6:	4921      	ldr	r1, [pc, #132]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80032a8:	4313      	orrs	r3, r2
 80032aa:	604b      	str	r3, [r1, #4]
 80032ac:	4b1f      	ldr	r3, [pc, #124]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80032ae:	685b      	ldr	r3, [r3, #4]
 80032b0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	6a19      	ldr	r1, [r3, #32]
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032bc:	430b      	orrs	r3, r1
 80032be:	491b      	ldr	r1, [pc, #108]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80032c0:	4313      	orrs	r3, r2
 80032c2:	604b      	str	r3, [r1, #4]
 80032c4:	4b1b      	ldr	r3, [pc, #108]	; (8003334 <HAL_RCC_OscConfig+0x4cc>)
 80032c6:	2201      	movs	r2, #1
 80032c8:	601a      	str	r2, [r3, #0]
 80032ca:	f7ff f82d 	bl	8002328 <HAL_GetTick>
 80032ce:	6138      	str	r0, [r7, #16]
 80032d0:	e008      	b.n	80032e4 <HAL_RCC_OscConfig+0x47c>
 80032d2:	f7ff f829 	bl	8002328 <HAL_GetTick>
 80032d6:	4602      	mov	r2, r0
 80032d8:	693b      	ldr	r3, [r7, #16]
 80032da:	1ad3      	subs	r3, r2, r3
 80032dc:	2b02      	cmp	r3, #2
 80032de:	d901      	bls.n	80032e4 <HAL_RCC_OscConfig+0x47c>
 80032e0:	2303      	movs	r3, #3
 80032e2:	e03d      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 80032e4:	4b11      	ldr	r3, [pc, #68]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80032ec:	2b00      	cmp	r3, #0
 80032ee:	d0f0      	beq.n	80032d2 <HAL_RCC_OscConfig+0x46a>
 80032f0:	e035      	b.n	800335e <HAL_RCC_OscConfig+0x4f6>
 80032f2:	4b10      	ldr	r3, [pc, #64]	; (8003334 <HAL_RCC_OscConfig+0x4cc>)
 80032f4:	2200      	movs	r2, #0
 80032f6:	601a      	str	r2, [r3, #0]
 80032f8:	f7ff f816 	bl	8002328 <HAL_GetTick>
 80032fc:	6138      	str	r0, [r7, #16]
 80032fe:	e008      	b.n	8003312 <HAL_RCC_OscConfig+0x4aa>
 8003300:	f7ff f812 	bl	8002328 <HAL_GetTick>
 8003304:	4602      	mov	r2, r0
 8003306:	693b      	ldr	r3, [r7, #16]
 8003308:	1ad3      	subs	r3, r2, r3
 800330a:	2b02      	cmp	r3, #2
 800330c:	d901      	bls.n	8003312 <HAL_RCC_OscConfig+0x4aa>
 800330e:	2303      	movs	r3, #3
 8003310:	e026      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 8003312:	4b06      	ldr	r3, [pc, #24]	; (800332c <HAL_RCC_OscConfig+0x4c4>)
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800331a:	2b00      	cmp	r3, #0
 800331c:	d1f0      	bne.n	8003300 <HAL_RCC_OscConfig+0x498>
 800331e:	e01e      	b.n	800335e <HAL_RCC_OscConfig+0x4f6>
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	69db      	ldr	r3, [r3, #28]
 8003324:	2b01      	cmp	r3, #1
 8003326:	d107      	bne.n	8003338 <HAL_RCC_OscConfig+0x4d0>
 8003328:	2301      	movs	r3, #1
 800332a:	e019      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 800332c:	40021000 	.word	0x40021000
 8003330:	40007000 	.word	0x40007000
 8003334:	42420060 	.word	0x42420060
 8003338:	4b0b      	ldr	r3, [pc, #44]	; (8003368 <HAL_RCC_OscConfig+0x500>)
 800333a:	685b      	ldr	r3, [r3, #4]
 800333c:	60fb      	str	r3, [r7, #12]
 800333e:	68fb      	ldr	r3, [r7, #12]
 8003340:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	6a1b      	ldr	r3, [r3, #32]
 8003348:	429a      	cmp	r2, r3
 800334a:	d106      	bne.n	800335a <HAL_RCC_OscConfig+0x4f2>
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003356:	429a      	cmp	r2, r3
 8003358:	d001      	beq.n	800335e <HAL_RCC_OscConfig+0x4f6>
 800335a:	2301      	movs	r3, #1
 800335c:	e000      	b.n	8003360 <HAL_RCC_OscConfig+0x4f8>
 800335e:	2300      	movs	r3, #0
 8003360:	4618      	mov	r0, r3
 8003362:	3718      	adds	r7, #24
 8003364:	46bd      	mov	sp, r7
 8003366:	bd80      	pop	{r7, pc}
 8003368:	40021000 	.word	0x40021000

0800336c <HAL_RCC_ClockConfig>:
 800336c:	b580      	push	{r7, lr}
 800336e:	b084      	sub	sp, #16
 8003370:	af00      	add	r7, sp, #0
 8003372:	6078      	str	r0, [r7, #4]
 8003374:	6039      	str	r1, [r7, #0]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	2b00      	cmp	r3, #0
 800337a:	d101      	bne.n	8003380 <HAL_RCC_ClockConfig+0x14>
 800337c:	2301      	movs	r3, #1
 800337e:	e0d0      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 8003380:	4b6a      	ldr	r3, [pc, #424]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	f003 0307 	and.w	r3, r3, #7
 8003388:	683a      	ldr	r2, [r7, #0]
 800338a:	429a      	cmp	r2, r3
 800338c:	d910      	bls.n	80033b0 <HAL_RCC_ClockConfig+0x44>
 800338e:	4b67      	ldr	r3, [pc, #412]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f023 0207 	bic.w	r2, r3, #7
 8003396:	4965      	ldr	r1, [pc, #404]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 8003398:	683b      	ldr	r3, [r7, #0]
 800339a:	4313      	orrs	r3, r2
 800339c:	600b      	str	r3, [r1, #0]
 800339e:	4b63      	ldr	r3, [pc, #396]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f003 0307 	and.w	r3, r3, #7
 80033a6:	683a      	ldr	r2, [r7, #0]
 80033a8:	429a      	cmp	r2, r3
 80033aa:	d001      	beq.n	80033b0 <HAL_RCC_ClockConfig+0x44>
 80033ac:	2301      	movs	r3, #1
 80033ae:	e0b8      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	f003 0302 	and.w	r3, r3, #2
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	d020      	beq.n	80033fe <HAL_RCC_ClockConfig+0x92>
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	681b      	ldr	r3, [r3, #0]
 80033c0:	f003 0304 	and.w	r3, r3, #4
 80033c4:	2b00      	cmp	r3, #0
 80033c6:	d005      	beq.n	80033d4 <HAL_RCC_ClockConfig+0x68>
 80033c8:	4b59      	ldr	r3, [pc, #356]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033ca:	685b      	ldr	r3, [r3, #4]
 80033cc:	4a58      	ldr	r2, [pc, #352]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033ce:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80033d2:	6053      	str	r3, [r2, #4]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f003 0308 	and.w	r3, r3, #8
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d005      	beq.n	80033ec <HAL_RCC_ClockConfig+0x80>
 80033e0:	4b53      	ldr	r3, [pc, #332]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033e2:	685b      	ldr	r3, [r3, #4]
 80033e4:	4a52      	ldr	r2, [pc, #328]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033e6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80033ea:	6053      	str	r3, [r2, #4]
 80033ec:	4b50      	ldr	r3, [pc, #320]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033ee:	685b      	ldr	r3, [r3, #4]
 80033f0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	689b      	ldr	r3, [r3, #8]
 80033f8:	494d      	ldr	r1, [pc, #308]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80033fa:	4313      	orrs	r3, r2
 80033fc:	604b      	str	r3, [r1, #4]
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	f003 0301 	and.w	r3, r3, #1
 8003406:	2b00      	cmp	r3, #0
 8003408:	d040      	beq.n	800348c <HAL_RCC_ClockConfig+0x120>
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	685b      	ldr	r3, [r3, #4]
 800340e:	2b01      	cmp	r3, #1
 8003410:	d107      	bne.n	8003422 <HAL_RCC_ClockConfig+0xb6>
 8003412:	4b47      	ldr	r3, [pc, #284]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800341a:	2b00      	cmp	r3, #0
 800341c:	d115      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 800341e:	2301      	movs	r3, #1
 8003420:	e07f      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	2b02      	cmp	r3, #2
 8003428:	d107      	bne.n	800343a <HAL_RCC_ClockConfig+0xce>
 800342a:	4b41      	ldr	r3, [pc, #260]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003432:	2b00      	cmp	r3, #0
 8003434:	d109      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 8003436:	2301      	movs	r3, #1
 8003438:	e073      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 800343a:	4b3d      	ldr	r3, [pc, #244]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f003 0302 	and.w	r3, r3, #2
 8003442:	2b00      	cmp	r3, #0
 8003444:	d101      	bne.n	800344a <HAL_RCC_ClockConfig+0xde>
 8003446:	2301      	movs	r3, #1
 8003448:	e06b      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 800344a:	4b39      	ldr	r3, [pc, #228]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 800344c:	685b      	ldr	r3, [r3, #4]
 800344e:	f023 0203 	bic.w	r2, r3, #3
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	685b      	ldr	r3, [r3, #4]
 8003456:	4936      	ldr	r1, [pc, #216]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 8003458:	4313      	orrs	r3, r2
 800345a:	604b      	str	r3, [r1, #4]
 800345c:	f7fe ff64 	bl	8002328 <HAL_GetTick>
 8003460:	60f8      	str	r0, [r7, #12]
 8003462:	e00a      	b.n	800347a <HAL_RCC_ClockConfig+0x10e>
 8003464:	f7fe ff60 	bl	8002328 <HAL_GetTick>
 8003468:	4602      	mov	r2, r0
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	1ad3      	subs	r3, r2, r3
 800346e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003472:	4293      	cmp	r3, r2
 8003474:	d901      	bls.n	800347a <HAL_RCC_ClockConfig+0x10e>
 8003476:	2303      	movs	r3, #3
 8003478:	e053      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 800347a:	4b2d      	ldr	r3, [pc, #180]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 800347c:	685b      	ldr	r3, [r3, #4]
 800347e:	f003 020c 	and.w	r2, r3, #12
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	685b      	ldr	r3, [r3, #4]
 8003486:	009b      	lsls	r3, r3, #2
 8003488:	429a      	cmp	r2, r3
 800348a:	d1eb      	bne.n	8003464 <HAL_RCC_ClockConfig+0xf8>
 800348c:	4b27      	ldr	r3, [pc, #156]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	f003 0307 	and.w	r3, r3, #7
 8003494:	683a      	ldr	r2, [r7, #0]
 8003496:	429a      	cmp	r2, r3
 8003498:	d210      	bcs.n	80034bc <HAL_RCC_ClockConfig+0x150>
 800349a:	4b24      	ldr	r3, [pc, #144]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	f023 0207 	bic.w	r2, r3, #7
 80034a2:	4922      	ldr	r1, [pc, #136]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 80034a4:	683b      	ldr	r3, [r7, #0]
 80034a6:	4313      	orrs	r3, r2
 80034a8:	600b      	str	r3, [r1, #0]
 80034aa:	4b20      	ldr	r3, [pc, #128]	; (800352c <HAL_RCC_ClockConfig+0x1c0>)
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	f003 0307 	and.w	r3, r3, #7
 80034b2:	683a      	ldr	r2, [r7, #0]
 80034b4:	429a      	cmp	r2, r3
 80034b6:	d001      	beq.n	80034bc <HAL_RCC_ClockConfig+0x150>
 80034b8:	2301      	movs	r3, #1
 80034ba:	e032      	b.n	8003522 <HAL_RCC_ClockConfig+0x1b6>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	f003 0304 	and.w	r3, r3, #4
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	d008      	beq.n	80034da <HAL_RCC_ClockConfig+0x16e>
 80034c8:	4b19      	ldr	r3, [pc, #100]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80034ca:	685b      	ldr	r3, [r3, #4]
 80034cc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	68db      	ldr	r3, [r3, #12]
 80034d4:	4916      	ldr	r1, [pc, #88]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80034d6:	4313      	orrs	r3, r2
 80034d8:	604b      	str	r3, [r1, #4]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	f003 0308 	and.w	r3, r3, #8
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d009      	beq.n	80034fa <HAL_RCC_ClockConfig+0x18e>
 80034e6:	4b12      	ldr	r3, [pc, #72]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80034e8:	685b      	ldr	r3, [r3, #4]
 80034ea:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	691b      	ldr	r3, [r3, #16]
 80034f2:	00db      	lsls	r3, r3, #3
 80034f4:	490e      	ldr	r1, [pc, #56]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 80034f6:	4313      	orrs	r3, r2
 80034f8:	604b      	str	r3, [r1, #4]
 80034fa:	f000 f821 	bl	8003540 <HAL_RCC_GetSysClockFreq>
 80034fe:	4602      	mov	r2, r0
 8003500:	4b0b      	ldr	r3, [pc, #44]	; (8003530 <HAL_RCC_ClockConfig+0x1c4>)
 8003502:	685b      	ldr	r3, [r3, #4]
 8003504:	091b      	lsrs	r3, r3, #4
 8003506:	f003 030f 	and.w	r3, r3, #15
 800350a:	490a      	ldr	r1, [pc, #40]	; (8003534 <HAL_RCC_ClockConfig+0x1c8>)
 800350c:	5ccb      	ldrb	r3, [r1, r3]
 800350e:	fa22 f303 	lsr.w	r3, r2, r3
 8003512:	4a09      	ldr	r2, [pc, #36]	; (8003538 <HAL_RCC_ClockConfig+0x1cc>)
 8003514:	6013      	str	r3, [r2, #0]
 8003516:	4b09      	ldr	r3, [pc, #36]	; (800353c <HAL_RCC_ClockConfig+0x1d0>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	4618      	mov	r0, r3
 800351c:	f7fe fec2 	bl	80022a4 <HAL_InitTick>
 8003520:	2300      	movs	r3, #0
 8003522:	4618      	mov	r0, r3
 8003524:	3710      	adds	r7, #16
 8003526:	46bd      	mov	sp, r7
 8003528:	bd80      	pop	{r7, pc}
 800352a:	bf00      	nop
 800352c:	40022000 	.word	0x40022000
 8003530:	40021000 	.word	0x40021000
 8003534:	08005400 	.word	0x08005400
 8003538:	2000046c 	.word	0x2000046c
 800353c:	20000470 	.word	0x20000470

08003540 <HAL_RCC_GetSysClockFreq>:
 8003540:	b490      	push	{r4, r7}
 8003542:	b08a      	sub	sp, #40	; 0x28
 8003544:	af00      	add	r7, sp, #0
 8003546:	4b29      	ldr	r3, [pc, #164]	; (80035ec <HAL_RCC_GetSysClockFreq+0xac>)
 8003548:	1d3c      	adds	r4, r7, #4
 800354a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800354c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003550:	f240 2301 	movw	r3, #513	; 0x201
 8003554:	803b      	strh	r3, [r7, #0]
 8003556:	2300      	movs	r3, #0
 8003558:	61fb      	str	r3, [r7, #28]
 800355a:	2300      	movs	r3, #0
 800355c:	61bb      	str	r3, [r7, #24]
 800355e:	2300      	movs	r3, #0
 8003560:	627b      	str	r3, [r7, #36]	; 0x24
 8003562:	2300      	movs	r3, #0
 8003564:	617b      	str	r3, [r7, #20]
 8003566:	2300      	movs	r3, #0
 8003568:	623b      	str	r3, [r7, #32]
 800356a:	4b21      	ldr	r3, [pc, #132]	; (80035f0 <HAL_RCC_GetSysClockFreq+0xb0>)
 800356c:	685b      	ldr	r3, [r3, #4]
 800356e:	61fb      	str	r3, [r7, #28]
 8003570:	69fb      	ldr	r3, [r7, #28]
 8003572:	f003 030c 	and.w	r3, r3, #12
 8003576:	2b04      	cmp	r3, #4
 8003578:	d002      	beq.n	8003580 <HAL_RCC_GetSysClockFreq+0x40>
 800357a:	2b08      	cmp	r3, #8
 800357c:	d003      	beq.n	8003586 <HAL_RCC_GetSysClockFreq+0x46>
 800357e:	e02b      	b.n	80035d8 <HAL_RCC_GetSysClockFreq+0x98>
 8003580:	4b1c      	ldr	r3, [pc, #112]	; (80035f4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003582:	623b      	str	r3, [r7, #32]
 8003584:	e02b      	b.n	80035de <HAL_RCC_GetSysClockFreq+0x9e>
 8003586:	69fb      	ldr	r3, [r7, #28]
 8003588:	0c9b      	lsrs	r3, r3, #18
 800358a:	f003 030f 	and.w	r3, r3, #15
 800358e:	3328      	adds	r3, #40	; 0x28
 8003590:	443b      	add	r3, r7
 8003592:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8003596:	617b      	str	r3, [r7, #20]
 8003598:	69fb      	ldr	r3, [r7, #28]
 800359a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d012      	beq.n	80035c8 <HAL_RCC_GetSysClockFreq+0x88>
 80035a2:	4b13      	ldr	r3, [pc, #76]	; (80035f0 <HAL_RCC_GetSysClockFreq+0xb0>)
 80035a4:	685b      	ldr	r3, [r3, #4]
 80035a6:	0c5b      	lsrs	r3, r3, #17
 80035a8:	f003 0301 	and.w	r3, r3, #1
 80035ac:	3328      	adds	r3, #40	; 0x28
 80035ae:	443b      	add	r3, r7
 80035b0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80035b4:	61bb      	str	r3, [r7, #24]
 80035b6:	697b      	ldr	r3, [r7, #20]
 80035b8:	4a0e      	ldr	r2, [pc, #56]	; (80035f4 <HAL_RCC_GetSysClockFreq+0xb4>)
 80035ba:	fb03 f202 	mul.w	r2, r3, r2
 80035be:	69bb      	ldr	r3, [r7, #24]
 80035c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80035c4:	627b      	str	r3, [r7, #36]	; 0x24
 80035c6:	e004      	b.n	80035d2 <HAL_RCC_GetSysClockFreq+0x92>
 80035c8:	697b      	ldr	r3, [r7, #20]
 80035ca:	4a0b      	ldr	r2, [pc, #44]	; (80035f8 <HAL_RCC_GetSysClockFreq+0xb8>)
 80035cc:	fb02 f303 	mul.w	r3, r2, r3
 80035d0:	627b      	str	r3, [r7, #36]	; 0x24
 80035d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035d4:	623b      	str	r3, [r7, #32]
 80035d6:	e002      	b.n	80035de <HAL_RCC_GetSysClockFreq+0x9e>
 80035d8:	4b08      	ldr	r3, [pc, #32]	; (80035fc <HAL_RCC_GetSysClockFreq+0xbc>)
 80035da:	623b      	str	r3, [r7, #32]
 80035dc:	bf00      	nop
 80035de:	6a3b      	ldr	r3, [r7, #32]
 80035e0:	4618      	mov	r0, r3
 80035e2:	3728      	adds	r7, #40	; 0x28
 80035e4:	46bd      	mov	sp, r7
 80035e6:	bc90      	pop	{r4, r7}
 80035e8:	4770      	bx	lr
 80035ea:	bf00      	nop
 80035ec:	080053f0 	.word	0x080053f0
 80035f0:	40021000 	.word	0x40021000
 80035f4:	00b71b00 	.word	0x00b71b00
 80035f8:	003d0900 	.word	0x003d0900
 80035fc:	007a1200 	.word	0x007a1200

08003600 <HAL_RCC_GetHCLKFreq>:
 8003600:	b480      	push	{r7}
 8003602:	af00      	add	r7, sp, #0
 8003604:	4b02      	ldr	r3, [pc, #8]	; (8003610 <HAL_RCC_GetHCLKFreq+0x10>)
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	4618      	mov	r0, r3
 800360a:	46bd      	mov	sp, r7
 800360c:	bc80      	pop	{r7}
 800360e:	4770      	bx	lr
 8003610:	2000046c 	.word	0x2000046c

08003614 <HAL_RCC_GetPCLK1Freq>:
 8003614:	b580      	push	{r7, lr}
 8003616:	af00      	add	r7, sp, #0
 8003618:	f7ff fff2 	bl	8003600 <HAL_RCC_GetHCLKFreq>
 800361c:	4602      	mov	r2, r0
 800361e:	4b05      	ldr	r3, [pc, #20]	; (8003634 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	0a1b      	lsrs	r3, r3, #8
 8003624:	f003 0307 	and.w	r3, r3, #7
 8003628:	4903      	ldr	r1, [pc, #12]	; (8003638 <HAL_RCC_GetPCLK1Freq+0x24>)
 800362a:	5ccb      	ldrb	r3, [r1, r3]
 800362c:	fa22 f303 	lsr.w	r3, r2, r3
 8003630:	4618      	mov	r0, r3
 8003632:	bd80      	pop	{r7, pc}
 8003634:	40021000 	.word	0x40021000
 8003638:	08005410 	.word	0x08005410

0800363c <HAL_RCC_GetPCLK2Freq>:
 800363c:	b580      	push	{r7, lr}
 800363e:	af00      	add	r7, sp, #0
 8003640:	f7ff ffde 	bl	8003600 <HAL_RCC_GetHCLKFreq>
 8003644:	4602      	mov	r2, r0
 8003646:	4b05      	ldr	r3, [pc, #20]	; (800365c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003648:	685b      	ldr	r3, [r3, #4]
 800364a:	0adb      	lsrs	r3, r3, #11
 800364c:	f003 0307 	and.w	r3, r3, #7
 8003650:	4903      	ldr	r1, [pc, #12]	; (8003660 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003652:	5ccb      	ldrb	r3, [r1, r3]
 8003654:	fa22 f303 	lsr.w	r3, r2, r3
 8003658:	4618      	mov	r0, r3
 800365a:	bd80      	pop	{r7, pc}
 800365c:	40021000 	.word	0x40021000
 8003660:	08005410 	.word	0x08005410

08003664 <RCC_Delay>:
 8003664:	b480      	push	{r7}
 8003666:	b085      	sub	sp, #20
 8003668:	af00      	add	r7, sp, #0
 800366a:	6078      	str	r0, [r7, #4]
 800366c:	4b0a      	ldr	r3, [pc, #40]	; (8003698 <RCC_Delay+0x34>)
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	4a0a      	ldr	r2, [pc, #40]	; (800369c <RCC_Delay+0x38>)
 8003672:	fba2 2303 	umull	r2, r3, r2, r3
 8003676:	0a5b      	lsrs	r3, r3, #9
 8003678:	687a      	ldr	r2, [r7, #4]
 800367a:	fb02 f303 	mul.w	r3, r2, r3
 800367e:	60fb      	str	r3, [r7, #12]
 8003680:	bf00      	nop
 8003682:	68fb      	ldr	r3, [r7, #12]
 8003684:	1e5a      	subs	r2, r3, #1
 8003686:	60fa      	str	r2, [r7, #12]
 8003688:	2b00      	cmp	r3, #0
 800368a:	d1f9      	bne.n	8003680 <RCC_Delay+0x1c>
 800368c:	bf00      	nop
 800368e:	bf00      	nop
 8003690:	3714      	adds	r7, #20
 8003692:	46bd      	mov	sp, r7
 8003694:	bc80      	pop	{r7}
 8003696:	4770      	bx	lr
 8003698:	2000046c 	.word	0x2000046c
 800369c:	10624dd3 	.word	0x10624dd3

080036a0 <HAL_SPI_Init>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b082      	sub	sp, #8
 80036a4:	af00      	add	r7, sp, #0
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	d101      	bne.n	80036b2 <HAL_SPI_Init+0x12>
 80036ae:	2301      	movs	r3, #1
 80036b0:	e076      	b.n	80037a0 <HAL_SPI_Init+0x100>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	d108      	bne.n	80036cc <HAL_SPI_Init+0x2c>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	685b      	ldr	r3, [r3, #4]
 80036be:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80036c2:	d009      	beq.n	80036d8 <HAL_SPI_Init+0x38>
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	2200      	movs	r2, #0
 80036c8:	61da      	str	r2, [r3, #28]
 80036ca:	e005      	b.n	80036d8 <HAL_SPI_Init+0x38>
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	2200      	movs	r2, #0
 80036d0:	611a      	str	r2, [r3, #16]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	2200      	movs	r2, #0
 80036d6:	615a      	str	r2, [r3, #20]
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2200      	movs	r2, #0
 80036dc:	629a      	str	r2, [r3, #40]	; 0x28
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80036e4:	b2db      	uxtb	r3, r3
 80036e6:	2b00      	cmp	r3, #0
 80036e8:	d106      	bne.n	80036f8 <HAL_SPI_Init+0x58>
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	2200      	movs	r2, #0
 80036ee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80036f2:	6878      	ldr	r0, [r7, #4]
 80036f4:	f7fe fc32 	bl	8001f5c <HAL_SPI_MspInit>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	2202      	movs	r2, #2
 80036fc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	681a      	ldr	r2, [r3, #0]
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800370e:	601a      	str	r2, [r3, #0]
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	685b      	ldr	r3, [r3, #4]
 8003714:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	689b      	ldr	r3, [r3, #8]
 800371c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8003720:	431a      	orrs	r2, r3
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	68db      	ldr	r3, [r3, #12]
 8003726:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800372a:	431a      	orrs	r2, r3
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	691b      	ldr	r3, [r3, #16]
 8003730:	f003 0302 	and.w	r3, r3, #2
 8003734:	431a      	orrs	r2, r3
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	695b      	ldr	r3, [r3, #20]
 800373a:	f003 0301 	and.w	r3, r3, #1
 800373e:	431a      	orrs	r2, r3
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	699b      	ldr	r3, [r3, #24]
 8003744:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003748:	431a      	orrs	r2, r3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	69db      	ldr	r3, [r3, #28]
 800374e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8003752:	431a      	orrs	r2, r3
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	6a1b      	ldr	r3, [r3, #32]
 8003758:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800375c:	ea42 0103 	orr.w	r1, r2, r3
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003764:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	430a      	orrs	r2, r1
 800376e:	601a      	str	r2, [r3, #0]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	699b      	ldr	r3, [r3, #24]
 8003774:	0c1a      	lsrs	r2, r3, #16
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	f002 0204 	and.w	r2, r2, #4
 800377e:	605a      	str	r2, [r3, #4]
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	69da      	ldr	r2, [r3, #28]
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800378e:	61da      	str	r2, [r3, #28]
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	2200      	movs	r2, #0
 8003794:	655a      	str	r2, [r3, #84]	; 0x54
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	2201      	movs	r2, #1
 800379a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800379e:	2300      	movs	r3, #0
 80037a0:	4618      	mov	r0, r3
 80037a2:	3708      	adds	r7, #8
 80037a4:	46bd      	mov	sp, r7
 80037a6:	bd80      	pop	{r7, pc}

080037a8 <HAL_SPI_Transmit>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b088      	sub	sp, #32
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	60f8      	str	r0, [r7, #12]
 80037b0:	60b9      	str	r1, [r7, #8]
 80037b2:	603b      	str	r3, [r7, #0]
 80037b4:	4613      	mov	r3, r2
 80037b6:	80fb      	strh	r3, [r7, #6]
 80037b8:	2300      	movs	r3, #0
 80037ba:	77fb      	strb	r3, [r7, #31]
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80037c2:	2b01      	cmp	r3, #1
 80037c4:	d101      	bne.n	80037ca <HAL_SPI_Transmit+0x22>
 80037c6:	2302      	movs	r3, #2
 80037c8:	e126      	b.n	8003a18 <HAL_SPI_Transmit+0x270>
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	2201      	movs	r2, #1
 80037ce:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80037d2:	f7fe fda9 	bl	8002328 <HAL_GetTick>
 80037d6:	61b8      	str	r0, [r7, #24]
 80037d8:	88fb      	ldrh	r3, [r7, #6]
 80037da:	82fb      	strh	r3, [r7, #22]
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80037e2:	b2db      	uxtb	r3, r3
 80037e4:	2b01      	cmp	r3, #1
 80037e6:	d002      	beq.n	80037ee <HAL_SPI_Transmit+0x46>
 80037e8:	2302      	movs	r3, #2
 80037ea:	77fb      	strb	r3, [r7, #31]
 80037ec:	e10b      	b.n	8003a06 <HAL_SPI_Transmit+0x25e>
 80037ee:	68bb      	ldr	r3, [r7, #8]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d002      	beq.n	80037fa <HAL_SPI_Transmit+0x52>
 80037f4:	88fb      	ldrh	r3, [r7, #6]
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	d102      	bne.n	8003800 <HAL_SPI_Transmit+0x58>
 80037fa:	2301      	movs	r3, #1
 80037fc:	77fb      	strb	r3, [r7, #31]
 80037fe:	e102      	b.n	8003a06 <HAL_SPI_Transmit+0x25e>
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	2203      	movs	r2, #3
 8003804:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	2200      	movs	r2, #0
 800380c:	655a      	str	r2, [r3, #84]	; 0x54
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	68ba      	ldr	r2, [r7, #8]
 8003812:	631a      	str	r2, [r3, #48]	; 0x30
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	88fa      	ldrh	r2, [r7, #6]
 8003818:	869a      	strh	r2, [r3, #52]	; 0x34
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	88fa      	ldrh	r2, [r7, #6]
 800381e:	86da      	strh	r2, [r3, #54]	; 0x36
 8003820:	68fb      	ldr	r3, [r7, #12]
 8003822:	2200      	movs	r2, #0
 8003824:	639a      	str	r2, [r3, #56]	; 0x38
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	2200      	movs	r2, #0
 800382a:	879a      	strh	r2, [r3, #60]	; 0x3c
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	2200      	movs	r2, #0
 8003830:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	2200      	movs	r2, #0
 8003836:	645a      	str	r2, [r3, #68]	; 0x44
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	2200      	movs	r2, #0
 800383c:	641a      	str	r2, [r3, #64]	; 0x40
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	689b      	ldr	r3, [r3, #8]
 8003842:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003846:	d10f      	bne.n	8003868 <HAL_SPI_Transmit+0xc0>
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	681a      	ldr	r2, [r3, #0]
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003856:	601a      	str	r2, [r3, #0]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	681a      	ldr	r2, [r3, #0]
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003866:	601a      	str	r2, [r3, #0]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003872:	2b40      	cmp	r3, #64	; 0x40
 8003874:	d007      	beq.n	8003886 <HAL_SPI_Transmit+0xde>
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	681a      	ldr	r2, [r3, #0]
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003884:	601a      	str	r2, [r3, #0]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	68db      	ldr	r3, [r3, #12]
 800388a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800388e:	d14b      	bne.n	8003928 <HAL_SPI_Transmit+0x180>
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	685b      	ldr	r3, [r3, #4]
 8003894:	2b00      	cmp	r3, #0
 8003896:	d002      	beq.n	800389e <HAL_SPI_Transmit+0xf6>
 8003898:	8afb      	ldrh	r3, [r7, #22]
 800389a:	2b01      	cmp	r3, #1
 800389c:	d13e      	bne.n	800391c <HAL_SPI_Transmit+0x174>
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038a2:	881a      	ldrh	r2, [r3, #0]
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	60da      	str	r2, [r3, #12]
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ae:	1c9a      	adds	r2, r3, #2
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	631a      	str	r2, [r3, #48]	; 0x30
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80038b8:	b29b      	uxth	r3, r3
 80038ba:	3b01      	subs	r3, #1
 80038bc:	b29a      	uxth	r2, r3
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	86da      	strh	r2, [r3, #54]	; 0x36
 80038c2:	e02b      	b.n	800391c <HAL_SPI_Transmit+0x174>
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	689b      	ldr	r3, [r3, #8]
 80038ca:	f003 0302 	and.w	r3, r3, #2
 80038ce:	2b02      	cmp	r3, #2
 80038d0:	d112      	bne.n	80038f8 <HAL_SPI_Transmit+0x150>
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038d6:	881a      	ldrh	r2, [r3, #0]
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	60da      	str	r2, [r3, #12]
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038e2:	1c9a      	adds	r2, r3, #2
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	631a      	str	r2, [r3, #48]	; 0x30
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80038ec:	b29b      	uxth	r3, r3
 80038ee:	3b01      	subs	r3, #1
 80038f0:	b29a      	uxth	r2, r3
 80038f2:	68fb      	ldr	r3, [r7, #12]
 80038f4:	86da      	strh	r2, [r3, #54]	; 0x36
 80038f6:	e011      	b.n	800391c <HAL_SPI_Transmit+0x174>
 80038f8:	f7fe fd16 	bl	8002328 <HAL_GetTick>
 80038fc:	4602      	mov	r2, r0
 80038fe:	69bb      	ldr	r3, [r7, #24]
 8003900:	1ad3      	subs	r3, r2, r3
 8003902:	683a      	ldr	r2, [r7, #0]
 8003904:	429a      	cmp	r2, r3
 8003906:	d803      	bhi.n	8003910 <HAL_SPI_Transmit+0x168>
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800390e:	d102      	bne.n	8003916 <HAL_SPI_Transmit+0x16e>
 8003910:	683b      	ldr	r3, [r7, #0]
 8003912:	2b00      	cmp	r3, #0
 8003914:	d102      	bne.n	800391c <HAL_SPI_Transmit+0x174>
 8003916:	2303      	movs	r3, #3
 8003918:	77fb      	strb	r3, [r7, #31]
 800391a:	e074      	b.n	8003a06 <HAL_SPI_Transmit+0x25e>
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003920:	b29b      	uxth	r3, r3
 8003922:	2b00      	cmp	r3, #0
 8003924:	d1ce      	bne.n	80038c4 <HAL_SPI_Transmit+0x11c>
 8003926:	e04c      	b.n	80039c2 <HAL_SPI_Transmit+0x21a>
 8003928:	68fb      	ldr	r3, [r7, #12]
 800392a:	685b      	ldr	r3, [r3, #4]
 800392c:	2b00      	cmp	r3, #0
 800392e:	d002      	beq.n	8003936 <HAL_SPI_Transmit+0x18e>
 8003930:	8afb      	ldrh	r3, [r7, #22]
 8003932:	2b01      	cmp	r3, #1
 8003934:	d140      	bne.n	80039b8 <HAL_SPI_Transmit+0x210>
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	330c      	adds	r3, #12
 8003940:	7812      	ldrb	r2, [r2, #0]
 8003942:	701a      	strb	r2, [r3, #0]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003948:	1c5a      	adds	r2, r3, #1
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	631a      	str	r2, [r3, #48]	; 0x30
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003952:	b29b      	uxth	r3, r3
 8003954:	3b01      	subs	r3, #1
 8003956:	b29a      	uxth	r2, r3
 8003958:	68fb      	ldr	r3, [r7, #12]
 800395a:	86da      	strh	r2, [r3, #54]	; 0x36
 800395c:	e02c      	b.n	80039b8 <HAL_SPI_Transmit+0x210>
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	689b      	ldr	r3, [r3, #8]
 8003964:	f003 0302 	and.w	r3, r3, #2
 8003968:	2b02      	cmp	r3, #2
 800396a:	d113      	bne.n	8003994 <HAL_SPI_Transmit+0x1ec>
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	330c      	adds	r3, #12
 8003976:	7812      	ldrb	r2, [r2, #0]
 8003978:	701a      	strb	r2, [r3, #0]
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800397e:	1c5a      	adds	r2, r3, #1
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	631a      	str	r2, [r3, #48]	; 0x30
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003988:	b29b      	uxth	r3, r3
 800398a:	3b01      	subs	r3, #1
 800398c:	b29a      	uxth	r2, r3
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	86da      	strh	r2, [r3, #54]	; 0x36
 8003992:	e011      	b.n	80039b8 <HAL_SPI_Transmit+0x210>
 8003994:	f7fe fcc8 	bl	8002328 <HAL_GetTick>
 8003998:	4602      	mov	r2, r0
 800399a:	69bb      	ldr	r3, [r7, #24]
 800399c:	1ad3      	subs	r3, r2, r3
 800399e:	683a      	ldr	r2, [r7, #0]
 80039a0:	429a      	cmp	r2, r3
 80039a2:	d803      	bhi.n	80039ac <HAL_SPI_Transmit+0x204>
 80039a4:	683b      	ldr	r3, [r7, #0]
 80039a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039aa:	d102      	bne.n	80039b2 <HAL_SPI_Transmit+0x20a>
 80039ac:	683b      	ldr	r3, [r7, #0]
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d102      	bne.n	80039b8 <HAL_SPI_Transmit+0x210>
 80039b2:	2303      	movs	r3, #3
 80039b4:	77fb      	strb	r3, [r7, #31]
 80039b6:	e026      	b.n	8003a06 <HAL_SPI_Transmit+0x25e>
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80039bc:	b29b      	uxth	r3, r3
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d1cd      	bne.n	800395e <HAL_SPI_Transmit+0x1b6>
 80039c2:	69ba      	ldr	r2, [r7, #24]
 80039c4:	6839      	ldr	r1, [r7, #0]
 80039c6:	68f8      	ldr	r0, [r7, #12]
 80039c8:	f000 fb58 	bl	800407c <SPI_EndRxTxTransaction>
 80039cc:	4603      	mov	r3, r0
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d002      	beq.n	80039d8 <HAL_SPI_Transmit+0x230>
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	2220      	movs	r2, #32
 80039d6:	655a      	str	r2, [r3, #84]	; 0x54
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	689b      	ldr	r3, [r3, #8]
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d10a      	bne.n	80039f6 <HAL_SPI_Transmit+0x24e>
 80039e0:	2300      	movs	r3, #0
 80039e2:	613b      	str	r3, [r7, #16]
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	68db      	ldr	r3, [r3, #12]
 80039ea:	613b      	str	r3, [r7, #16]
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	689b      	ldr	r3, [r3, #8]
 80039f2:	613b      	str	r3, [r7, #16]
 80039f4:	693b      	ldr	r3, [r7, #16]
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80039fa:	2b00      	cmp	r3, #0
 80039fc:	d002      	beq.n	8003a04 <HAL_SPI_Transmit+0x25c>
 80039fe:	2301      	movs	r3, #1
 8003a00:	77fb      	strb	r3, [r7, #31]
 8003a02:	e000      	b.n	8003a06 <HAL_SPI_Transmit+0x25e>
 8003a04:	bf00      	nop
 8003a06:	68fb      	ldr	r3, [r7, #12]
 8003a08:	2201      	movs	r2, #1
 8003a0a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003a0e:	68fb      	ldr	r3, [r7, #12]
 8003a10:	2200      	movs	r2, #0
 8003a12:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003a16:	7ffb      	ldrb	r3, [r7, #31]
 8003a18:	4618      	mov	r0, r3
 8003a1a:	3720      	adds	r7, #32
 8003a1c:	46bd      	mov	sp, r7
 8003a1e:	bd80      	pop	{r7, pc}

08003a20 <HAL_SPI_TransmitReceive>:
 8003a20:	b580      	push	{r7, lr}
 8003a22:	b08c      	sub	sp, #48	; 0x30
 8003a24:	af00      	add	r7, sp, #0
 8003a26:	60f8      	str	r0, [r7, #12]
 8003a28:	60b9      	str	r1, [r7, #8]
 8003a2a:	607a      	str	r2, [r7, #4]
 8003a2c:	807b      	strh	r3, [r7, #2]
 8003a2e:	2301      	movs	r3, #1
 8003a30:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003a32:	2300      	movs	r3, #0
 8003a34:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003a3e:	2b01      	cmp	r3, #1
 8003a40:	d101      	bne.n	8003a46 <HAL_SPI_TransmitReceive+0x26>
 8003a42:	2302      	movs	r3, #2
 8003a44:	e18a      	b.n	8003d5c <HAL_SPI_TransmitReceive+0x33c>
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	2201      	movs	r2, #1
 8003a4a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003a4e:	f7fe fc6b 	bl	8002328 <HAL_GetTick>
 8003a52:	6278      	str	r0, [r7, #36]	; 0x24
 8003a54:	68fb      	ldr	r3, [r7, #12]
 8003a56:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003a5a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8003a5e:	68fb      	ldr	r3, [r7, #12]
 8003a60:	685b      	ldr	r3, [r3, #4]
 8003a62:	61fb      	str	r3, [r7, #28]
 8003a64:	887b      	ldrh	r3, [r7, #2]
 8003a66:	837b      	strh	r3, [r7, #26]
 8003a68:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003a6c:	2b01      	cmp	r3, #1
 8003a6e:	d00f      	beq.n	8003a90 <HAL_SPI_TransmitReceive+0x70>
 8003a70:	69fb      	ldr	r3, [r7, #28]
 8003a72:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003a76:	d107      	bne.n	8003a88 <HAL_SPI_TransmitReceive+0x68>
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	689b      	ldr	r3, [r3, #8]
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d103      	bne.n	8003a88 <HAL_SPI_TransmitReceive+0x68>
 8003a80:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003a84:	2b04      	cmp	r3, #4
 8003a86:	d003      	beq.n	8003a90 <HAL_SPI_TransmitReceive+0x70>
 8003a88:	2302      	movs	r3, #2
 8003a8a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003a8e:	e15b      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003a90:	68bb      	ldr	r3, [r7, #8]
 8003a92:	2b00      	cmp	r3, #0
 8003a94:	d005      	beq.n	8003aa2 <HAL_SPI_TransmitReceive+0x82>
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d002      	beq.n	8003aa2 <HAL_SPI_TransmitReceive+0x82>
 8003a9c:	887b      	ldrh	r3, [r7, #2]
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d103      	bne.n	8003aaa <HAL_SPI_TransmitReceive+0x8a>
 8003aa2:	2301      	movs	r3, #1
 8003aa4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003aa8:	e14e      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003ab0:	b2db      	uxtb	r3, r3
 8003ab2:	2b04      	cmp	r3, #4
 8003ab4:	d003      	beq.n	8003abe <HAL_SPI_TransmitReceive+0x9e>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	2205      	movs	r2, #5
 8003aba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	2200      	movs	r2, #0
 8003ac2:	655a      	str	r2, [r3, #84]	; 0x54
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	687a      	ldr	r2, [r7, #4]
 8003ac8:	639a      	str	r2, [r3, #56]	; 0x38
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	887a      	ldrh	r2, [r7, #2]
 8003ace:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	887a      	ldrh	r2, [r7, #2]
 8003ad4:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003ad6:	68fb      	ldr	r3, [r7, #12]
 8003ad8:	68ba      	ldr	r2, [r7, #8]
 8003ada:	631a      	str	r2, [r3, #48]	; 0x30
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	887a      	ldrh	r2, [r7, #2]
 8003ae0:	86da      	strh	r2, [r3, #54]	; 0x36
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	887a      	ldrh	r2, [r7, #2]
 8003ae6:	869a      	strh	r2, [r3, #52]	; 0x34
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	2200      	movs	r2, #0
 8003aec:	641a      	str	r2, [r3, #64]	; 0x40
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	2200      	movs	r2, #0
 8003af2:	645a      	str	r2, [r3, #68]	; 0x44
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003afe:	2b40      	cmp	r3, #64	; 0x40
 8003b00:	d007      	beq.n	8003b12 <HAL_SPI_TransmitReceive+0xf2>
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	681a      	ldr	r2, [r3, #0]
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003b10:	601a      	str	r2, [r3, #0]
 8003b12:	68fb      	ldr	r3, [r7, #12]
 8003b14:	68db      	ldr	r3, [r3, #12]
 8003b16:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003b1a:	d178      	bne.n	8003c0e <HAL_SPI_TransmitReceive+0x1ee>
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	685b      	ldr	r3, [r3, #4]
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	d002      	beq.n	8003b2a <HAL_SPI_TransmitReceive+0x10a>
 8003b24:	8b7b      	ldrh	r3, [r7, #26]
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	d166      	bne.n	8003bf8 <HAL_SPI_TransmitReceive+0x1d8>
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b2e:	881a      	ldrh	r2, [r3, #0]
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	60da      	str	r2, [r3, #12]
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b3a:	1c9a      	adds	r2, r3, #2
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	631a      	str	r2, [r3, #48]	; 0x30
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003b44:	b29b      	uxth	r3, r3
 8003b46:	3b01      	subs	r3, #1
 8003b48:	b29a      	uxth	r2, r3
 8003b4a:	68fb      	ldr	r3, [r7, #12]
 8003b4c:	86da      	strh	r2, [r3, #54]	; 0x36
 8003b4e:	e053      	b.n	8003bf8 <HAL_SPI_TransmitReceive+0x1d8>
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	689b      	ldr	r3, [r3, #8]
 8003b56:	f003 0302 	and.w	r3, r3, #2
 8003b5a:	2b02      	cmp	r3, #2
 8003b5c:	d11b      	bne.n	8003b96 <HAL_SPI_TransmitReceive+0x176>
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003b62:	b29b      	uxth	r3, r3
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d016      	beq.n	8003b96 <HAL_SPI_TransmitReceive+0x176>
 8003b68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b6a:	2b01      	cmp	r3, #1
 8003b6c:	d113      	bne.n	8003b96 <HAL_SPI_TransmitReceive+0x176>
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b72:	881a      	ldrh	r2, [r3, #0]
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	60da      	str	r2, [r3, #12]
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b7e:	1c9a      	adds	r2, r3, #2
 8003b80:	68fb      	ldr	r3, [r7, #12]
 8003b82:	631a      	str	r2, [r3, #48]	; 0x30
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003b88:	b29b      	uxth	r3, r3
 8003b8a:	3b01      	subs	r3, #1
 8003b8c:	b29a      	uxth	r2, r3
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	86da      	strh	r2, [r3, #54]	; 0x36
 8003b92:	2300      	movs	r3, #0
 8003b94:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	689b      	ldr	r3, [r3, #8]
 8003b9c:	f003 0301 	and.w	r3, r3, #1
 8003ba0:	2b01      	cmp	r3, #1
 8003ba2:	d119      	bne.n	8003bd8 <HAL_SPI_TransmitReceive+0x1b8>
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003ba8:	b29b      	uxth	r3, r3
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d014      	beq.n	8003bd8 <HAL_SPI_TransmitReceive+0x1b8>
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	68da      	ldr	r2, [r3, #12]
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003bb8:	b292      	uxth	r2, r2
 8003bba:	801a      	strh	r2, [r3, #0]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003bc0:	1c9a      	adds	r2, r3, #2
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	639a      	str	r2, [r3, #56]	; 0x38
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003bca:	b29b      	uxth	r3, r3
 8003bcc:	3b01      	subs	r3, #1
 8003bce:	b29a      	uxth	r2, r3
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003bd4:	2301      	movs	r3, #1
 8003bd6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bd8:	f7fe fba6 	bl	8002328 <HAL_GetTick>
 8003bdc:	4602      	mov	r2, r0
 8003bde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003be0:	1ad3      	subs	r3, r2, r3
 8003be2:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003be4:	429a      	cmp	r2, r3
 8003be6:	d807      	bhi.n	8003bf8 <HAL_SPI_TransmitReceive+0x1d8>
 8003be8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003bea:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003bee:	d003      	beq.n	8003bf8 <HAL_SPI_TransmitReceive+0x1d8>
 8003bf0:	2303      	movs	r3, #3
 8003bf2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003bf6:	e0a7      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003bfc:	b29b      	uxth	r3, r3
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d1a6      	bne.n	8003b50 <HAL_SPI_TransmitReceive+0x130>
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c06:	b29b      	uxth	r3, r3
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d1a1      	bne.n	8003b50 <HAL_SPI_TransmitReceive+0x130>
 8003c0c:	e07c      	b.n	8003d08 <HAL_SPI_TransmitReceive+0x2e8>
 8003c0e:	68fb      	ldr	r3, [r7, #12]
 8003c10:	685b      	ldr	r3, [r3, #4]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d002      	beq.n	8003c1c <HAL_SPI_TransmitReceive+0x1fc>
 8003c16:	8b7b      	ldrh	r3, [r7, #26]
 8003c18:	2b01      	cmp	r3, #1
 8003c1a:	d16b      	bne.n	8003cf4 <HAL_SPI_TransmitReceive+0x2d4>
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	330c      	adds	r3, #12
 8003c26:	7812      	ldrb	r2, [r2, #0]
 8003c28:	701a      	strb	r2, [r3, #0]
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c2e:	1c5a      	adds	r2, r3, #1
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	631a      	str	r2, [r3, #48]	; 0x30
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003c38:	b29b      	uxth	r3, r3
 8003c3a:	3b01      	subs	r3, #1
 8003c3c:	b29a      	uxth	r2, r3
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	86da      	strh	r2, [r3, #54]	; 0x36
 8003c42:	e057      	b.n	8003cf4 <HAL_SPI_TransmitReceive+0x2d4>
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	689b      	ldr	r3, [r3, #8]
 8003c4a:	f003 0302 	and.w	r3, r3, #2
 8003c4e:	2b02      	cmp	r3, #2
 8003c50:	d11c      	bne.n	8003c8c <HAL_SPI_TransmitReceive+0x26c>
 8003c52:	68fb      	ldr	r3, [r7, #12]
 8003c54:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003c56:	b29b      	uxth	r3, r3
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d017      	beq.n	8003c8c <HAL_SPI_TransmitReceive+0x26c>
 8003c5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c5e:	2b01      	cmp	r3, #1
 8003c60:	d114      	bne.n	8003c8c <HAL_SPI_TransmitReceive+0x26c>
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	330c      	adds	r3, #12
 8003c6c:	7812      	ldrb	r2, [r2, #0]
 8003c6e:	701a      	strb	r2, [r3, #0]
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c74:	1c5a      	adds	r2, r3, #1
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	631a      	str	r2, [r3, #48]	; 0x30
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003c7e:	b29b      	uxth	r3, r3
 8003c80:	3b01      	subs	r3, #1
 8003c82:	b29a      	uxth	r2, r3
 8003c84:	68fb      	ldr	r3, [r7, #12]
 8003c86:	86da      	strh	r2, [r3, #54]	; 0x36
 8003c88:	2300      	movs	r3, #0
 8003c8a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	689b      	ldr	r3, [r3, #8]
 8003c92:	f003 0301 	and.w	r3, r3, #1
 8003c96:	2b01      	cmp	r3, #1
 8003c98:	d119      	bne.n	8003cce <HAL_SPI_TransmitReceive+0x2ae>
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003c9e:	b29b      	uxth	r3, r3
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d014      	beq.n	8003cce <HAL_SPI_TransmitReceive+0x2ae>
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	68da      	ldr	r2, [r3, #12]
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cae:	b2d2      	uxtb	r2, r2
 8003cb0:	701a      	strb	r2, [r3, #0]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cb6:	1c5a      	adds	r2, r3, #1
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	639a      	str	r2, [r3, #56]	; 0x38
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003cc0:	b29b      	uxth	r3, r3
 8003cc2:	3b01      	subs	r3, #1
 8003cc4:	b29a      	uxth	r2, r3
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003cca:	2301      	movs	r3, #1
 8003ccc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003cce:	f7fe fb2b 	bl	8002328 <HAL_GetTick>
 8003cd2:	4602      	mov	r2, r0
 8003cd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cd6:	1ad3      	subs	r3, r2, r3
 8003cd8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003cda:	429a      	cmp	r2, r3
 8003cdc:	d803      	bhi.n	8003ce6 <HAL_SPI_TransmitReceive+0x2c6>
 8003cde:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ce0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ce4:	d102      	bne.n	8003cec <HAL_SPI_TransmitReceive+0x2cc>
 8003ce6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d103      	bne.n	8003cf4 <HAL_SPI_TransmitReceive+0x2d4>
 8003cec:	2303      	movs	r3, #3
 8003cee:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003cf2:	e029      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003cf8:	b29b      	uxth	r3, r3
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d1a2      	bne.n	8003c44 <HAL_SPI_TransmitReceive+0x224>
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003d02:	b29b      	uxth	r3, r3
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d19d      	bne.n	8003c44 <HAL_SPI_TransmitReceive+0x224>
 8003d08:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003d0a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003d0c:	68f8      	ldr	r0, [r7, #12]
 8003d0e:	f000 f9b5 	bl	800407c <SPI_EndRxTxTransaction>
 8003d12:	4603      	mov	r3, r0
 8003d14:	2b00      	cmp	r3, #0
 8003d16:	d006      	beq.n	8003d26 <HAL_SPI_TransmitReceive+0x306>
 8003d18:	2301      	movs	r3, #1
 8003d1a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	2220      	movs	r2, #32
 8003d22:	655a      	str	r2, [r3, #84]	; 0x54
 8003d24:	e010      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003d26:	68fb      	ldr	r3, [r7, #12]
 8003d28:	689b      	ldr	r3, [r3, #8]
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d10b      	bne.n	8003d46 <HAL_SPI_TransmitReceive+0x326>
 8003d2e:	2300      	movs	r3, #0
 8003d30:	617b      	str	r3, [r7, #20]
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	68db      	ldr	r3, [r3, #12]
 8003d38:	617b      	str	r3, [r7, #20]
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	689b      	ldr	r3, [r3, #8]
 8003d40:	617b      	str	r3, [r7, #20]
 8003d42:	697b      	ldr	r3, [r7, #20]
 8003d44:	e000      	b.n	8003d48 <HAL_SPI_TransmitReceive+0x328>
 8003d46:	bf00      	nop
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	2201      	movs	r2, #1
 8003d4c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	2200      	movs	r2, #0
 8003d54:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003d58:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	3730      	adds	r7, #48	; 0x30
 8003d60:	46bd      	mov	sp, r7
 8003d62:	bd80      	pop	{r7, pc}

08003d64 <HAL_SPI_IRQHandler>:
 8003d64:	b580      	push	{r7, lr}
 8003d66:	b088      	sub	sp, #32
 8003d68:	af00      	add	r7, sp, #0
 8003d6a:	6078      	str	r0, [r7, #4]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	685b      	ldr	r3, [r3, #4]
 8003d72:	61fb      	str	r3, [r7, #28]
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	689b      	ldr	r3, [r3, #8]
 8003d7a:	61bb      	str	r3, [r7, #24]
 8003d7c:	69bb      	ldr	r3, [r7, #24]
 8003d7e:	099b      	lsrs	r3, r3, #6
 8003d80:	f003 0301 	and.w	r3, r3, #1
 8003d84:	2b00      	cmp	r3, #0
 8003d86:	d10f      	bne.n	8003da8 <HAL_SPI_IRQHandler+0x44>
 8003d88:	69bb      	ldr	r3, [r7, #24]
 8003d8a:	f003 0301 	and.w	r3, r3, #1
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d00a      	beq.n	8003da8 <HAL_SPI_IRQHandler+0x44>
 8003d92:	69fb      	ldr	r3, [r7, #28]
 8003d94:	099b      	lsrs	r3, r3, #6
 8003d96:	f003 0301 	and.w	r3, r3, #1
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d004      	beq.n	8003da8 <HAL_SPI_IRQHandler+0x44>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003da2:	6878      	ldr	r0, [r7, #4]
 8003da4:	4798      	blx	r3
 8003da6:	e0be      	b.n	8003f26 <HAL_SPI_IRQHandler+0x1c2>
 8003da8:	69bb      	ldr	r3, [r7, #24]
 8003daa:	085b      	lsrs	r3, r3, #1
 8003dac:	f003 0301 	and.w	r3, r3, #1
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d00a      	beq.n	8003dca <HAL_SPI_IRQHandler+0x66>
 8003db4:	69fb      	ldr	r3, [r7, #28]
 8003db6:	09db      	lsrs	r3, r3, #7
 8003db8:	f003 0301 	and.w	r3, r3, #1
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d004      	beq.n	8003dca <HAL_SPI_IRQHandler+0x66>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003dc4:	6878      	ldr	r0, [r7, #4]
 8003dc6:	4798      	blx	r3
 8003dc8:	e0ad      	b.n	8003f26 <HAL_SPI_IRQHandler+0x1c2>
 8003dca:	69bb      	ldr	r3, [r7, #24]
 8003dcc:	095b      	lsrs	r3, r3, #5
 8003dce:	f003 0301 	and.w	r3, r3, #1
 8003dd2:	2b00      	cmp	r3, #0
 8003dd4:	d106      	bne.n	8003de4 <HAL_SPI_IRQHandler+0x80>
 8003dd6:	69bb      	ldr	r3, [r7, #24]
 8003dd8:	099b      	lsrs	r3, r3, #6
 8003dda:	f003 0301 	and.w	r3, r3, #1
 8003dde:	2b00      	cmp	r3, #0
 8003de0:	f000 80a1 	beq.w	8003f26 <HAL_SPI_IRQHandler+0x1c2>
 8003de4:	69fb      	ldr	r3, [r7, #28]
 8003de6:	095b      	lsrs	r3, r3, #5
 8003de8:	f003 0301 	and.w	r3, r3, #1
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	f000 809a 	beq.w	8003f26 <HAL_SPI_IRQHandler+0x1c2>
 8003df2:	69bb      	ldr	r3, [r7, #24]
 8003df4:	099b      	lsrs	r3, r3, #6
 8003df6:	f003 0301 	and.w	r3, r3, #1
 8003dfa:	2b00      	cmp	r3, #0
 8003dfc:	d023      	beq.n	8003e46 <HAL_SPI_IRQHandler+0xe2>
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003e04:	b2db      	uxtb	r3, r3
 8003e06:	2b03      	cmp	r3, #3
 8003e08:	d011      	beq.n	8003e2e <HAL_SPI_IRQHandler+0xca>
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003e0e:	f043 0204 	orr.w	r2, r3, #4
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	655a      	str	r2, [r3, #84]	; 0x54
 8003e16:	2300      	movs	r3, #0
 8003e18:	617b      	str	r3, [r7, #20]
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	68db      	ldr	r3, [r3, #12]
 8003e20:	617b      	str	r3, [r7, #20]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	689b      	ldr	r3, [r3, #8]
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697b      	ldr	r3, [r7, #20]
 8003e2c:	e00b      	b.n	8003e46 <HAL_SPI_IRQHandler+0xe2>
 8003e2e:	2300      	movs	r3, #0
 8003e30:	613b      	str	r3, [r7, #16]
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	68db      	ldr	r3, [r3, #12]
 8003e38:	613b      	str	r3, [r7, #16]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	689b      	ldr	r3, [r3, #8]
 8003e40:	613b      	str	r3, [r7, #16]
 8003e42:	693b      	ldr	r3, [r7, #16]
 8003e44:	e06f      	b.n	8003f26 <HAL_SPI_IRQHandler+0x1c2>
 8003e46:	69bb      	ldr	r3, [r7, #24]
 8003e48:	095b      	lsrs	r3, r3, #5
 8003e4a:	f003 0301 	and.w	r3, r3, #1
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d014      	beq.n	8003e7c <HAL_SPI_IRQHandler+0x118>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003e56:	f043 0201 	orr.w	r2, r3, #1
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	655a      	str	r2, [r3, #84]	; 0x54
 8003e5e:	2300      	movs	r3, #0
 8003e60:	60fb      	str	r3, [r7, #12]
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	689b      	ldr	r3, [r3, #8]
 8003e68:	60fb      	str	r3, [r7, #12]
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	681a      	ldr	r2, [r3, #0]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003e78:	601a      	str	r2, [r3, #0]
 8003e7a:	68fb      	ldr	r3, [r7, #12]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d04f      	beq.n	8003f24 <HAL_SPI_IRQHandler+0x1c0>
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	685a      	ldr	r2, [r3, #4]
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8003e92:	605a      	str	r2, [r3, #4]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	2201      	movs	r2, #1
 8003e98:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003e9c:	69fb      	ldr	r3, [r7, #28]
 8003e9e:	f003 0302 	and.w	r3, r3, #2
 8003ea2:	2b00      	cmp	r3, #0
 8003ea4:	d104      	bne.n	8003eb0 <HAL_SPI_IRQHandler+0x14c>
 8003ea6:	69fb      	ldr	r3, [r7, #28]
 8003ea8:	f003 0301 	and.w	r3, r3, #1
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d034      	beq.n	8003f1a <HAL_SPI_IRQHandler+0x1b6>
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	685a      	ldr	r2, [r3, #4]
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f022 0203 	bic.w	r2, r2, #3
 8003ebe:	605a      	str	r2, [r3, #4]
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	d011      	beq.n	8003eec <HAL_SPI_IRQHandler+0x188>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003ecc:	4a17      	ldr	r2, [pc, #92]	; (8003f2c <HAL_SPI_IRQHandler+0x1c8>)
 8003ece:	635a      	str	r2, [r3, #52]	; 0x34
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	f7fe fb9d 	bl	8002614 <HAL_DMA_Abort_IT>
 8003eda:	4603      	mov	r3, r0
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d005      	beq.n	8003eec <HAL_SPI_IRQHandler+0x188>
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ee4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	655a      	str	r2, [r3, #84]	; 0x54
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003ef0:	2b00      	cmp	r3, #0
 8003ef2:	d016      	beq.n	8003f22 <HAL_SPI_IRQHandler+0x1be>
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003ef8:	4a0c      	ldr	r2, [pc, #48]	; (8003f2c <HAL_SPI_IRQHandler+0x1c8>)
 8003efa:	635a      	str	r2, [r3, #52]	; 0x34
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003f00:	4618      	mov	r0, r3
 8003f02:	f7fe fb87 	bl	8002614 <HAL_DMA_Abort_IT>
 8003f06:	4603      	mov	r3, r0
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d00a      	beq.n	8003f22 <HAL_SPI_IRQHandler+0x1be>
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003f10:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	655a      	str	r2, [r3, #84]	; 0x54
 8003f18:	e003      	b.n	8003f22 <HAL_SPI_IRQHandler+0x1be>
 8003f1a:	6878      	ldr	r0, [r7, #4]
 8003f1c:	f000 f808 	bl	8003f30 <HAL_SPI_ErrorCallback>
 8003f20:	e000      	b.n	8003f24 <HAL_SPI_IRQHandler+0x1c0>
 8003f22:	bf00      	nop
 8003f24:	bf00      	nop
 8003f26:	3720      	adds	r7, #32
 8003f28:	46bd      	mov	sp, r7
 8003f2a:	bd80      	pop	{r7, pc}
 8003f2c:	08003f43 	.word	0x08003f43

08003f30 <HAL_SPI_ErrorCallback>:
 8003f30:	b480      	push	{r7}
 8003f32:	b083      	sub	sp, #12
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
 8003f38:	bf00      	nop
 8003f3a:	370c      	adds	r7, #12
 8003f3c:	46bd      	mov	sp, r7
 8003f3e:	bc80      	pop	{r7}
 8003f40:	4770      	bx	lr

08003f42 <SPI_DMAAbortOnError>:
 8003f42:	b580      	push	{r7, lr}
 8003f44:	b084      	sub	sp, #16
 8003f46:	af00      	add	r7, sp, #0
 8003f48:	6078      	str	r0, [r7, #4]
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f4e:	60fb      	str	r3, [r7, #12]
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	2200      	movs	r2, #0
 8003f54:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003f56:	68fb      	ldr	r3, [r7, #12]
 8003f58:	2200      	movs	r2, #0
 8003f5a:	86da      	strh	r2, [r3, #54]	; 0x36
 8003f5c:	68f8      	ldr	r0, [r7, #12]
 8003f5e:	f7ff ffe7 	bl	8003f30 <HAL_SPI_ErrorCallback>
 8003f62:	bf00      	nop
 8003f64:	3710      	adds	r7, #16
 8003f66:	46bd      	mov	sp, r7
 8003f68:	bd80      	pop	{r7, pc}
	...

08003f6c <SPI_WaitFlagStateUntilTimeout>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b088      	sub	sp, #32
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	60f8      	str	r0, [r7, #12]
 8003f74:	60b9      	str	r1, [r7, #8]
 8003f76:	603b      	str	r3, [r7, #0]
 8003f78:	4613      	mov	r3, r2
 8003f7a:	71fb      	strb	r3, [r7, #7]
 8003f7c:	f7fe f9d4 	bl	8002328 <HAL_GetTick>
 8003f80:	4602      	mov	r2, r0
 8003f82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003f84:	1a9b      	subs	r3, r3, r2
 8003f86:	683a      	ldr	r2, [r7, #0]
 8003f88:	4413      	add	r3, r2
 8003f8a:	61fb      	str	r3, [r7, #28]
 8003f8c:	f7fe f9cc 	bl	8002328 <HAL_GetTick>
 8003f90:	61b8      	str	r0, [r7, #24]
 8003f92:	4b39      	ldr	r3, [pc, #228]	; (8004078 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	015b      	lsls	r3, r3, #5
 8003f98:	0d1b      	lsrs	r3, r3, #20
 8003f9a:	69fa      	ldr	r2, [r7, #28]
 8003f9c:	fb02 f303 	mul.w	r3, r2, r3
 8003fa0:	617b      	str	r3, [r7, #20]
 8003fa2:	e054      	b.n	800404e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003fa4:	683b      	ldr	r3, [r7, #0]
 8003fa6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003faa:	d050      	beq.n	800404e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003fac:	f7fe f9bc 	bl	8002328 <HAL_GetTick>
 8003fb0:	4602      	mov	r2, r0
 8003fb2:	69bb      	ldr	r3, [r7, #24]
 8003fb4:	1ad3      	subs	r3, r2, r3
 8003fb6:	69fa      	ldr	r2, [r7, #28]
 8003fb8:	429a      	cmp	r2, r3
 8003fba:	d902      	bls.n	8003fc2 <SPI_WaitFlagStateUntilTimeout+0x56>
 8003fbc:	69fb      	ldr	r3, [r7, #28]
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d13d      	bne.n	800403e <SPI_WaitFlagStateUntilTimeout+0xd2>
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	685a      	ldr	r2, [r3, #4]
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8003fd0:	605a      	str	r2, [r3, #4]
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	685b      	ldr	r3, [r3, #4]
 8003fd6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003fda:	d111      	bne.n	8004000 <SPI_WaitFlagStateUntilTimeout+0x94>
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	689b      	ldr	r3, [r3, #8]
 8003fe0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003fe4:	d004      	beq.n	8003ff0 <SPI_WaitFlagStateUntilTimeout+0x84>
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	689b      	ldr	r3, [r3, #8]
 8003fea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003fee:	d107      	bne.n	8004000 <SPI_WaitFlagStateUntilTimeout+0x94>
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	681a      	ldr	r2, [r3, #0]
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003ffe:	601a      	str	r2, [r3, #0]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004004:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004008:	d10f      	bne.n	800402a <SPI_WaitFlagStateUntilTimeout+0xbe>
 800400a:	68fb      	ldr	r3, [r7, #12]
 800400c:	681b      	ldr	r3, [r3, #0]
 800400e:	681a      	ldr	r2, [r3, #0]
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004018:	601a      	str	r2, [r3, #0]
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	681a      	ldr	r2, [r3, #0]
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004028:	601a      	str	r2, [r3, #0]
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	2201      	movs	r2, #1
 800402e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	2200      	movs	r2, #0
 8004036:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800403a:	2303      	movs	r3, #3
 800403c:	e017      	b.n	800406e <SPI_WaitFlagStateUntilTimeout+0x102>
 800403e:	697b      	ldr	r3, [r7, #20]
 8004040:	2b00      	cmp	r3, #0
 8004042:	d101      	bne.n	8004048 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8004044:	2300      	movs	r3, #0
 8004046:	61fb      	str	r3, [r7, #28]
 8004048:	697b      	ldr	r3, [r7, #20]
 800404a:	3b01      	subs	r3, #1
 800404c:	617b      	str	r3, [r7, #20]
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	689a      	ldr	r2, [r3, #8]
 8004054:	68bb      	ldr	r3, [r7, #8]
 8004056:	4013      	ands	r3, r2
 8004058:	68ba      	ldr	r2, [r7, #8]
 800405a:	429a      	cmp	r2, r3
 800405c:	bf0c      	ite	eq
 800405e:	2301      	moveq	r3, #1
 8004060:	2300      	movne	r3, #0
 8004062:	b2db      	uxtb	r3, r3
 8004064:	461a      	mov	r2, r3
 8004066:	79fb      	ldrb	r3, [r7, #7]
 8004068:	429a      	cmp	r2, r3
 800406a:	d19b      	bne.n	8003fa4 <SPI_WaitFlagStateUntilTimeout+0x38>
 800406c:	2300      	movs	r3, #0
 800406e:	4618      	mov	r0, r3
 8004070:	3720      	adds	r7, #32
 8004072:	46bd      	mov	sp, r7
 8004074:	bd80      	pop	{r7, pc}
 8004076:	bf00      	nop
 8004078:	2000046c 	.word	0x2000046c

0800407c <SPI_EndRxTxTransaction>:
 800407c:	b580      	push	{r7, lr}
 800407e:	b086      	sub	sp, #24
 8004080:	af02      	add	r7, sp, #8
 8004082:	60f8      	str	r0, [r7, #12]
 8004084:	60b9      	str	r1, [r7, #8]
 8004086:	607a      	str	r2, [r7, #4]
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	9300      	str	r3, [sp, #0]
 800408c:	68bb      	ldr	r3, [r7, #8]
 800408e:	2200      	movs	r2, #0
 8004090:	2180      	movs	r1, #128	; 0x80
 8004092:	68f8      	ldr	r0, [r7, #12]
 8004094:	f7ff ff6a 	bl	8003f6c <SPI_WaitFlagStateUntilTimeout>
 8004098:	4603      	mov	r3, r0
 800409a:	2b00      	cmp	r3, #0
 800409c:	d007      	beq.n	80040ae <SPI_EndRxTxTransaction+0x32>
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040a2:	f043 0220 	orr.w	r2, r3, #32
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	655a      	str	r2, [r3, #84]	; 0x54
 80040aa:	2303      	movs	r3, #3
 80040ac:	e000      	b.n	80040b0 <SPI_EndRxTxTransaction+0x34>
 80040ae:	2300      	movs	r3, #0
 80040b0:	4618      	mov	r0, r3
 80040b2:	3710      	adds	r7, #16
 80040b4:	46bd      	mov	sp, r7
 80040b6:	bd80      	pop	{r7, pc}

080040b8 <HAL_TIM_Base_Init>:
 80040b8:	b580      	push	{r7, lr}
 80040ba:	b082      	sub	sp, #8
 80040bc:	af00      	add	r7, sp, #0
 80040be:	6078      	str	r0, [r7, #4]
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d101      	bne.n	80040ca <HAL_TIM_Base_Init+0x12>
 80040c6:	2301      	movs	r3, #1
 80040c8:	e041      	b.n	800414e <HAL_TIM_Base_Init+0x96>
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80040d0:	b2db      	uxtb	r3, r3
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d106      	bne.n	80040e4 <HAL_TIM_Base_Init+0x2c>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	2200      	movs	r2, #0
 80040da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80040de:	6878      	ldr	r0, [r7, #4]
 80040e0:	f7fd ff8e 	bl	8002000 <HAL_TIM_Base_MspInit>
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	2202      	movs	r2, #2
 80040e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681a      	ldr	r2, [r3, #0]
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	3304      	adds	r3, #4
 80040f4:	4619      	mov	r1, r3
 80040f6:	4610      	mov	r0, r2
 80040f8:	f000 fa96 	bl	8004628 <TIM_Base_SetConfig>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	2201      	movs	r2, #1
 8004100:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	2201      	movs	r2, #1
 8004108:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	2201      	movs	r2, #1
 8004110:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	2201      	movs	r2, #1
 8004118:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	2201      	movs	r2, #1
 8004120:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	2201      	movs	r2, #1
 8004128:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	2201      	movs	r2, #1
 8004130:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	2201      	movs	r2, #1
 8004138:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	2201      	movs	r2, #1
 8004140:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	2201      	movs	r2, #1
 8004148:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800414c:	2300      	movs	r3, #0
 800414e:	4618      	mov	r0, r3
 8004150:	3708      	adds	r7, #8
 8004152:	46bd      	mov	sp, r7
 8004154:	bd80      	pop	{r7, pc}

08004156 <HAL_TIM_Base_Stop>:
 8004156:	b480      	push	{r7}
 8004158:	b083      	sub	sp, #12
 800415a:	af00      	add	r7, sp, #0
 800415c:	6078      	str	r0, [r7, #4]
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	6a1a      	ldr	r2, [r3, #32]
 8004164:	f241 1311 	movw	r3, #4369	; 0x1111
 8004168:	4013      	ands	r3, r2
 800416a:	2b00      	cmp	r3, #0
 800416c:	d10f      	bne.n	800418e <HAL_TIM_Base_Stop+0x38>
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	6a1a      	ldr	r2, [r3, #32]
 8004174:	f240 4344 	movw	r3, #1092	; 0x444
 8004178:	4013      	ands	r3, r2
 800417a:	2b00      	cmp	r3, #0
 800417c:	d107      	bne.n	800418e <HAL_TIM_Base_Stop+0x38>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	681a      	ldr	r2, [r3, #0]
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	f022 0201 	bic.w	r2, r2, #1
 800418c:	601a      	str	r2, [r3, #0]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	2201      	movs	r2, #1
 8004192:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004196:	2300      	movs	r3, #0
 8004198:	4618      	mov	r0, r3
 800419a:	370c      	adds	r7, #12
 800419c:	46bd      	mov	sp, r7
 800419e:	bc80      	pop	{r7}
 80041a0:	4770      	bx	lr
	...

080041a4 <HAL_TIM_Base_Start_IT>:
 80041a4:	b480      	push	{r7}
 80041a6:	b085      	sub	sp, #20
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80041b2:	b2db      	uxtb	r3, r3
 80041b4:	2b01      	cmp	r3, #1
 80041b6:	d001      	beq.n	80041bc <HAL_TIM_Base_Start_IT+0x18>
 80041b8:	2301      	movs	r3, #1
 80041ba:	e03a      	b.n	8004232 <HAL_TIM_Base_Start_IT+0x8e>
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	2202      	movs	r2, #2
 80041c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	68da      	ldr	r2, [r3, #12]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	f042 0201 	orr.w	r2, r2, #1
 80041d2:	60da      	str	r2, [r3, #12]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	4a18      	ldr	r2, [pc, #96]	; (800423c <HAL_TIM_Base_Start_IT+0x98>)
 80041da:	4293      	cmp	r3, r2
 80041dc:	d00e      	beq.n	80041fc <HAL_TIM_Base_Start_IT+0x58>
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80041e6:	d009      	beq.n	80041fc <HAL_TIM_Base_Start_IT+0x58>
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	4a14      	ldr	r2, [pc, #80]	; (8004240 <HAL_TIM_Base_Start_IT+0x9c>)
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d004      	beq.n	80041fc <HAL_TIM_Base_Start_IT+0x58>
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	4a13      	ldr	r2, [pc, #76]	; (8004244 <HAL_TIM_Base_Start_IT+0xa0>)
 80041f8:	4293      	cmp	r3, r2
 80041fa:	d111      	bne.n	8004220 <HAL_TIM_Base_Start_IT+0x7c>
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	689b      	ldr	r3, [r3, #8]
 8004202:	f003 0307 	and.w	r3, r3, #7
 8004206:	60fb      	str	r3, [r7, #12]
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	2b06      	cmp	r3, #6
 800420c:	d010      	beq.n	8004230 <HAL_TIM_Base_Start_IT+0x8c>
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	681a      	ldr	r2, [r3, #0]
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	f042 0201 	orr.w	r2, r2, #1
 800421c:	601a      	str	r2, [r3, #0]
 800421e:	e007      	b.n	8004230 <HAL_TIM_Base_Start_IT+0x8c>
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	681a      	ldr	r2, [r3, #0]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	f042 0201 	orr.w	r2, r2, #1
 800422e:	601a      	str	r2, [r3, #0]
 8004230:	2300      	movs	r3, #0
 8004232:	4618      	mov	r0, r3
 8004234:	3714      	adds	r7, #20
 8004236:	46bd      	mov	sp, r7
 8004238:	bc80      	pop	{r7}
 800423a:	4770      	bx	lr
 800423c:	40012c00 	.word	0x40012c00
 8004240:	40000400 	.word	0x40000400
 8004244:	40000800 	.word	0x40000800

08004248 <HAL_TIM_IRQHandler>:
 8004248:	b580      	push	{r7, lr}
 800424a:	b082      	sub	sp, #8
 800424c:	af00      	add	r7, sp, #0
 800424e:	6078      	str	r0, [r7, #4]
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	691b      	ldr	r3, [r3, #16]
 8004256:	f003 0302 	and.w	r3, r3, #2
 800425a:	2b02      	cmp	r3, #2
 800425c:	d122      	bne.n	80042a4 <HAL_TIM_IRQHandler+0x5c>
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	68db      	ldr	r3, [r3, #12]
 8004264:	f003 0302 	and.w	r3, r3, #2
 8004268:	2b02      	cmp	r3, #2
 800426a:	d11b      	bne.n	80042a4 <HAL_TIM_IRQHandler+0x5c>
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	f06f 0202 	mvn.w	r2, #2
 8004274:	611a      	str	r2, [r3, #16]
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	2201      	movs	r2, #1
 800427a:	771a      	strb	r2, [r3, #28]
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	699b      	ldr	r3, [r3, #24]
 8004282:	f003 0303 	and.w	r3, r3, #3
 8004286:	2b00      	cmp	r3, #0
 8004288:	d003      	beq.n	8004292 <HAL_TIM_IRQHandler+0x4a>
 800428a:	6878      	ldr	r0, [r7, #4]
 800428c:	f000 f9b1 	bl	80045f2 <HAL_TIM_IC_CaptureCallback>
 8004290:	e005      	b.n	800429e <HAL_TIM_IRQHandler+0x56>
 8004292:	6878      	ldr	r0, [r7, #4]
 8004294:	f000 f9a4 	bl	80045e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004298:	6878      	ldr	r0, [r7, #4]
 800429a:	f000 f9b3 	bl	8004604 <HAL_TIM_PWM_PulseFinishedCallback>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2200      	movs	r2, #0
 80042a2:	771a      	strb	r2, [r3, #28]
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	691b      	ldr	r3, [r3, #16]
 80042aa:	f003 0304 	and.w	r3, r3, #4
 80042ae:	2b04      	cmp	r3, #4
 80042b0:	d122      	bne.n	80042f8 <HAL_TIM_IRQHandler+0xb0>
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	68db      	ldr	r3, [r3, #12]
 80042b8:	f003 0304 	and.w	r3, r3, #4
 80042bc:	2b04      	cmp	r3, #4
 80042be:	d11b      	bne.n	80042f8 <HAL_TIM_IRQHandler+0xb0>
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	f06f 0204 	mvn.w	r2, #4
 80042c8:	611a      	str	r2, [r3, #16]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	2202      	movs	r2, #2
 80042ce:	771a      	strb	r2, [r3, #28]
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	699b      	ldr	r3, [r3, #24]
 80042d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d003      	beq.n	80042e6 <HAL_TIM_IRQHandler+0x9e>
 80042de:	6878      	ldr	r0, [r7, #4]
 80042e0:	f000 f987 	bl	80045f2 <HAL_TIM_IC_CaptureCallback>
 80042e4:	e005      	b.n	80042f2 <HAL_TIM_IRQHandler+0xaa>
 80042e6:	6878      	ldr	r0, [r7, #4]
 80042e8:	f000 f97a 	bl	80045e0 <HAL_TIM_OC_DelayElapsedCallback>
 80042ec:	6878      	ldr	r0, [r7, #4]
 80042ee:	f000 f989 	bl	8004604 <HAL_TIM_PWM_PulseFinishedCallback>
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	2200      	movs	r2, #0
 80042f6:	771a      	strb	r2, [r3, #28]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	691b      	ldr	r3, [r3, #16]
 80042fe:	f003 0308 	and.w	r3, r3, #8
 8004302:	2b08      	cmp	r3, #8
 8004304:	d122      	bne.n	800434c <HAL_TIM_IRQHandler+0x104>
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	68db      	ldr	r3, [r3, #12]
 800430c:	f003 0308 	and.w	r3, r3, #8
 8004310:	2b08      	cmp	r3, #8
 8004312:	d11b      	bne.n	800434c <HAL_TIM_IRQHandler+0x104>
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	f06f 0208 	mvn.w	r2, #8
 800431c:	611a      	str	r2, [r3, #16]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	2204      	movs	r2, #4
 8004322:	771a      	strb	r2, [r3, #28]
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	69db      	ldr	r3, [r3, #28]
 800432a:	f003 0303 	and.w	r3, r3, #3
 800432e:	2b00      	cmp	r3, #0
 8004330:	d003      	beq.n	800433a <HAL_TIM_IRQHandler+0xf2>
 8004332:	6878      	ldr	r0, [r7, #4]
 8004334:	f000 f95d 	bl	80045f2 <HAL_TIM_IC_CaptureCallback>
 8004338:	e005      	b.n	8004346 <HAL_TIM_IRQHandler+0xfe>
 800433a:	6878      	ldr	r0, [r7, #4]
 800433c:	f000 f950 	bl	80045e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004340:	6878      	ldr	r0, [r7, #4]
 8004342:	f000 f95f 	bl	8004604 <HAL_TIM_PWM_PulseFinishedCallback>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	2200      	movs	r2, #0
 800434a:	771a      	strb	r2, [r3, #28]
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	681b      	ldr	r3, [r3, #0]
 8004350:	691b      	ldr	r3, [r3, #16]
 8004352:	f003 0310 	and.w	r3, r3, #16
 8004356:	2b10      	cmp	r3, #16
 8004358:	d122      	bne.n	80043a0 <HAL_TIM_IRQHandler+0x158>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	68db      	ldr	r3, [r3, #12]
 8004360:	f003 0310 	and.w	r3, r3, #16
 8004364:	2b10      	cmp	r3, #16
 8004366:	d11b      	bne.n	80043a0 <HAL_TIM_IRQHandler+0x158>
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	f06f 0210 	mvn.w	r2, #16
 8004370:	611a      	str	r2, [r3, #16]
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	2208      	movs	r2, #8
 8004376:	771a      	strb	r2, [r3, #28]
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	69db      	ldr	r3, [r3, #28]
 800437e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004382:	2b00      	cmp	r3, #0
 8004384:	d003      	beq.n	800438e <HAL_TIM_IRQHandler+0x146>
 8004386:	6878      	ldr	r0, [r7, #4]
 8004388:	f000 f933 	bl	80045f2 <HAL_TIM_IC_CaptureCallback>
 800438c:	e005      	b.n	800439a <HAL_TIM_IRQHandler+0x152>
 800438e:	6878      	ldr	r0, [r7, #4]
 8004390:	f000 f926 	bl	80045e0 <HAL_TIM_OC_DelayElapsedCallback>
 8004394:	6878      	ldr	r0, [r7, #4]
 8004396:	f000 f935 	bl	8004604 <HAL_TIM_PWM_PulseFinishedCallback>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	2200      	movs	r2, #0
 800439e:	771a      	strb	r2, [r3, #28]
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	691b      	ldr	r3, [r3, #16]
 80043a6:	f003 0301 	and.w	r3, r3, #1
 80043aa:	2b01      	cmp	r3, #1
 80043ac:	d10e      	bne.n	80043cc <HAL_TIM_IRQHandler+0x184>
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	68db      	ldr	r3, [r3, #12]
 80043b4:	f003 0301 	and.w	r3, r3, #1
 80043b8:	2b01      	cmp	r3, #1
 80043ba:	d107      	bne.n	80043cc <HAL_TIM_IRQHandler+0x184>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	f06f 0201 	mvn.w	r2, #1
 80043c4:	611a      	str	r2, [r3, #16]
 80043c6:	6878      	ldr	r0, [r7, #4]
 80043c8:	f7fd fc2c 	bl	8001c24 <HAL_TIM_PeriodElapsedCallback>
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	691b      	ldr	r3, [r3, #16]
 80043d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80043d6:	2b80      	cmp	r3, #128	; 0x80
 80043d8:	d10e      	bne.n	80043f8 <HAL_TIM_IRQHandler+0x1b0>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	68db      	ldr	r3, [r3, #12]
 80043e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80043e4:	2b80      	cmp	r3, #128	; 0x80
 80043e6:	d107      	bne.n	80043f8 <HAL_TIM_IRQHandler+0x1b0>
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80043f0:	611a      	str	r2, [r3, #16]
 80043f2:	6878      	ldr	r0, [r7, #4]
 80043f4:	f000 fa77 	bl	80048e6 <HAL_TIMEx_BreakCallback>
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	691b      	ldr	r3, [r3, #16]
 80043fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004402:	2b40      	cmp	r3, #64	; 0x40
 8004404:	d10e      	bne.n	8004424 <HAL_TIM_IRQHandler+0x1dc>
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	68db      	ldr	r3, [r3, #12]
 800440c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004410:	2b40      	cmp	r3, #64	; 0x40
 8004412:	d107      	bne.n	8004424 <HAL_TIM_IRQHandler+0x1dc>
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800441c:	611a      	str	r2, [r3, #16]
 800441e:	6878      	ldr	r0, [r7, #4]
 8004420:	f000 f8f9 	bl	8004616 <HAL_TIM_TriggerCallback>
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	691b      	ldr	r3, [r3, #16]
 800442a:	f003 0320 	and.w	r3, r3, #32
 800442e:	2b20      	cmp	r3, #32
 8004430:	d10e      	bne.n	8004450 <HAL_TIM_IRQHandler+0x208>
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	68db      	ldr	r3, [r3, #12]
 8004438:	f003 0320 	and.w	r3, r3, #32
 800443c:	2b20      	cmp	r3, #32
 800443e:	d107      	bne.n	8004450 <HAL_TIM_IRQHandler+0x208>
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	f06f 0220 	mvn.w	r2, #32
 8004448:	611a      	str	r2, [r3, #16]
 800444a:	6878      	ldr	r0, [r7, #4]
 800444c:	f000 fa42 	bl	80048d4 <HAL_TIMEx_CommutCallback>
 8004450:	bf00      	nop
 8004452:	3708      	adds	r7, #8
 8004454:	46bd      	mov	sp, r7
 8004456:	bd80      	pop	{r7, pc}

08004458 <HAL_TIM_ConfigClockSource>:
 8004458:	b580      	push	{r7, lr}
 800445a:	b084      	sub	sp, #16
 800445c:	af00      	add	r7, sp, #0
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	6039      	str	r1, [r7, #0]
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004468:	2b01      	cmp	r3, #1
 800446a:	d101      	bne.n	8004470 <HAL_TIM_ConfigClockSource+0x18>
 800446c:	2302      	movs	r3, #2
 800446e:	e0b3      	b.n	80045d8 <HAL_TIM_ConfigClockSource+0x180>
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	2201      	movs	r2, #1
 8004474:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	2202      	movs	r2, #2
 800447c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	689b      	ldr	r3, [r3, #8]
 8004486:	60fb      	str	r3, [r7, #12]
 8004488:	68fb      	ldr	r3, [r7, #12]
 800448a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800448e:	60fb      	str	r3, [r7, #12]
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004496:	60fb      	str	r3, [r7, #12]
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	68fa      	ldr	r2, [r7, #12]
 800449e:	609a      	str	r2, [r3, #8]
 80044a0:	683b      	ldr	r3, [r7, #0]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80044a8:	d03e      	beq.n	8004528 <HAL_TIM_ConfigClockSource+0xd0>
 80044aa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80044ae:	f200 8087 	bhi.w	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80044b6:	f000 8085 	beq.w	80045c4 <HAL_TIM_ConfigClockSource+0x16c>
 80044ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80044be:	d87f      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044c0:	2b70      	cmp	r3, #112	; 0x70
 80044c2:	d01a      	beq.n	80044fa <HAL_TIM_ConfigClockSource+0xa2>
 80044c4:	2b70      	cmp	r3, #112	; 0x70
 80044c6:	d87b      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044c8:	2b60      	cmp	r3, #96	; 0x60
 80044ca:	d050      	beq.n	800456e <HAL_TIM_ConfigClockSource+0x116>
 80044cc:	2b60      	cmp	r3, #96	; 0x60
 80044ce:	d877      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044d0:	2b50      	cmp	r3, #80	; 0x50
 80044d2:	d03c      	beq.n	800454e <HAL_TIM_ConfigClockSource+0xf6>
 80044d4:	2b50      	cmp	r3, #80	; 0x50
 80044d6:	d873      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044d8:	2b40      	cmp	r3, #64	; 0x40
 80044da:	d058      	beq.n	800458e <HAL_TIM_ConfigClockSource+0x136>
 80044dc:	2b40      	cmp	r3, #64	; 0x40
 80044de:	d86f      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044e0:	2b30      	cmp	r3, #48	; 0x30
 80044e2:	d064      	beq.n	80045ae <HAL_TIM_ConfigClockSource+0x156>
 80044e4:	2b30      	cmp	r3, #48	; 0x30
 80044e6:	d86b      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044e8:	2b20      	cmp	r3, #32
 80044ea:	d060      	beq.n	80045ae <HAL_TIM_ConfigClockSource+0x156>
 80044ec:	2b20      	cmp	r3, #32
 80044ee:	d867      	bhi.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044f0:	2b00      	cmp	r3, #0
 80044f2:	d05c      	beq.n	80045ae <HAL_TIM_ConfigClockSource+0x156>
 80044f4:	2b10      	cmp	r3, #16
 80044f6:	d05a      	beq.n	80045ae <HAL_TIM_ConfigClockSource+0x156>
 80044f8:	e062      	b.n	80045c0 <HAL_TIM_ConfigClockSource+0x168>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	6818      	ldr	r0, [r3, #0]
 80044fe:	683b      	ldr	r3, [r7, #0]
 8004500:	6899      	ldr	r1, [r3, #8]
 8004502:	683b      	ldr	r3, [r7, #0]
 8004504:	685a      	ldr	r2, [r3, #4]
 8004506:	683b      	ldr	r3, [r7, #0]
 8004508:	68db      	ldr	r3, [r3, #12]
 800450a:	f000 f966 	bl	80047da <TIM_ETR_SetConfig>
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	689b      	ldr	r3, [r3, #8]
 8004514:	60fb      	str	r3, [r7, #12]
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800451c:	60fb      	str	r3, [r7, #12]
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	68fa      	ldr	r2, [r7, #12]
 8004524:	609a      	str	r2, [r3, #8]
 8004526:	e04e      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	6818      	ldr	r0, [r3, #0]
 800452c:	683b      	ldr	r3, [r7, #0]
 800452e:	6899      	ldr	r1, [r3, #8]
 8004530:	683b      	ldr	r3, [r7, #0]
 8004532:	685a      	ldr	r2, [r3, #4]
 8004534:	683b      	ldr	r3, [r7, #0]
 8004536:	68db      	ldr	r3, [r3, #12]
 8004538:	f000 f94f 	bl	80047da <TIM_ETR_SetConfig>
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	689a      	ldr	r2, [r3, #8]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800454a:	609a      	str	r2, [r3, #8]
 800454c:	e03b      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	6818      	ldr	r0, [r3, #0]
 8004552:	683b      	ldr	r3, [r7, #0]
 8004554:	6859      	ldr	r1, [r3, #4]
 8004556:	683b      	ldr	r3, [r7, #0]
 8004558:	68db      	ldr	r3, [r3, #12]
 800455a:	461a      	mov	r2, r3
 800455c:	f000 f8c6 	bl	80046ec <TIM_TI1_ConfigInputStage>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	2150      	movs	r1, #80	; 0x50
 8004566:	4618      	mov	r0, r3
 8004568:	f000 f91d 	bl	80047a6 <TIM_ITRx_SetConfig>
 800456c:	e02b      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6818      	ldr	r0, [r3, #0]
 8004572:	683b      	ldr	r3, [r7, #0]
 8004574:	6859      	ldr	r1, [r3, #4]
 8004576:	683b      	ldr	r3, [r7, #0]
 8004578:	68db      	ldr	r3, [r3, #12]
 800457a:	461a      	mov	r2, r3
 800457c:	f000 f8e4 	bl	8004748 <TIM_TI2_ConfigInputStage>
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	2160      	movs	r1, #96	; 0x60
 8004586:	4618      	mov	r0, r3
 8004588:	f000 f90d 	bl	80047a6 <TIM_ITRx_SetConfig>
 800458c:	e01b      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	6818      	ldr	r0, [r3, #0]
 8004592:	683b      	ldr	r3, [r7, #0]
 8004594:	6859      	ldr	r1, [r3, #4]
 8004596:	683b      	ldr	r3, [r7, #0]
 8004598:	68db      	ldr	r3, [r3, #12]
 800459a:	461a      	mov	r2, r3
 800459c:	f000 f8a6 	bl	80046ec <TIM_TI1_ConfigInputStage>
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	681b      	ldr	r3, [r3, #0]
 80045a4:	2140      	movs	r1, #64	; 0x40
 80045a6:	4618      	mov	r0, r3
 80045a8:	f000 f8fd 	bl	80047a6 <TIM_ITRx_SetConfig>
 80045ac:	e00b      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	681a      	ldr	r2, [r3, #0]
 80045b2:	683b      	ldr	r3, [r7, #0]
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	4619      	mov	r1, r3
 80045b8:	4610      	mov	r0, r2
 80045ba:	f000 f8f4 	bl	80047a6 <TIM_ITRx_SetConfig>
 80045be:	e002      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 80045c0:	bf00      	nop
 80045c2:	e000      	b.n	80045c6 <HAL_TIM_ConfigClockSource+0x16e>
 80045c4:	bf00      	nop
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	2201      	movs	r2, #1
 80045ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	2200      	movs	r2, #0
 80045d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80045d6:	2300      	movs	r3, #0
 80045d8:	4618      	mov	r0, r3
 80045da:	3710      	adds	r7, #16
 80045dc:	46bd      	mov	sp, r7
 80045de:	bd80      	pop	{r7, pc}

080045e0 <HAL_TIM_OC_DelayElapsedCallback>:
 80045e0:	b480      	push	{r7}
 80045e2:	b083      	sub	sp, #12
 80045e4:	af00      	add	r7, sp, #0
 80045e6:	6078      	str	r0, [r7, #4]
 80045e8:	bf00      	nop
 80045ea:	370c      	adds	r7, #12
 80045ec:	46bd      	mov	sp, r7
 80045ee:	bc80      	pop	{r7}
 80045f0:	4770      	bx	lr

080045f2 <HAL_TIM_IC_CaptureCallback>:
 80045f2:	b480      	push	{r7}
 80045f4:	b083      	sub	sp, #12
 80045f6:	af00      	add	r7, sp, #0
 80045f8:	6078      	str	r0, [r7, #4]
 80045fa:	bf00      	nop
 80045fc:	370c      	adds	r7, #12
 80045fe:	46bd      	mov	sp, r7
 8004600:	bc80      	pop	{r7}
 8004602:	4770      	bx	lr

08004604 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004604:	b480      	push	{r7}
 8004606:	b083      	sub	sp, #12
 8004608:	af00      	add	r7, sp, #0
 800460a:	6078      	str	r0, [r7, #4]
 800460c:	bf00      	nop
 800460e:	370c      	adds	r7, #12
 8004610:	46bd      	mov	sp, r7
 8004612:	bc80      	pop	{r7}
 8004614:	4770      	bx	lr

08004616 <HAL_TIM_TriggerCallback>:
 8004616:	b480      	push	{r7}
 8004618:	b083      	sub	sp, #12
 800461a:	af00      	add	r7, sp, #0
 800461c:	6078      	str	r0, [r7, #4]
 800461e:	bf00      	nop
 8004620:	370c      	adds	r7, #12
 8004622:	46bd      	mov	sp, r7
 8004624:	bc80      	pop	{r7}
 8004626:	4770      	bx	lr

08004628 <TIM_Base_SetConfig>:
 8004628:	b480      	push	{r7}
 800462a:	b085      	sub	sp, #20
 800462c:	af00      	add	r7, sp, #0
 800462e:	6078      	str	r0, [r7, #4]
 8004630:	6039      	str	r1, [r7, #0]
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	60fb      	str	r3, [r7, #12]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	4a29      	ldr	r2, [pc, #164]	; (80046e0 <TIM_Base_SetConfig+0xb8>)
 800463c:	4293      	cmp	r3, r2
 800463e:	d00b      	beq.n	8004658 <TIM_Base_SetConfig+0x30>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004646:	d007      	beq.n	8004658 <TIM_Base_SetConfig+0x30>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	4a26      	ldr	r2, [pc, #152]	; (80046e4 <TIM_Base_SetConfig+0xbc>)
 800464c:	4293      	cmp	r3, r2
 800464e:	d003      	beq.n	8004658 <TIM_Base_SetConfig+0x30>
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	4a25      	ldr	r2, [pc, #148]	; (80046e8 <TIM_Base_SetConfig+0xc0>)
 8004654:	4293      	cmp	r3, r2
 8004656:	d108      	bne.n	800466a <TIM_Base_SetConfig+0x42>
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800465e:	60fb      	str	r3, [r7, #12]
 8004660:	683b      	ldr	r3, [r7, #0]
 8004662:	685b      	ldr	r3, [r3, #4]
 8004664:	68fa      	ldr	r2, [r7, #12]
 8004666:	4313      	orrs	r3, r2
 8004668:	60fb      	str	r3, [r7, #12]
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	4a1c      	ldr	r2, [pc, #112]	; (80046e0 <TIM_Base_SetConfig+0xb8>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d00b      	beq.n	800468a <TIM_Base_SetConfig+0x62>
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004678:	d007      	beq.n	800468a <TIM_Base_SetConfig+0x62>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	4a19      	ldr	r2, [pc, #100]	; (80046e4 <TIM_Base_SetConfig+0xbc>)
 800467e:	4293      	cmp	r3, r2
 8004680:	d003      	beq.n	800468a <TIM_Base_SetConfig+0x62>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	4a18      	ldr	r2, [pc, #96]	; (80046e8 <TIM_Base_SetConfig+0xc0>)
 8004686:	4293      	cmp	r3, r2
 8004688:	d108      	bne.n	800469c <TIM_Base_SetConfig+0x74>
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004690:	60fb      	str	r3, [r7, #12]
 8004692:	683b      	ldr	r3, [r7, #0]
 8004694:	68db      	ldr	r3, [r3, #12]
 8004696:	68fa      	ldr	r2, [r7, #12]
 8004698:	4313      	orrs	r3, r2
 800469a:	60fb      	str	r3, [r7, #12]
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80046a2:	683b      	ldr	r3, [r7, #0]
 80046a4:	695b      	ldr	r3, [r3, #20]
 80046a6:	4313      	orrs	r3, r2
 80046a8:	60fb      	str	r3, [r7, #12]
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	68fa      	ldr	r2, [r7, #12]
 80046ae:	601a      	str	r2, [r3, #0]
 80046b0:	683b      	ldr	r3, [r7, #0]
 80046b2:	689a      	ldr	r2, [r3, #8]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	62da      	str	r2, [r3, #44]	; 0x2c
 80046b8:	683b      	ldr	r3, [r7, #0]
 80046ba:	681a      	ldr	r2, [r3, #0]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	629a      	str	r2, [r3, #40]	; 0x28
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	4a07      	ldr	r2, [pc, #28]	; (80046e0 <TIM_Base_SetConfig+0xb8>)
 80046c4:	4293      	cmp	r3, r2
 80046c6:	d103      	bne.n	80046d0 <TIM_Base_SetConfig+0xa8>
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	691a      	ldr	r2, [r3, #16]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	631a      	str	r2, [r3, #48]	; 0x30
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2201      	movs	r2, #1
 80046d4:	615a      	str	r2, [r3, #20]
 80046d6:	bf00      	nop
 80046d8:	3714      	adds	r7, #20
 80046da:	46bd      	mov	sp, r7
 80046dc:	bc80      	pop	{r7}
 80046de:	4770      	bx	lr
 80046e0:	40012c00 	.word	0x40012c00
 80046e4:	40000400 	.word	0x40000400
 80046e8:	40000800 	.word	0x40000800

080046ec <TIM_TI1_ConfigInputStage>:
 80046ec:	b480      	push	{r7}
 80046ee:	b087      	sub	sp, #28
 80046f0:	af00      	add	r7, sp, #0
 80046f2:	60f8      	str	r0, [r7, #12]
 80046f4:	60b9      	str	r1, [r7, #8]
 80046f6:	607a      	str	r2, [r7, #4]
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	6a1b      	ldr	r3, [r3, #32]
 80046fc:	617b      	str	r3, [r7, #20]
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	6a1b      	ldr	r3, [r3, #32]
 8004702:	f023 0201 	bic.w	r2, r3, #1
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	621a      	str	r2, [r3, #32]
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	699b      	ldr	r3, [r3, #24]
 800470e:	613b      	str	r3, [r7, #16]
 8004710:	693b      	ldr	r3, [r7, #16]
 8004712:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004716:	613b      	str	r3, [r7, #16]
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	011b      	lsls	r3, r3, #4
 800471c:	693a      	ldr	r2, [r7, #16]
 800471e:	4313      	orrs	r3, r2
 8004720:	613b      	str	r3, [r7, #16]
 8004722:	697b      	ldr	r3, [r7, #20]
 8004724:	f023 030a 	bic.w	r3, r3, #10
 8004728:	617b      	str	r3, [r7, #20]
 800472a:	697a      	ldr	r2, [r7, #20]
 800472c:	68bb      	ldr	r3, [r7, #8]
 800472e:	4313      	orrs	r3, r2
 8004730:	617b      	str	r3, [r7, #20]
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	693a      	ldr	r2, [r7, #16]
 8004736:	619a      	str	r2, [r3, #24]
 8004738:	68fb      	ldr	r3, [r7, #12]
 800473a:	697a      	ldr	r2, [r7, #20]
 800473c:	621a      	str	r2, [r3, #32]
 800473e:	bf00      	nop
 8004740:	371c      	adds	r7, #28
 8004742:	46bd      	mov	sp, r7
 8004744:	bc80      	pop	{r7}
 8004746:	4770      	bx	lr

08004748 <TIM_TI2_ConfigInputStage>:
 8004748:	b480      	push	{r7}
 800474a:	b087      	sub	sp, #28
 800474c:	af00      	add	r7, sp, #0
 800474e:	60f8      	str	r0, [r7, #12]
 8004750:	60b9      	str	r1, [r7, #8]
 8004752:	607a      	str	r2, [r7, #4]
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	6a1b      	ldr	r3, [r3, #32]
 8004758:	f023 0210 	bic.w	r2, r3, #16
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	621a      	str	r2, [r3, #32]
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	699b      	ldr	r3, [r3, #24]
 8004764:	617b      	str	r3, [r7, #20]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	6a1b      	ldr	r3, [r3, #32]
 800476a:	613b      	str	r3, [r7, #16]
 800476c:	697b      	ldr	r3, [r7, #20]
 800476e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004772:	617b      	str	r3, [r7, #20]
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	031b      	lsls	r3, r3, #12
 8004778:	697a      	ldr	r2, [r7, #20]
 800477a:	4313      	orrs	r3, r2
 800477c:	617b      	str	r3, [r7, #20]
 800477e:	693b      	ldr	r3, [r7, #16]
 8004780:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004784:	613b      	str	r3, [r7, #16]
 8004786:	68bb      	ldr	r3, [r7, #8]
 8004788:	011b      	lsls	r3, r3, #4
 800478a:	693a      	ldr	r2, [r7, #16]
 800478c:	4313      	orrs	r3, r2
 800478e:	613b      	str	r3, [r7, #16]
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	697a      	ldr	r2, [r7, #20]
 8004794:	619a      	str	r2, [r3, #24]
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	693a      	ldr	r2, [r7, #16]
 800479a:	621a      	str	r2, [r3, #32]
 800479c:	bf00      	nop
 800479e:	371c      	adds	r7, #28
 80047a0:	46bd      	mov	sp, r7
 80047a2:	bc80      	pop	{r7}
 80047a4:	4770      	bx	lr

080047a6 <TIM_ITRx_SetConfig>:
 80047a6:	b480      	push	{r7}
 80047a8:	b085      	sub	sp, #20
 80047aa:	af00      	add	r7, sp, #0
 80047ac:	6078      	str	r0, [r7, #4]
 80047ae:	6039      	str	r1, [r7, #0]
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	689b      	ldr	r3, [r3, #8]
 80047b4:	60fb      	str	r3, [r7, #12]
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80047bc:	60fb      	str	r3, [r7, #12]
 80047be:	683a      	ldr	r2, [r7, #0]
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	4313      	orrs	r3, r2
 80047c4:	f043 0307 	orr.w	r3, r3, #7
 80047c8:	60fb      	str	r3, [r7, #12]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	68fa      	ldr	r2, [r7, #12]
 80047ce:	609a      	str	r2, [r3, #8]
 80047d0:	bf00      	nop
 80047d2:	3714      	adds	r7, #20
 80047d4:	46bd      	mov	sp, r7
 80047d6:	bc80      	pop	{r7}
 80047d8:	4770      	bx	lr

080047da <TIM_ETR_SetConfig>:
 80047da:	b480      	push	{r7}
 80047dc:	b087      	sub	sp, #28
 80047de:	af00      	add	r7, sp, #0
 80047e0:	60f8      	str	r0, [r7, #12]
 80047e2:	60b9      	str	r1, [r7, #8]
 80047e4:	607a      	str	r2, [r7, #4]
 80047e6:	603b      	str	r3, [r7, #0]
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	689b      	ldr	r3, [r3, #8]
 80047ec:	617b      	str	r3, [r7, #20]
 80047ee:	697b      	ldr	r3, [r7, #20]
 80047f0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80047f4:	617b      	str	r3, [r7, #20]
 80047f6:	683b      	ldr	r3, [r7, #0]
 80047f8:	021a      	lsls	r2, r3, #8
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	431a      	orrs	r2, r3
 80047fe:	68bb      	ldr	r3, [r7, #8]
 8004800:	4313      	orrs	r3, r2
 8004802:	697a      	ldr	r2, [r7, #20]
 8004804:	4313      	orrs	r3, r2
 8004806:	617b      	str	r3, [r7, #20]
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	697a      	ldr	r2, [r7, #20]
 800480c:	609a      	str	r2, [r3, #8]
 800480e:	bf00      	nop
 8004810:	371c      	adds	r7, #28
 8004812:	46bd      	mov	sp, r7
 8004814:	bc80      	pop	{r7}
 8004816:	4770      	bx	lr

08004818 <HAL_TIMEx_MasterConfigSynchronization>:
 8004818:	b480      	push	{r7}
 800481a:	b085      	sub	sp, #20
 800481c:	af00      	add	r7, sp, #0
 800481e:	6078      	str	r0, [r7, #4]
 8004820:	6039      	str	r1, [r7, #0]
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004828:	2b01      	cmp	r3, #1
 800482a:	d101      	bne.n	8004830 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800482c:	2302      	movs	r3, #2
 800482e:	e046      	b.n	80048be <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	2201      	movs	r2, #1
 8004834:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	2202      	movs	r2, #2
 800483c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	685b      	ldr	r3, [r3, #4]
 8004846:	60fb      	str	r3, [r7, #12]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	689b      	ldr	r3, [r3, #8]
 800484e:	60bb      	str	r3, [r7, #8]
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004856:	60fb      	str	r3, [r7, #12]
 8004858:	683b      	ldr	r3, [r7, #0]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	68fa      	ldr	r2, [r7, #12]
 800485e:	4313      	orrs	r3, r2
 8004860:	60fb      	str	r3, [r7, #12]
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	68fa      	ldr	r2, [r7, #12]
 8004868:	605a      	str	r2, [r3, #4]
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	4a16      	ldr	r2, [pc, #88]	; (80048c8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004870:	4293      	cmp	r3, r2
 8004872:	d00e      	beq.n	8004892 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800487c:	d009      	beq.n	8004892 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	4a12      	ldr	r2, [pc, #72]	; (80048cc <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004884:	4293      	cmp	r3, r2
 8004886:	d004      	beq.n	8004892 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	4a10      	ldr	r2, [pc, #64]	; (80048d0 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800488e:	4293      	cmp	r3, r2
 8004890:	d10c      	bne.n	80048ac <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004892:	68bb      	ldr	r3, [r7, #8]
 8004894:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004898:	60bb      	str	r3, [r7, #8]
 800489a:	683b      	ldr	r3, [r7, #0]
 800489c:	685b      	ldr	r3, [r3, #4]
 800489e:	68ba      	ldr	r2, [r7, #8]
 80048a0:	4313      	orrs	r3, r2
 80048a2:	60bb      	str	r3, [r7, #8]
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	68ba      	ldr	r2, [r7, #8]
 80048aa:	609a      	str	r2, [r3, #8]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	2201      	movs	r2, #1
 80048b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2200      	movs	r2, #0
 80048b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80048bc:	2300      	movs	r3, #0
 80048be:	4618      	mov	r0, r3
 80048c0:	3714      	adds	r7, #20
 80048c2:	46bd      	mov	sp, r7
 80048c4:	bc80      	pop	{r7}
 80048c6:	4770      	bx	lr
 80048c8:	40012c00 	.word	0x40012c00
 80048cc:	40000400 	.word	0x40000400
 80048d0:	40000800 	.word	0x40000800

080048d4 <HAL_TIMEx_CommutCallback>:
 80048d4:	b480      	push	{r7}
 80048d6:	b083      	sub	sp, #12
 80048d8:	af00      	add	r7, sp, #0
 80048da:	6078      	str	r0, [r7, #4]
 80048dc:	bf00      	nop
 80048de:	370c      	adds	r7, #12
 80048e0:	46bd      	mov	sp, r7
 80048e2:	bc80      	pop	{r7}
 80048e4:	4770      	bx	lr

080048e6 <HAL_TIMEx_BreakCallback>:
 80048e6:	b480      	push	{r7}
 80048e8:	b083      	sub	sp, #12
 80048ea:	af00      	add	r7, sp, #0
 80048ec:	6078      	str	r0, [r7, #4]
 80048ee:	bf00      	nop
 80048f0:	370c      	adds	r7, #12
 80048f2:	46bd      	mov	sp, r7
 80048f4:	bc80      	pop	{r7}
 80048f6:	4770      	bx	lr

080048f8 <HAL_UART_Init>:
 80048f8:	b580      	push	{r7, lr}
 80048fa:	b082      	sub	sp, #8
 80048fc:	af00      	add	r7, sp, #0
 80048fe:	6078      	str	r0, [r7, #4]
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	2b00      	cmp	r3, #0
 8004904:	d101      	bne.n	800490a <HAL_UART_Init+0x12>
 8004906:	2301      	movs	r3, #1
 8004908:	e03f      	b.n	800498a <HAL_UART_Init+0x92>
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004910:	b2db      	uxtb	r3, r3
 8004912:	2b00      	cmp	r3, #0
 8004914:	d106      	bne.n	8004924 <HAL_UART_Init+0x2c>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	2200      	movs	r2, #0
 800491a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800491e:	6878      	ldr	r0, [r7, #4]
 8004920:	f7fd fbca 	bl	80020b8 <HAL_UART_MspInit>
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	2224      	movs	r2, #36	; 0x24
 8004928:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	681b      	ldr	r3, [r3, #0]
 8004930:	68da      	ldr	r2, [r3, #12]
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800493a:	60da      	str	r2, [r3, #12]
 800493c:	6878      	ldr	r0, [r7, #4]
 800493e:	f000 fc01 	bl	8005144 <UART_SetConfig>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	691a      	ldr	r2, [r3, #16]
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004950:	611a      	str	r2, [r3, #16]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	695a      	ldr	r2, [r3, #20]
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004960:	615a      	str	r2, [r3, #20]
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	68da      	ldr	r2, [r3, #12]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004970:	60da      	str	r2, [r3, #12]
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	2200      	movs	r2, #0
 8004976:	641a      	str	r2, [r3, #64]	; 0x40
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	2220      	movs	r2, #32
 800497c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	2220      	movs	r2, #32
 8004984:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004988:	2300      	movs	r3, #0
 800498a:	4618      	mov	r0, r3
 800498c:	3708      	adds	r7, #8
 800498e:	46bd      	mov	sp, r7
 8004990:	bd80      	pop	{r7, pc}

08004992 <HAL_UART_Transmit_IT>:
 8004992:	b480      	push	{r7}
 8004994:	b085      	sub	sp, #20
 8004996:	af00      	add	r7, sp, #0
 8004998:	60f8      	str	r0, [r7, #12]
 800499a:	60b9      	str	r1, [r7, #8]
 800499c:	4613      	mov	r3, r2
 800499e:	80fb      	strh	r3, [r7, #6]
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80049a6:	b2db      	uxtb	r3, r3
 80049a8:	2b20      	cmp	r3, #32
 80049aa:	d130      	bne.n	8004a0e <HAL_UART_Transmit_IT+0x7c>
 80049ac:	68bb      	ldr	r3, [r7, #8]
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d002      	beq.n	80049b8 <HAL_UART_Transmit_IT+0x26>
 80049b2:	88fb      	ldrh	r3, [r7, #6]
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d101      	bne.n	80049bc <HAL_UART_Transmit_IT+0x2a>
 80049b8:	2301      	movs	r3, #1
 80049ba:	e029      	b.n	8004a10 <HAL_UART_Transmit_IT+0x7e>
 80049bc:	68fb      	ldr	r3, [r7, #12]
 80049be:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80049c2:	2b01      	cmp	r3, #1
 80049c4:	d101      	bne.n	80049ca <HAL_UART_Transmit_IT+0x38>
 80049c6:	2302      	movs	r3, #2
 80049c8:	e022      	b.n	8004a10 <HAL_UART_Transmit_IT+0x7e>
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	2201      	movs	r2, #1
 80049ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	68ba      	ldr	r2, [r7, #8]
 80049d6:	621a      	str	r2, [r3, #32]
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	88fa      	ldrh	r2, [r7, #6]
 80049dc:	849a      	strh	r2, [r3, #36]	; 0x24
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	88fa      	ldrh	r2, [r7, #6]
 80049e2:	84da      	strh	r2, [r3, #38]	; 0x26
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	2200      	movs	r2, #0
 80049e8:	641a      	str	r2, [r3, #64]	; 0x40
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	2221      	movs	r2, #33	; 0x21
 80049ee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	2200      	movs	r2, #0
 80049f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	68da      	ldr	r2, [r3, #12]
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004a08:	60da      	str	r2, [r3, #12]
 8004a0a:	2300      	movs	r3, #0
 8004a0c:	e000      	b.n	8004a10 <HAL_UART_Transmit_IT+0x7e>
 8004a0e:	2302      	movs	r3, #2
 8004a10:	4618      	mov	r0, r3
 8004a12:	3714      	adds	r7, #20
 8004a14:	46bd      	mov	sp, r7
 8004a16:	bc80      	pop	{r7}
 8004a18:	4770      	bx	lr

08004a1a <HAL_UART_Receive_IT>:
 8004a1a:	b580      	push	{r7, lr}
 8004a1c:	b084      	sub	sp, #16
 8004a1e:	af00      	add	r7, sp, #0
 8004a20:	60f8      	str	r0, [r7, #12]
 8004a22:	60b9      	str	r1, [r7, #8]
 8004a24:	4613      	mov	r3, r2
 8004a26:	80fb      	strh	r3, [r7, #6]
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004a2e:	b2db      	uxtb	r3, r3
 8004a30:	2b20      	cmp	r3, #32
 8004a32:	d11d      	bne.n	8004a70 <HAL_UART_Receive_IT+0x56>
 8004a34:	68bb      	ldr	r3, [r7, #8]
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	d002      	beq.n	8004a40 <HAL_UART_Receive_IT+0x26>
 8004a3a:	88fb      	ldrh	r3, [r7, #6]
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d101      	bne.n	8004a44 <HAL_UART_Receive_IT+0x2a>
 8004a40:	2301      	movs	r3, #1
 8004a42:	e016      	b.n	8004a72 <HAL_UART_Receive_IT+0x58>
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004a4a:	2b01      	cmp	r3, #1
 8004a4c:	d101      	bne.n	8004a52 <HAL_UART_Receive_IT+0x38>
 8004a4e:	2302      	movs	r3, #2
 8004a50:	e00f      	b.n	8004a72 <HAL_UART_Receive_IT+0x58>
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	2201      	movs	r2, #1
 8004a56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	2200      	movs	r2, #0
 8004a5e:	631a      	str	r2, [r3, #48]	; 0x30
 8004a60:	88fb      	ldrh	r3, [r7, #6]
 8004a62:	461a      	mov	r2, r3
 8004a64:	68b9      	ldr	r1, [r7, #8]
 8004a66:	68f8      	ldr	r0, [r7, #12]
 8004a68:	f000 f9e3 	bl	8004e32 <UART_Start_Receive_IT>
 8004a6c:	4603      	mov	r3, r0
 8004a6e:	e000      	b.n	8004a72 <HAL_UART_Receive_IT+0x58>
 8004a70:	2302      	movs	r3, #2
 8004a72:	4618      	mov	r0, r3
 8004a74:	3710      	adds	r7, #16
 8004a76:	46bd      	mov	sp, r7
 8004a78:	bd80      	pop	{r7, pc}
	...

08004a7c <HAL_UART_IRQHandler>:
 8004a7c:	b580      	push	{r7, lr}
 8004a7e:	b08a      	sub	sp, #40	; 0x28
 8004a80:	af00      	add	r7, sp, #0
 8004a82:	6078      	str	r0, [r7, #4]
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	627b      	str	r3, [r7, #36]	; 0x24
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	68db      	ldr	r3, [r3, #12]
 8004a92:	623b      	str	r3, [r7, #32]
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	695b      	ldr	r3, [r3, #20]
 8004a9a:	61fb      	str	r3, [r7, #28]
 8004a9c:	2300      	movs	r3, #0
 8004a9e:	61bb      	str	r3, [r7, #24]
 8004aa0:	2300      	movs	r3, #0
 8004aa2:	617b      	str	r3, [r7, #20]
 8004aa4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004aa6:	f003 030f 	and.w	r3, r3, #15
 8004aaa:	61bb      	str	r3, [r7, #24]
 8004aac:	69bb      	ldr	r3, [r7, #24]
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d10d      	bne.n	8004ace <HAL_UART_IRQHandler+0x52>
 8004ab2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ab4:	f003 0320 	and.w	r3, r3, #32
 8004ab8:	2b00      	cmp	r3, #0
 8004aba:	d008      	beq.n	8004ace <HAL_UART_IRQHandler+0x52>
 8004abc:	6a3b      	ldr	r3, [r7, #32]
 8004abe:	f003 0320 	and.w	r3, r3, #32
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d003      	beq.n	8004ace <HAL_UART_IRQHandler+0x52>
 8004ac6:	6878      	ldr	r0, [r7, #4]
 8004ac8:	f000 fa93 	bl	8004ff2 <UART_Receive_IT>
 8004acc:	e17b      	b.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004ace:	69bb      	ldr	r3, [r7, #24]
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	f000 80b1 	beq.w	8004c38 <HAL_UART_IRQHandler+0x1bc>
 8004ad6:	69fb      	ldr	r3, [r7, #28]
 8004ad8:	f003 0301 	and.w	r3, r3, #1
 8004adc:	2b00      	cmp	r3, #0
 8004ade:	d105      	bne.n	8004aec <HAL_UART_IRQHandler+0x70>
 8004ae0:	6a3b      	ldr	r3, [r7, #32]
 8004ae2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004ae6:	2b00      	cmp	r3, #0
 8004ae8:	f000 80a6 	beq.w	8004c38 <HAL_UART_IRQHandler+0x1bc>
 8004aec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004aee:	f003 0301 	and.w	r3, r3, #1
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d00a      	beq.n	8004b0c <HAL_UART_IRQHandler+0x90>
 8004af6:	6a3b      	ldr	r3, [r7, #32]
 8004af8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004afc:	2b00      	cmp	r3, #0
 8004afe:	d005      	beq.n	8004b0c <HAL_UART_IRQHandler+0x90>
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b04:	f043 0201 	orr.w	r2, r3, #1
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b0e:	f003 0304 	and.w	r3, r3, #4
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d00a      	beq.n	8004b2c <HAL_UART_IRQHandler+0xb0>
 8004b16:	69fb      	ldr	r3, [r7, #28]
 8004b18:	f003 0301 	and.w	r3, r3, #1
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d005      	beq.n	8004b2c <HAL_UART_IRQHandler+0xb0>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b24:	f043 0202 	orr.w	r2, r3, #2
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b2e:	f003 0302 	and.w	r3, r3, #2
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d00a      	beq.n	8004b4c <HAL_UART_IRQHandler+0xd0>
 8004b36:	69fb      	ldr	r3, [r7, #28]
 8004b38:	f003 0301 	and.w	r3, r3, #1
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d005      	beq.n	8004b4c <HAL_UART_IRQHandler+0xd0>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b44:	f043 0204 	orr.w	r2, r3, #4
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b4e:	f003 0308 	and.w	r3, r3, #8
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d00f      	beq.n	8004b76 <HAL_UART_IRQHandler+0xfa>
 8004b56:	6a3b      	ldr	r3, [r7, #32]
 8004b58:	f003 0320 	and.w	r3, r3, #32
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d104      	bne.n	8004b6a <HAL_UART_IRQHandler+0xee>
 8004b60:	69fb      	ldr	r3, [r7, #28]
 8004b62:	f003 0301 	and.w	r3, r3, #1
 8004b66:	2b00      	cmp	r3, #0
 8004b68:	d005      	beq.n	8004b76 <HAL_UART_IRQHandler+0xfa>
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b6e:	f043 0208 	orr.w	r2, r3, #8
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	641a      	str	r2, [r3, #64]	; 0x40
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b7a:	2b00      	cmp	r3, #0
 8004b7c:	f000 811e 	beq.w	8004dbc <HAL_UART_IRQHandler+0x340>
 8004b80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b82:	f003 0320 	and.w	r3, r3, #32
 8004b86:	2b00      	cmp	r3, #0
 8004b88:	d007      	beq.n	8004b9a <HAL_UART_IRQHandler+0x11e>
 8004b8a:	6a3b      	ldr	r3, [r7, #32]
 8004b8c:	f003 0320 	and.w	r3, r3, #32
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d002      	beq.n	8004b9a <HAL_UART_IRQHandler+0x11e>
 8004b94:	6878      	ldr	r0, [r7, #4]
 8004b96:	f000 fa2c 	bl	8004ff2 <UART_Receive_IT>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	681b      	ldr	r3, [r3, #0]
 8004b9e:	695b      	ldr	r3, [r3, #20]
 8004ba0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	bf14      	ite	ne
 8004ba8:	2301      	movne	r3, #1
 8004baa:	2300      	moveq	r3, #0
 8004bac:	b2db      	uxtb	r3, r3
 8004bae:	617b      	str	r3, [r7, #20]
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bb4:	f003 0308 	and.w	r3, r3, #8
 8004bb8:	2b00      	cmp	r3, #0
 8004bba:	d102      	bne.n	8004bc2 <HAL_UART_IRQHandler+0x146>
 8004bbc:	697b      	ldr	r3, [r7, #20]
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	d031      	beq.n	8004c26 <HAL_UART_IRQHandler+0x1aa>
 8004bc2:	6878      	ldr	r0, [r7, #4]
 8004bc4:	f000 f96e 	bl	8004ea4 <UART_EndRxTransfer>
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	681b      	ldr	r3, [r3, #0]
 8004bcc:	695b      	ldr	r3, [r3, #20]
 8004bce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d023      	beq.n	8004c1e <HAL_UART_IRQHandler+0x1a2>
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	695a      	ldr	r2, [r3, #20]
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004be4:	615a      	str	r2, [r3, #20]
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d013      	beq.n	8004c16 <HAL_UART_IRQHandler+0x19a>
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004bf2:	4a76      	ldr	r2, [pc, #472]	; (8004dcc <HAL_UART_IRQHandler+0x350>)
 8004bf4:	635a      	str	r2, [r3, #52]	; 0x34
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004bfa:	4618      	mov	r0, r3
 8004bfc:	f7fd fd0a 	bl	8002614 <HAL_DMA_Abort_IT>
 8004c00:	4603      	mov	r3, r0
 8004c02:	2b00      	cmp	r3, #0
 8004c04:	d016      	beq.n	8004c34 <HAL_UART_IRQHandler+0x1b8>
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004c0c:	687a      	ldr	r2, [r7, #4]
 8004c0e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004c10:	4610      	mov	r0, r2
 8004c12:	4798      	blx	r3
 8004c14:	e00e      	b.n	8004c34 <HAL_UART_IRQHandler+0x1b8>
 8004c16:	6878      	ldr	r0, [r7, #4]
 8004c18:	f000 f8da 	bl	8004dd0 <HAL_UART_ErrorCallback>
 8004c1c:	e00a      	b.n	8004c34 <HAL_UART_IRQHandler+0x1b8>
 8004c1e:	6878      	ldr	r0, [r7, #4]
 8004c20:	f000 f8d6 	bl	8004dd0 <HAL_UART_ErrorCallback>
 8004c24:	e006      	b.n	8004c34 <HAL_UART_IRQHandler+0x1b8>
 8004c26:	6878      	ldr	r0, [r7, #4]
 8004c28:	f000 f8d2 	bl	8004dd0 <HAL_UART_ErrorCallback>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	2200      	movs	r2, #0
 8004c30:	641a      	str	r2, [r3, #64]	; 0x40
 8004c32:	e0c3      	b.n	8004dbc <HAL_UART_IRQHandler+0x340>
 8004c34:	bf00      	nop
 8004c36:	e0c1      	b.n	8004dbc <HAL_UART_IRQHandler+0x340>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c3c:	2b01      	cmp	r3, #1
 8004c3e:	f040 80a1 	bne.w	8004d84 <HAL_UART_IRQHandler+0x308>
 8004c42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c44:	f003 0310 	and.w	r3, r3, #16
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	f000 809b 	beq.w	8004d84 <HAL_UART_IRQHandler+0x308>
 8004c4e:	6a3b      	ldr	r3, [r7, #32]
 8004c50:	f003 0310 	and.w	r3, r3, #16
 8004c54:	2b00      	cmp	r3, #0
 8004c56:	f000 8095 	beq.w	8004d84 <HAL_UART_IRQHandler+0x308>
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	60fb      	str	r3, [r7, #12]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	60fb      	str	r3, [r7, #12]
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	685b      	ldr	r3, [r3, #4]
 8004c6c:	60fb      	str	r3, [r7, #12]
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	695b      	ldr	r3, [r3, #20]
 8004c76:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004c7a:	2b00      	cmp	r3, #0
 8004c7c:	d04e      	beq.n	8004d1c <HAL_UART_IRQHandler+0x2a0>
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c82:	681b      	ldr	r3, [r3, #0]
 8004c84:	685b      	ldr	r3, [r3, #4]
 8004c86:	823b      	strh	r3, [r7, #16]
 8004c88:	8a3b      	ldrh	r3, [r7, #16]
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	f000 8098 	beq.w	8004dc0 <HAL_UART_IRQHandler+0x344>
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004c94:	8a3a      	ldrh	r2, [r7, #16]
 8004c96:	429a      	cmp	r2, r3
 8004c98:	f080 8092 	bcs.w	8004dc0 <HAL_UART_IRQHandler+0x344>
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	8a3a      	ldrh	r2, [r7, #16]
 8004ca0:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ca6:	699b      	ldr	r3, [r3, #24]
 8004ca8:	2b20      	cmp	r3, #32
 8004caa:	d02b      	beq.n	8004d04 <HAL_UART_IRQHandler+0x288>
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	68da      	ldr	r2, [r3, #12]
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004cba:	60da      	str	r2, [r3, #12]
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	695a      	ldr	r2, [r3, #20]
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	f022 0201 	bic.w	r2, r2, #1
 8004cca:	615a      	str	r2, [r3, #20]
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	695a      	ldr	r2, [r3, #20]
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004cda:	615a      	str	r2, [r3, #20]
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	2220      	movs	r2, #32
 8004ce0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	631a      	str	r2, [r3, #48]	; 0x30
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	68da      	ldr	r2, [r3, #12]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	f022 0210 	bic.w	r2, r2, #16
 8004cf8:	60da      	str	r2, [r3, #12]
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004cfe:	4618      	mov	r0, r3
 8004d00:	f7fd fc4d 	bl	800259e <HAL_DMA_Abort>
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d0c:	b29b      	uxth	r3, r3
 8004d0e:	1ad3      	subs	r3, r2, r3
 8004d10:	b29b      	uxth	r3, r3
 8004d12:	4619      	mov	r1, r3
 8004d14:	6878      	ldr	r0, [r7, #4]
 8004d16:	f000 f864 	bl	8004de2 <HAL_UARTEx_RxEventCallback>
 8004d1a:	e051      	b.n	8004dc0 <HAL_UART_IRQHandler+0x344>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d24:	b29b      	uxth	r3, r3
 8004d26:	1ad3      	subs	r3, r2, r3
 8004d28:	827b      	strh	r3, [r7, #18]
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d2e:	b29b      	uxth	r3, r3
 8004d30:	2b00      	cmp	r3, #0
 8004d32:	d047      	beq.n	8004dc4 <HAL_UART_IRQHandler+0x348>
 8004d34:	8a7b      	ldrh	r3, [r7, #18]
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	d044      	beq.n	8004dc4 <HAL_UART_IRQHandler+0x348>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	68da      	ldr	r2, [r3, #12]
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004d48:	60da      	str	r2, [r3, #12]
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	695a      	ldr	r2, [r3, #20]
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	f022 0201 	bic.w	r2, r2, #1
 8004d58:	615a      	str	r2, [r3, #20]
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	2220      	movs	r2, #32
 8004d5e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	2200      	movs	r2, #0
 8004d66:	631a      	str	r2, [r3, #48]	; 0x30
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	68da      	ldr	r2, [r3, #12]
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	f022 0210 	bic.w	r2, r2, #16
 8004d76:	60da      	str	r2, [r3, #12]
 8004d78:	8a7b      	ldrh	r3, [r7, #18]
 8004d7a:	4619      	mov	r1, r3
 8004d7c:	6878      	ldr	r0, [r7, #4]
 8004d7e:	f000 f830 	bl	8004de2 <HAL_UARTEx_RxEventCallback>
 8004d82:	e01f      	b.n	8004dc4 <HAL_UART_IRQHandler+0x348>
 8004d84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d8a:	2b00      	cmp	r3, #0
 8004d8c:	d008      	beq.n	8004da0 <HAL_UART_IRQHandler+0x324>
 8004d8e:	6a3b      	ldr	r3, [r7, #32]
 8004d90:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d003      	beq.n	8004da0 <HAL_UART_IRQHandler+0x324>
 8004d98:	6878      	ldr	r0, [r7, #4]
 8004d9a:	f000 f8c3 	bl	8004f24 <UART_Transmit_IT>
 8004d9e:	e012      	b.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004da0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004da2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004da6:	2b00      	cmp	r3, #0
 8004da8:	d00d      	beq.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004daa:	6a3b      	ldr	r3, [r7, #32]
 8004dac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004db0:	2b00      	cmp	r3, #0
 8004db2:	d008      	beq.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004db4:	6878      	ldr	r0, [r7, #4]
 8004db6:	f000 f904 	bl	8004fc2 <UART_EndTransmit_IT>
 8004dba:	e004      	b.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004dbc:	bf00      	nop
 8004dbe:	e002      	b.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004dc0:	bf00      	nop
 8004dc2:	e000      	b.n	8004dc6 <HAL_UART_IRQHandler+0x34a>
 8004dc4:	bf00      	nop
 8004dc6:	3728      	adds	r7, #40	; 0x28
 8004dc8:	46bd      	mov	sp, r7
 8004dca:	bd80      	pop	{r7, pc}
 8004dcc:	08004efd 	.word	0x08004efd

08004dd0 <HAL_UART_ErrorCallback>:
 8004dd0:	b480      	push	{r7}
 8004dd2:	b083      	sub	sp, #12
 8004dd4:	af00      	add	r7, sp, #0
 8004dd6:	6078      	str	r0, [r7, #4]
 8004dd8:	bf00      	nop
 8004dda:	370c      	adds	r7, #12
 8004ddc:	46bd      	mov	sp, r7
 8004dde:	bc80      	pop	{r7}
 8004de0:	4770      	bx	lr

08004de2 <HAL_UARTEx_RxEventCallback>:
 8004de2:	b480      	push	{r7}
 8004de4:	b083      	sub	sp, #12
 8004de6:	af00      	add	r7, sp, #0
 8004de8:	6078      	str	r0, [r7, #4]
 8004dea:	460b      	mov	r3, r1
 8004dec:	807b      	strh	r3, [r7, #2]
 8004dee:	bf00      	nop
 8004df0:	370c      	adds	r7, #12
 8004df2:	46bd      	mov	sp, r7
 8004df4:	bc80      	pop	{r7}
 8004df6:	4770      	bx	lr

08004df8 <HAL_UART_GetState>:
 8004df8:	b480      	push	{r7}
 8004dfa:	b085      	sub	sp, #20
 8004dfc:	af00      	add	r7, sp, #0
 8004dfe:	6078      	str	r0, [r7, #4]
 8004e00:	2300      	movs	r3, #0
 8004e02:	60fb      	str	r3, [r7, #12]
 8004e04:	2300      	movs	r3, #0
 8004e06:	60bb      	str	r3, [r7, #8]
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004e0e:	b2db      	uxtb	r3, r3
 8004e10:	60fb      	str	r3, [r7, #12]
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004e18:	b2db      	uxtb	r3, r3
 8004e1a:	60bb      	str	r3, [r7, #8]
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	b2da      	uxtb	r2, r3
 8004e20:	68bb      	ldr	r3, [r7, #8]
 8004e22:	b2db      	uxtb	r3, r3
 8004e24:	4313      	orrs	r3, r2
 8004e26:	b2db      	uxtb	r3, r3
 8004e28:	4618      	mov	r0, r3
 8004e2a:	3714      	adds	r7, #20
 8004e2c:	46bd      	mov	sp, r7
 8004e2e:	bc80      	pop	{r7}
 8004e30:	4770      	bx	lr

08004e32 <UART_Start_Receive_IT>:
 8004e32:	b480      	push	{r7}
 8004e34:	b085      	sub	sp, #20
 8004e36:	af00      	add	r7, sp, #0
 8004e38:	60f8      	str	r0, [r7, #12]
 8004e3a:	60b9      	str	r1, [r7, #8]
 8004e3c:	4613      	mov	r3, r2
 8004e3e:	80fb      	strh	r3, [r7, #6]
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	68ba      	ldr	r2, [r7, #8]
 8004e44:	629a      	str	r2, [r3, #40]	; 0x28
 8004e46:	68fb      	ldr	r3, [r7, #12]
 8004e48:	88fa      	ldrh	r2, [r7, #6]
 8004e4a:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	88fa      	ldrh	r2, [r7, #6]
 8004e50:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	2200      	movs	r2, #0
 8004e56:	641a      	str	r2, [r3, #64]	; 0x40
 8004e58:	68fb      	ldr	r3, [r7, #12]
 8004e5a:	2222      	movs	r2, #34	; 0x22
 8004e5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	2200      	movs	r2, #0
 8004e64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	68da      	ldr	r2, [r3, #12]
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004e76:	60da      	str	r2, [r3, #12]
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	695a      	ldr	r2, [r3, #20]
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	f042 0201 	orr.w	r2, r2, #1
 8004e86:	615a      	str	r2, [r3, #20]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	68da      	ldr	r2, [r3, #12]
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	f042 0220 	orr.w	r2, r2, #32
 8004e96:	60da      	str	r2, [r3, #12]
 8004e98:	2300      	movs	r3, #0
 8004e9a:	4618      	mov	r0, r3
 8004e9c:	3714      	adds	r7, #20
 8004e9e:	46bd      	mov	sp, r7
 8004ea0:	bc80      	pop	{r7}
 8004ea2:	4770      	bx	lr

08004ea4 <UART_EndRxTransfer>:
 8004ea4:	b480      	push	{r7}
 8004ea6:	b083      	sub	sp, #12
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	6078      	str	r0, [r7, #4]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	68da      	ldr	r2, [r3, #12]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004eba:	60da      	str	r2, [r3, #12]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	681b      	ldr	r3, [r3, #0]
 8004ec0:	695a      	ldr	r2, [r3, #20]
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	f022 0201 	bic.w	r2, r2, #1
 8004eca:	615a      	str	r2, [r3, #20]
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ed0:	2b01      	cmp	r3, #1
 8004ed2:	d107      	bne.n	8004ee4 <UART_EndRxTransfer+0x40>
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	68da      	ldr	r2, [r3, #12]
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	f022 0210 	bic.w	r2, r2, #16
 8004ee2:	60da      	str	r2, [r3, #12]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	2220      	movs	r2, #32
 8004ee8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	2200      	movs	r2, #0
 8004ef0:	631a      	str	r2, [r3, #48]	; 0x30
 8004ef2:	bf00      	nop
 8004ef4:	370c      	adds	r7, #12
 8004ef6:	46bd      	mov	sp, r7
 8004ef8:	bc80      	pop	{r7}
 8004efa:	4770      	bx	lr

08004efc <UART_DMAAbortOnError>:
 8004efc:	b580      	push	{r7, lr}
 8004efe:	b084      	sub	sp, #16
 8004f00:	af00      	add	r7, sp, #0
 8004f02:	6078      	str	r0, [r7, #4]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f08:	60fb      	str	r3, [r7, #12]
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	2200      	movs	r2, #0
 8004f0e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	2200      	movs	r2, #0
 8004f14:	84da      	strh	r2, [r3, #38]	; 0x26
 8004f16:	68f8      	ldr	r0, [r7, #12]
 8004f18:	f7ff ff5a 	bl	8004dd0 <HAL_UART_ErrorCallback>
 8004f1c:	bf00      	nop
 8004f1e:	3710      	adds	r7, #16
 8004f20:	46bd      	mov	sp, r7
 8004f22:	bd80      	pop	{r7, pc}

08004f24 <UART_Transmit_IT>:
 8004f24:	b480      	push	{r7}
 8004f26:	b085      	sub	sp, #20
 8004f28:	af00      	add	r7, sp, #0
 8004f2a:	6078      	str	r0, [r7, #4]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f32:	b2db      	uxtb	r3, r3
 8004f34:	2b21      	cmp	r3, #33	; 0x21
 8004f36:	d13e      	bne.n	8004fb6 <UART_Transmit_IT+0x92>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	689b      	ldr	r3, [r3, #8]
 8004f3c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004f40:	d114      	bne.n	8004f6c <UART_Transmit_IT+0x48>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	691b      	ldr	r3, [r3, #16]
 8004f46:	2b00      	cmp	r3, #0
 8004f48:	d110      	bne.n	8004f6c <UART_Transmit_IT+0x48>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	6a1b      	ldr	r3, [r3, #32]
 8004f4e:	60fb      	str	r3, [r7, #12]
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	881b      	ldrh	r3, [r3, #0]
 8004f54:	461a      	mov	r2, r3
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004f5e:	605a      	str	r2, [r3, #4]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6a1b      	ldr	r3, [r3, #32]
 8004f64:	1c9a      	adds	r2, r3, #2
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	621a      	str	r2, [r3, #32]
 8004f6a:	e008      	b.n	8004f7e <UART_Transmit_IT+0x5a>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	6a1b      	ldr	r3, [r3, #32]
 8004f70:	1c59      	adds	r1, r3, #1
 8004f72:	687a      	ldr	r2, [r7, #4]
 8004f74:	6211      	str	r1, [r2, #32]
 8004f76:	781a      	ldrb	r2, [r3, #0]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	605a      	str	r2, [r3, #4]
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004f82:	b29b      	uxth	r3, r3
 8004f84:	3b01      	subs	r3, #1
 8004f86:	b29b      	uxth	r3, r3
 8004f88:	687a      	ldr	r2, [r7, #4]
 8004f8a:	4619      	mov	r1, r3
 8004f8c:	84d1      	strh	r1, [r2, #38]	; 0x26
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d10f      	bne.n	8004fb2 <UART_Transmit_IT+0x8e>
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	68da      	ldr	r2, [r3, #12]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004fa0:	60da      	str	r2, [r3, #12]
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	68da      	ldr	r2, [r3, #12]
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004fb0:	60da      	str	r2, [r3, #12]
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	e000      	b.n	8004fb8 <UART_Transmit_IT+0x94>
 8004fb6:	2302      	movs	r3, #2
 8004fb8:	4618      	mov	r0, r3
 8004fba:	3714      	adds	r7, #20
 8004fbc:	46bd      	mov	sp, r7
 8004fbe:	bc80      	pop	{r7}
 8004fc0:	4770      	bx	lr

08004fc2 <UART_EndTransmit_IT>:
 8004fc2:	b580      	push	{r7, lr}
 8004fc4:	b082      	sub	sp, #8
 8004fc6:	af00      	add	r7, sp, #0
 8004fc8:	6078      	str	r0, [r7, #4]
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	68da      	ldr	r2, [r3, #12]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004fd8:	60da      	str	r2, [r3, #12]
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	2220      	movs	r2, #32
 8004fde:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004fe2:	6878      	ldr	r0, [r7, #4]
 8004fe4:	f7fc fe08 	bl	8001bf8 <HAL_UART_TxCpltCallback>
 8004fe8:	2300      	movs	r3, #0
 8004fea:	4618      	mov	r0, r3
 8004fec:	3708      	adds	r7, #8
 8004fee:	46bd      	mov	sp, r7
 8004ff0:	bd80      	pop	{r7, pc}

08004ff2 <UART_Receive_IT>:
 8004ff2:	b580      	push	{r7, lr}
 8004ff4:	b086      	sub	sp, #24
 8004ff6:	af00      	add	r7, sp, #0
 8004ff8:	6078      	str	r0, [r7, #4]
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005000:	b2db      	uxtb	r3, r3
 8005002:	2b22      	cmp	r3, #34	; 0x22
 8005004:	f040 8099 	bne.w	800513a <UART_Receive_IT+0x148>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	689b      	ldr	r3, [r3, #8]
 800500c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005010:	d117      	bne.n	8005042 <UART_Receive_IT+0x50>
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	691b      	ldr	r3, [r3, #16]
 8005016:	2b00      	cmp	r3, #0
 8005018:	d113      	bne.n	8005042 <UART_Receive_IT+0x50>
 800501a:	2300      	movs	r3, #0
 800501c:	617b      	str	r3, [r7, #20]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005022:	613b      	str	r3, [r7, #16]
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	685b      	ldr	r3, [r3, #4]
 800502a:	b29b      	uxth	r3, r3
 800502c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005030:	b29a      	uxth	r2, r3
 8005032:	693b      	ldr	r3, [r7, #16]
 8005034:	801a      	strh	r2, [r3, #0]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800503a:	1c9a      	adds	r2, r3, #2
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	629a      	str	r2, [r3, #40]	; 0x28
 8005040:	e026      	b.n	8005090 <UART_Receive_IT+0x9e>
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005046:	617b      	str	r3, [r7, #20]
 8005048:	2300      	movs	r3, #0
 800504a:	613b      	str	r3, [r7, #16]
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	689b      	ldr	r3, [r3, #8]
 8005050:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005054:	d007      	beq.n	8005066 <UART_Receive_IT+0x74>
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	689b      	ldr	r3, [r3, #8]
 800505a:	2b00      	cmp	r3, #0
 800505c:	d10a      	bne.n	8005074 <UART_Receive_IT+0x82>
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	691b      	ldr	r3, [r3, #16]
 8005062:	2b00      	cmp	r3, #0
 8005064:	d106      	bne.n	8005074 <UART_Receive_IT+0x82>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	685b      	ldr	r3, [r3, #4]
 800506c:	b2da      	uxtb	r2, r3
 800506e:	697b      	ldr	r3, [r7, #20]
 8005070:	701a      	strb	r2, [r3, #0]
 8005072:	e008      	b.n	8005086 <UART_Receive_IT+0x94>
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	685b      	ldr	r3, [r3, #4]
 800507a:	b2db      	uxtb	r3, r3
 800507c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005080:	b2da      	uxtb	r2, r3
 8005082:	697b      	ldr	r3, [r7, #20]
 8005084:	701a      	strb	r2, [r3, #0]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800508a:	1c5a      	adds	r2, r3, #1
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	629a      	str	r2, [r3, #40]	; 0x28
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005094:	b29b      	uxth	r3, r3
 8005096:	3b01      	subs	r3, #1
 8005098:	b29b      	uxth	r3, r3
 800509a:	687a      	ldr	r2, [r7, #4]
 800509c:	4619      	mov	r1, r3
 800509e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d148      	bne.n	8005136 <UART_Receive_IT+0x144>
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	68da      	ldr	r2, [r3, #12]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	f022 0220 	bic.w	r2, r2, #32
 80050b2:	60da      	str	r2, [r3, #12]
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	68da      	ldr	r2, [r3, #12]
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80050c2:	60da      	str	r2, [r3, #12]
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	695a      	ldr	r2, [r3, #20]
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	f022 0201 	bic.w	r2, r2, #1
 80050d2:	615a      	str	r2, [r3, #20]
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	2220      	movs	r2, #32
 80050d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050e0:	2b01      	cmp	r3, #1
 80050e2:	d123      	bne.n	800512c <UART_Receive_IT+0x13a>
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	2200      	movs	r2, #0
 80050e8:	631a      	str	r2, [r3, #48]	; 0x30
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	68da      	ldr	r2, [r3, #12]
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	f022 0210 	bic.w	r2, r2, #16
 80050f8:	60da      	str	r2, [r3, #12]
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	f003 0310 	and.w	r3, r3, #16
 8005104:	2b10      	cmp	r3, #16
 8005106:	d10a      	bne.n	800511e <UART_Receive_IT+0x12c>
 8005108:	2300      	movs	r3, #0
 800510a:	60fb      	str	r3, [r7, #12]
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	60fb      	str	r3, [r7, #12]
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	685b      	ldr	r3, [r3, #4]
 800511a:	60fb      	str	r3, [r7, #12]
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005122:	4619      	mov	r1, r3
 8005124:	6878      	ldr	r0, [r7, #4]
 8005126:	f7ff fe5c 	bl	8004de2 <HAL_UARTEx_RxEventCallback>
 800512a:	e002      	b.n	8005132 <UART_Receive_IT+0x140>
 800512c:	6878      	ldr	r0, [r7, #4]
 800512e:	f7fc fd27 	bl	8001b80 <HAL_UART_RxCpltCallback>
 8005132:	2300      	movs	r3, #0
 8005134:	e002      	b.n	800513c <UART_Receive_IT+0x14a>
 8005136:	2300      	movs	r3, #0
 8005138:	e000      	b.n	800513c <UART_Receive_IT+0x14a>
 800513a:	2302      	movs	r3, #2
 800513c:	4618      	mov	r0, r3
 800513e:	3718      	adds	r7, #24
 8005140:	46bd      	mov	sp, r7
 8005142:	bd80      	pop	{r7, pc}

08005144 <UART_SetConfig>:
 8005144:	b580      	push	{r7, lr}
 8005146:	b084      	sub	sp, #16
 8005148:	af00      	add	r7, sp, #0
 800514a:	6078      	str	r0, [r7, #4]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	691b      	ldr	r3, [r3, #16]
 8005152:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	68da      	ldr	r2, [r3, #12]
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	430a      	orrs	r2, r1
 8005160:	611a      	str	r2, [r3, #16]
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	689a      	ldr	r2, [r3, #8]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	691b      	ldr	r3, [r3, #16]
 800516a:	431a      	orrs	r2, r3
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	695b      	ldr	r3, [r3, #20]
 8005170:	4313      	orrs	r3, r2
 8005172:	60bb      	str	r3, [r7, #8]
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	68db      	ldr	r3, [r3, #12]
 800517a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800517e:	f023 030c 	bic.w	r3, r3, #12
 8005182:	687a      	ldr	r2, [r7, #4]
 8005184:	6812      	ldr	r2, [r2, #0]
 8005186:	68b9      	ldr	r1, [r7, #8]
 8005188:	430b      	orrs	r3, r1
 800518a:	60d3      	str	r3, [r2, #12]
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	695b      	ldr	r3, [r3, #20]
 8005192:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	699a      	ldr	r2, [r3, #24]
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	430a      	orrs	r2, r1
 80051a0:	615a      	str	r2, [r3, #20]
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	4a2c      	ldr	r2, [pc, #176]	; (8005258 <UART_SetConfig+0x114>)
 80051a8:	4293      	cmp	r3, r2
 80051aa:	d103      	bne.n	80051b4 <UART_SetConfig+0x70>
 80051ac:	f7fe fa46 	bl	800363c <HAL_RCC_GetPCLK2Freq>
 80051b0:	60f8      	str	r0, [r7, #12]
 80051b2:	e002      	b.n	80051ba <UART_SetConfig+0x76>
 80051b4:	f7fe fa2e 	bl	8003614 <HAL_RCC_GetPCLK1Freq>
 80051b8:	60f8      	str	r0, [r7, #12]
 80051ba:	68fa      	ldr	r2, [r7, #12]
 80051bc:	4613      	mov	r3, r2
 80051be:	009b      	lsls	r3, r3, #2
 80051c0:	4413      	add	r3, r2
 80051c2:	009a      	lsls	r2, r3, #2
 80051c4:	441a      	add	r2, r3
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	685b      	ldr	r3, [r3, #4]
 80051ca:	009b      	lsls	r3, r3, #2
 80051cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80051d0:	4a22      	ldr	r2, [pc, #136]	; (800525c <UART_SetConfig+0x118>)
 80051d2:	fba2 2303 	umull	r2, r3, r2, r3
 80051d6:	095b      	lsrs	r3, r3, #5
 80051d8:	0119      	lsls	r1, r3, #4
 80051da:	68fa      	ldr	r2, [r7, #12]
 80051dc:	4613      	mov	r3, r2
 80051de:	009b      	lsls	r3, r3, #2
 80051e0:	4413      	add	r3, r2
 80051e2:	009a      	lsls	r2, r3, #2
 80051e4:	441a      	add	r2, r3
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	685b      	ldr	r3, [r3, #4]
 80051ea:	009b      	lsls	r3, r3, #2
 80051ec:	fbb2 f2f3 	udiv	r2, r2, r3
 80051f0:	4b1a      	ldr	r3, [pc, #104]	; (800525c <UART_SetConfig+0x118>)
 80051f2:	fba3 0302 	umull	r0, r3, r3, r2
 80051f6:	095b      	lsrs	r3, r3, #5
 80051f8:	2064      	movs	r0, #100	; 0x64
 80051fa:	fb00 f303 	mul.w	r3, r0, r3
 80051fe:	1ad3      	subs	r3, r2, r3
 8005200:	011b      	lsls	r3, r3, #4
 8005202:	3332      	adds	r3, #50	; 0x32
 8005204:	4a15      	ldr	r2, [pc, #84]	; (800525c <UART_SetConfig+0x118>)
 8005206:	fba2 2303 	umull	r2, r3, r2, r3
 800520a:	095b      	lsrs	r3, r3, #5
 800520c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005210:	4419      	add	r1, r3
 8005212:	68fa      	ldr	r2, [r7, #12]
 8005214:	4613      	mov	r3, r2
 8005216:	009b      	lsls	r3, r3, #2
 8005218:	4413      	add	r3, r2
 800521a:	009a      	lsls	r2, r3, #2
 800521c:	441a      	add	r2, r3
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	685b      	ldr	r3, [r3, #4]
 8005222:	009b      	lsls	r3, r3, #2
 8005224:	fbb2 f2f3 	udiv	r2, r2, r3
 8005228:	4b0c      	ldr	r3, [pc, #48]	; (800525c <UART_SetConfig+0x118>)
 800522a:	fba3 0302 	umull	r0, r3, r3, r2
 800522e:	095b      	lsrs	r3, r3, #5
 8005230:	2064      	movs	r0, #100	; 0x64
 8005232:	fb00 f303 	mul.w	r3, r0, r3
 8005236:	1ad3      	subs	r3, r2, r3
 8005238:	011b      	lsls	r3, r3, #4
 800523a:	3332      	adds	r3, #50	; 0x32
 800523c:	4a07      	ldr	r2, [pc, #28]	; (800525c <UART_SetConfig+0x118>)
 800523e:	fba2 2303 	umull	r2, r3, r2, r3
 8005242:	095b      	lsrs	r3, r3, #5
 8005244:	f003 020f 	and.w	r2, r3, #15
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	440a      	add	r2, r1
 800524e:	609a      	str	r2, [r3, #8]
 8005250:	bf00      	nop
 8005252:	3710      	adds	r7, #16
 8005254:	46bd      	mov	sp, r7
 8005256:	bd80      	pop	{r7, pc}
 8005258:	40013800 	.word	0x40013800
 800525c:	51eb851f 	.word	0x51eb851f

08005260 <atoi>:
 8005260:	220a      	movs	r2, #10
 8005262:	2100      	movs	r1, #0
 8005264:	f000 b8ae 	b.w	80053c4 <strtol>

08005268 <__errno>:
 8005268:	4b01      	ldr	r3, [pc, #4]	; (8005270 <__errno+0x8>)
 800526a:	6818      	ldr	r0, [r3, #0]
 800526c:	4770      	bx	lr
 800526e:	bf00      	nop
 8005270:	20000478 	.word	0x20000478

08005274 <__libc_init_array>:
 8005274:	b570      	push	{r4, r5, r6, lr}
 8005276:	2600      	movs	r6, #0
 8005278:	4d0c      	ldr	r5, [pc, #48]	; (80052ac <__libc_init_array+0x38>)
 800527a:	4c0d      	ldr	r4, [pc, #52]	; (80052b0 <__libc_init_array+0x3c>)
 800527c:	1b64      	subs	r4, r4, r5
 800527e:	10a4      	asrs	r4, r4, #2
 8005280:	42a6      	cmp	r6, r4
 8005282:	d109      	bne.n	8005298 <__libc_init_array+0x24>
 8005284:	f000 f8a8 	bl	80053d8 <_init>
 8005288:	2600      	movs	r6, #0
 800528a:	4d0a      	ldr	r5, [pc, #40]	; (80052b4 <__libc_init_array+0x40>)
 800528c:	4c0a      	ldr	r4, [pc, #40]	; (80052b8 <__libc_init_array+0x44>)
 800528e:	1b64      	subs	r4, r4, r5
 8005290:	10a4      	asrs	r4, r4, #2
 8005292:	42a6      	cmp	r6, r4
 8005294:	d105      	bne.n	80052a2 <__libc_init_array+0x2e>
 8005296:	bd70      	pop	{r4, r5, r6, pc}
 8005298:	f855 3b04 	ldr.w	r3, [r5], #4
 800529c:	4798      	blx	r3
 800529e:	3601      	adds	r6, #1
 80052a0:	e7ee      	b.n	8005280 <__libc_init_array+0xc>
 80052a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80052a6:	4798      	blx	r3
 80052a8:	3601      	adds	r6, #1
 80052aa:	e7f2      	b.n	8005292 <__libc_init_array+0x1e>
 80052ac:	0800551c 	.word	0x0800551c
 80052b0:	0800551c 	.word	0x0800551c
 80052b4:	0800551c 	.word	0x0800551c
 80052b8:	08005524 	.word	0x08005524

080052bc <memset>:
 80052bc:	4603      	mov	r3, r0
 80052be:	4402      	add	r2, r0
 80052c0:	4293      	cmp	r3, r2
 80052c2:	d100      	bne.n	80052c6 <memset+0xa>
 80052c4:	4770      	bx	lr
 80052c6:	f803 1b01 	strb.w	r1, [r3], #1
 80052ca:	e7f9      	b.n	80052c0 <memset+0x4>

080052cc <_strtol_l.constprop.0>:
 80052cc:	2b01      	cmp	r3, #1
 80052ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052d2:	4680      	mov	r8, r0
 80052d4:	d001      	beq.n	80052da <_strtol_l.constprop.0+0xe>
 80052d6:	2b24      	cmp	r3, #36	; 0x24
 80052d8:	d906      	bls.n	80052e8 <_strtol_l.constprop.0+0x1c>
 80052da:	f7ff ffc5 	bl	8005268 <__errno>
 80052de:	2316      	movs	r3, #22
 80052e0:	6003      	str	r3, [r0, #0]
 80052e2:	2000      	movs	r0, #0
 80052e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80052e8:	460d      	mov	r5, r1
 80052ea:	4f35      	ldr	r7, [pc, #212]	; (80053c0 <_strtol_l.constprop.0+0xf4>)
 80052ec:	4628      	mov	r0, r5
 80052ee:	f815 4b01 	ldrb.w	r4, [r5], #1
 80052f2:	5de6      	ldrb	r6, [r4, r7]
 80052f4:	f016 0608 	ands.w	r6, r6, #8
 80052f8:	d1f8      	bne.n	80052ec <_strtol_l.constprop.0+0x20>
 80052fa:	2c2d      	cmp	r4, #45	; 0x2d
 80052fc:	d12f      	bne.n	800535e <_strtol_l.constprop.0+0x92>
 80052fe:	2601      	movs	r6, #1
 8005300:	782c      	ldrb	r4, [r5, #0]
 8005302:	1c85      	adds	r5, r0, #2
 8005304:	2b00      	cmp	r3, #0
 8005306:	d057      	beq.n	80053b8 <_strtol_l.constprop.0+0xec>
 8005308:	2b10      	cmp	r3, #16
 800530a:	d109      	bne.n	8005320 <_strtol_l.constprop.0+0x54>
 800530c:	2c30      	cmp	r4, #48	; 0x30
 800530e:	d107      	bne.n	8005320 <_strtol_l.constprop.0+0x54>
 8005310:	7828      	ldrb	r0, [r5, #0]
 8005312:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8005316:	2858      	cmp	r0, #88	; 0x58
 8005318:	d149      	bne.n	80053ae <_strtol_l.constprop.0+0xe2>
 800531a:	2310      	movs	r3, #16
 800531c:	786c      	ldrb	r4, [r5, #1]
 800531e:	3502      	adds	r5, #2
 8005320:	2700      	movs	r7, #0
 8005322:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 8005326:	f10e 3eff 	add.w	lr, lr, #4294967295
 800532a:	fbbe f9f3 	udiv	r9, lr, r3
 800532e:	4638      	mov	r0, r7
 8005330:	fb03 ea19 	mls	sl, r3, r9, lr
 8005334:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8005338:	f1bc 0f09 	cmp.w	ip, #9
 800533c:	d814      	bhi.n	8005368 <_strtol_l.constprop.0+0x9c>
 800533e:	4664      	mov	r4, ip
 8005340:	42a3      	cmp	r3, r4
 8005342:	dd22      	ble.n	800538a <_strtol_l.constprop.0+0xbe>
 8005344:	2f00      	cmp	r7, #0
 8005346:	db1d      	blt.n	8005384 <_strtol_l.constprop.0+0xb8>
 8005348:	4581      	cmp	r9, r0
 800534a:	d31b      	bcc.n	8005384 <_strtol_l.constprop.0+0xb8>
 800534c:	d101      	bne.n	8005352 <_strtol_l.constprop.0+0x86>
 800534e:	45a2      	cmp	sl, r4
 8005350:	db18      	blt.n	8005384 <_strtol_l.constprop.0+0xb8>
 8005352:	2701      	movs	r7, #1
 8005354:	fb00 4003 	mla	r0, r0, r3, r4
 8005358:	f815 4b01 	ldrb.w	r4, [r5], #1
 800535c:	e7ea      	b.n	8005334 <_strtol_l.constprop.0+0x68>
 800535e:	2c2b      	cmp	r4, #43	; 0x2b
 8005360:	bf04      	itt	eq
 8005362:	782c      	ldrbeq	r4, [r5, #0]
 8005364:	1c85      	addeq	r5, r0, #2
 8005366:	e7cd      	b.n	8005304 <_strtol_l.constprop.0+0x38>
 8005368:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800536c:	f1bc 0f19 	cmp.w	ip, #25
 8005370:	d801      	bhi.n	8005376 <_strtol_l.constprop.0+0xaa>
 8005372:	3c37      	subs	r4, #55	; 0x37
 8005374:	e7e4      	b.n	8005340 <_strtol_l.constprop.0+0x74>
 8005376:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800537a:	f1bc 0f19 	cmp.w	ip, #25
 800537e:	d804      	bhi.n	800538a <_strtol_l.constprop.0+0xbe>
 8005380:	3c57      	subs	r4, #87	; 0x57
 8005382:	e7dd      	b.n	8005340 <_strtol_l.constprop.0+0x74>
 8005384:	f04f 37ff 	mov.w	r7, #4294967295
 8005388:	e7e6      	b.n	8005358 <_strtol_l.constprop.0+0x8c>
 800538a:	2f00      	cmp	r7, #0
 800538c:	da07      	bge.n	800539e <_strtol_l.constprop.0+0xd2>
 800538e:	2322      	movs	r3, #34	; 0x22
 8005390:	4670      	mov	r0, lr
 8005392:	f8c8 3000 	str.w	r3, [r8]
 8005396:	2a00      	cmp	r2, #0
 8005398:	d0a4      	beq.n	80052e4 <_strtol_l.constprop.0+0x18>
 800539a:	1e69      	subs	r1, r5, #1
 800539c:	e005      	b.n	80053aa <_strtol_l.constprop.0+0xde>
 800539e:	b106      	cbz	r6, 80053a2 <_strtol_l.constprop.0+0xd6>
 80053a0:	4240      	negs	r0, r0
 80053a2:	2a00      	cmp	r2, #0
 80053a4:	d09e      	beq.n	80052e4 <_strtol_l.constprop.0+0x18>
 80053a6:	2f00      	cmp	r7, #0
 80053a8:	d1f7      	bne.n	800539a <_strtol_l.constprop.0+0xce>
 80053aa:	6011      	str	r1, [r2, #0]
 80053ac:	e79a      	b.n	80052e4 <_strtol_l.constprop.0+0x18>
 80053ae:	2430      	movs	r4, #48	; 0x30
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d1b5      	bne.n	8005320 <_strtol_l.constprop.0+0x54>
 80053b4:	2308      	movs	r3, #8
 80053b6:	e7b3      	b.n	8005320 <_strtol_l.constprop.0+0x54>
 80053b8:	2c30      	cmp	r4, #48	; 0x30
 80053ba:	d0a9      	beq.n	8005310 <_strtol_l.constprop.0+0x44>
 80053bc:	230a      	movs	r3, #10
 80053be:	e7af      	b.n	8005320 <_strtol_l.constprop.0+0x54>
 80053c0:	08005419 	.word	0x08005419

080053c4 <strtol>:
 80053c4:	4613      	mov	r3, r2
 80053c6:	460a      	mov	r2, r1
 80053c8:	4601      	mov	r1, r0
 80053ca:	4802      	ldr	r0, [pc, #8]	; (80053d4 <strtol+0x10>)
 80053cc:	6800      	ldr	r0, [r0, #0]
 80053ce:	f7ff bf7d 	b.w	80052cc <_strtol_l.constprop.0>
 80053d2:	bf00      	nop
 80053d4:	20000478 	.word	0x20000478

080053d8 <_init>:
 80053d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053da:	bf00      	nop
 80053dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80053de:	bc08      	pop	{r3}
 80053e0:	469e      	mov	lr, r3
 80053e2:	4770      	bx	lr

080053e4 <_fini>:
 80053e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053e6:	bf00      	nop
 80053e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80053ea:	bc08      	pop	{r3}
 80053ec:	469e      	mov	lr, r3
 80053ee:	4770      	bx	lr
